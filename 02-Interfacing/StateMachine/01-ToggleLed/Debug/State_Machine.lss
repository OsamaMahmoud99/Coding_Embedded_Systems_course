
State_Machine.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000241a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  0000241a  000024ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  00800088  00800088  000024d6  2**0
                  ALLOC
  3 .stab         00001a7c  00000000  00000000  000024d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000015b0  00000000  00000000  00003f54  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00005504  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00005644  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  000057b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  000073fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  000082e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00009098  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  000091f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00009485  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00009c53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 a1 11 	jmp	0x2342	; 0x2342 <__vector_6>
      1c:	0c 94 3b 11 	jmp	0x2276	; 0x2276 <__vector_7>
      20:	0c 94 6e 11 	jmp	0x22dc	; 0x22dc <__vector_8>
      24:	0c 94 08 11 	jmp	0x2210	; 0x2210 <__vector_9>
      28:	0c 94 0a 0e 	jmp	0x1c14	; 0x1c14 <__vector_10>
      2c:	0c 94 d7 0d 	jmp	0x1bae	; 0x1bae <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e1       	ldi	r30, 0x1A	; 26
      68:	f4 e2       	ldi	r31, 0x24	; 36
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 38       	cpi	r26, 0x88	; 136
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a8 e8       	ldi	r26, 0x88	; 136
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a5 39       	cpi	r26, 0x95	; 149
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 a3 05 	call	0xb46	; 0xb46 <main>
      8a:	0c 94 0b 12 	jmp	0x2416	; 0x2416 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 f0 11 	jmp	0x23e0	; 0x23e0 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 e0 11 	jmp	0x23c0	; 0x23c0 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 fc 11 	jmp	0x23f8	; 0x23f8 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 e0 11 	jmp	0x23c0	; 0x23c0 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 fc 11 	jmp	0x23f8	; 0x23f8 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 d4 11 	jmp	0x23a8	; 0x23a8 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 f0 11 	jmp	0x23e0	; 0x23e0 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 e0 11 	jmp	0x23c0	; 0x23c0 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 fc 11 	jmp	0x23f8	; 0x23f8 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 e0 11 	jmp	0x23c0	; 0x23c0 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 fc 11 	jmp	0x23f8	; 0x23f8 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 e0 11 	jmp	0x23c0	; 0x23c0 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 fc 11 	jmp	0x23f8	; 0x23f8 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 e4 11 	jmp	0x23c8	; 0x23c8 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 00 12 	jmp	0x2400	; 0x2400 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <main>:

void APP_LED_Tasks( void );


int main(void)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
	APP_LED_Initialize();
     b4e:	0e 94 ac 05 	call	0xb58	; 0xb58 <APP_LED_Initialize>
	
	while(1)
	{
		APP_LED_Tasks();
     b52:	0e 94 b7 05 	call	0xb6e	; 0xb6e <APP_LED_Tasks>
     b56:	fd cf       	rjmp	.-6      	; 0xb52 <main+0xc>

00000b58 <APP_LED_Initialize>:
		
	return 0;
}

void APP_LED_Initialize( void )
{
     b58:	df 93       	push	r29
     b5a:	cf 93       	push	r28
     b5c:	cd b7       	in	r28, 0x3d	; 61
     b5e:	de b7       	in	r29, 0x3e	; 62
	DIO_Init();
     b60:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <DIO_Init>
	appledData.state = APP_LED_STATE_INIT;
     b64:	10 92 94 00 	sts	0x0094, r1
}
     b68:	cf 91       	pop	r28
     b6a:	df 91       	pop	r29
     b6c:	08 95       	ret

00000b6e <APP_LED_Tasks>:

void APP_LED_Tasks(void)
{
     b6e:	df 93       	push	r29
     b70:	cf 93       	push	r28
     b72:	cd b7       	in	r28, 0x3d	; 61
     b74:	de b7       	in	r29, 0x3e	; 62
     b76:	60 97       	sbiw	r28, 0x10	; 16
     b78:	0f b6       	in	r0, 0x3f	; 63
     b7a:	f8 94       	cli
     b7c:	de bf       	out	0x3e, r29	; 62
     b7e:	0f be       	out	0x3f, r0	; 63
     b80:	cd bf       	out	0x3d, r28	; 61
	switch(appledData.state)
     b82:	80 91 94 00 	lds	r24, 0x0094
     b86:	28 2f       	mov	r18, r24
     b88:	30 e0       	ldi	r19, 0x00	; 0
     b8a:	38 8b       	std	Y+16, r19	; 0x10
     b8c:	2f 87       	std	Y+15, r18	; 0x0f
     b8e:	8f 85       	ldd	r24, Y+15	; 0x0f
     b90:	98 89       	ldd	r25, Y+16	; 0x10
     b92:	81 30       	cpi	r24, 0x01	; 1
     b94:	91 05       	cpc	r25, r1
     b96:	79 f0       	breq	.+30     	; 0xbb6 <APP_LED_Tasks+0x48>
     b98:	2f 85       	ldd	r18, Y+15	; 0x0f
     b9a:	38 89       	ldd	r19, Y+16	; 0x10
     b9c:	22 30       	cpi	r18, 0x02	; 2
     b9e:	31 05       	cpc	r19, r1
     ba0:	09 f4       	brne	.+2      	; 0xba4 <APP_LED_Tasks+0x36>
     ba2:	7f c0       	rjmp	.+254    	; 0xca2 <APP_LED_Tasks+0x134>
     ba4:	8f 85       	ldd	r24, Y+15	; 0x0f
     ba6:	98 89       	ldd	r25, Y+16	; 0x10
     ba8:	00 97       	sbiw	r24, 0x00	; 0
     baa:	09 f0       	breq	.+2      	; 0xbae <APP_LED_Tasks+0x40>
     bac:	80 c0       	rjmp	.+256    	; 0xcae <APP_LED_Tasks+0x140>
	{
		case APP_LED_STATE_INIT:
		{
			appledData.state = APP_LED_STATE_WAIT;
     bae:	81 e0       	ldi	r24, 0x01	; 1
     bb0:	80 93 94 00 	sts	0x0094, r24
     bb4:	7c c0       	rjmp	.+248    	; 0xcae <APP_LED_Tasks+0x140>
			break;
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	aa ef       	ldi	r26, 0xFA	; 250
     bbc:	b3 e4       	ldi	r27, 0x43	; 67
     bbe:	8b 87       	std	Y+11, r24	; 0x0b
     bc0:	9c 87       	std	Y+12, r25	; 0x0c
     bc2:	ad 87       	std	Y+13, r26	; 0x0d
     bc4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     bc6:	6b 85       	ldd	r22, Y+11	; 0x0b
     bc8:	7c 85       	ldd	r23, Y+12	; 0x0c
     bca:	8d 85       	ldd	r24, Y+13	; 0x0d
     bcc:	9e 85       	ldd	r25, Y+14	; 0x0e
     bce:	20 e0       	ldi	r18, 0x00	; 0
     bd0:	30 e0       	ldi	r19, 0x00	; 0
     bd2:	4a ef       	ldi	r20, 0xFA	; 250
     bd4:	54 e4       	ldi	r21, 0x44	; 68
     bd6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     bda:	dc 01       	movw	r26, r24
     bdc:	cb 01       	movw	r24, r22
     bde:	8f 83       	std	Y+7, r24	; 0x07
     be0:	98 87       	std	Y+8, r25	; 0x08
     be2:	a9 87       	std	Y+9, r26	; 0x09
     be4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     be6:	6f 81       	ldd	r22, Y+7	; 0x07
     be8:	78 85       	ldd	r23, Y+8	; 0x08
     bea:	89 85       	ldd	r24, Y+9	; 0x09
     bec:	9a 85       	ldd	r25, Y+10	; 0x0a
     bee:	20 e0       	ldi	r18, 0x00	; 0
     bf0:	30 e0       	ldi	r19, 0x00	; 0
     bf2:	40 e8       	ldi	r20, 0x80	; 128
     bf4:	5f e3       	ldi	r21, 0x3F	; 63
     bf6:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     bfa:	88 23       	and	r24, r24
     bfc:	2c f4       	brge	.+10     	; 0xc08 <APP_LED_Tasks+0x9a>
		__ticks = 1;
     bfe:	81 e0       	ldi	r24, 0x01	; 1
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	9e 83       	std	Y+6, r25	; 0x06
     c04:	8d 83       	std	Y+5, r24	; 0x05
     c06:	3f c0       	rjmp	.+126    	; 0xc86 <APP_LED_Tasks+0x118>
	else if (__tmp > 65535)
     c08:	6f 81       	ldd	r22, Y+7	; 0x07
     c0a:	78 85       	ldd	r23, Y+8	; 0x08
     c0c:	89 85       	ldd	r24, Y+9	; 0x09
     c0e:	9a 85       	ldd	r25, Y+10	; 0x0a
     c10:	20 e0       	ldi	r18, 0x00	; 0
     c12:	3f ef       	ldi	r19, 0xFF	; 255
     c14:	4f e7       	ldi	r20, 0x7F	; 127
     c16:	57 e4       	ldi	r21, 0x47	; 71
     c18:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     c1c:	18 16       	cp	r1, r24
     c1e:	4c f5       	brge	.+82     	; 0xc72 <APP_LED_Tasks+0x104>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c20:	6b 85       	ldd	r22, Y+11	; 0x0b
     c22:	7c 85       	ldd	r23, Y+12	; 0x0c
     c24:	8d 85       	ldd	r24, Y+13	; 0x0d
     c26:	9e 85       	ldd	r25, Y+14	; 0x0e
     c28:	20 e0       	ldi	r18, 0x00	; 0
     c2a:	30 e0       	ldi	r19, 0x00	; 0
     c2c:	40 e2       	ldi	r20, 0x20	; 32
     c2e:	51 e4       	ldi	r21, 0x41	; 65
     c30:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     c34:	dc 01       	movw	r26, r24
     c36:	cb 01       	movw	r24, r22
     c38:	bc 01       	movw	r22, r24
     c3a:	cd 01       	movw	r24, r26
     c3c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     c40:	dc 01       	movw	r26, r24
     c42:	cb 01       	movw	r24, r22
     c44:	9e 83       	std	Y+6, r25	; 0x06
     c46:	8d 83       	std	Y+5, r24	; 0x05
     c48:	0f c0       	rjmp	.+30     	; 0xc68 <APP_LED_Tasks+0xfa>
     c4a:	88 ec       	ldi	r24, 0xC8	; 200
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	9c 83       	std	Y+4, r25	; 0x04
     c50:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c52:	8b 81       	ldd	r24, Y+3	; 0x03
     c54:	9c 81       	ldd	r25, Y+4	; 0x04
     c56:	01 97       	sbiw	r24, 0x01	; 1
     c58:	f1 f7       	brne	.-4      	; 0xc56 <APP_LED_Tasks+0xe8>
     c5a:	9c 83       	std	Y+4, r25	; 0x04
     c5c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c5e:	8d 81       	ldd	r24, Y+5	; 0x05
     c60:	9e 81       	ldd	r25, Y+6	; 0x06
     c62:	01 97       	sbiw	r24, 0x01	; 1
     c64:	9e 83       	std	Y+6, r25	; 0x06
     c66:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c68:	8d 81       	ldd	r24, Y+5	; 0x05
     c6a:	9e 81       	ldd	r25, Y+6	; 0x06
     c6c:	00 97       	sbiw	r24, 0x00	; 0
     c6e:	69 f7       	brne	.-38     	; 0xc4a <APP_LED_Tasks+0xdc>
     c70:	14 c0       	rjmp	.+40     	; 0xc9a <APP_LED_Tasks+0x12c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c72:	6f 81       	ldd	r22, Y+7	; 0x07
     c74:	78 85       	ldd	r23, Y+8	; 0x08
     c76:	89 85       	ldd	r24, Y+9	; 0x09
     c78:	9a 85       	ldd	r25, Y+10	; 0x0a
     c7a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     c7e:	dc 01       	movw	r26, r24
     c80:	cb 01       	movw	r24, r22
     c82:	9e 83       	std	Y+6, r25	; 0x06
     c84:	8d 83       	std	Y+5, r24	; 0x05
     c86:	8d 81       	ldd	r24, Y+5	; 0x05
     c88:	9e 81       	ldd	r25, Y+6	; 0x06
     c8a:	9a 83       	std	Y+2, r25	; 0x02
     c8c:	89 83       	std	Y+1, r24	; 0x01
     c8e:	89 81       	ldd	r24, Y+1	; 0x01
     c90:	9a 81       	ldd	r25, Y+2	; 0x02
     c92:	01 97       	sbiw	r24, 0x01	; 1
     c94:	f1 f7       	brne	.-4      	; 0xc92 <APP_LED_Tasks+0x124>
     c96:	9a 83       	std	Y+2, r25	; 0x02
     c98:	89 83       	std	Y+1, r24	; 0x01
		}
		case APP_LED_STATE_WAIT:
		{
			_delay_ms(500);
			appledData.state = APP_LED_STATE_BLINK_LED;
     c9a:	82 e0       	ldi	r24, 0x02	; 2
     c9c:	80 93 94 00 	sts	0x0094, r24
     ca0:	06 c0       	rjmp	.+12     	; 0xcae <APP_LED_Tasks+0x140>
			break;
		}
		case APP_LED_STATE_BLINK_LED:
		{
			DIO_TogglePin(LED_BLINKED);
     ca2:	80 e0       	ldi	r24, 0x00	; 0
     ca4:	0e 94 75 0a 	call	0x14ea	; 0x14ea <DIO_TogglePin>
			appledData.state = APP_LED_STATE_WAIT;
     ca8:	81 e0       	ldi	r24, 0x01	; 1
     caa:	80 93 94 00 	sts	0x0094, r24
			break;
		}
		
	}
	
}
     cae:	60 96       	adiw	r28, 0x10	; 16
     cb0:	0f b6       	in	r0, 0x3f	; 63
     cb2:	f8 94       	cli
     cb4:	de bf       	out	0x3e, r29	; 62
     cb6:	0f be       	out	0x3f, r0	; 63
     cb8:	cd bf       	out	0x3d, r28	; 61
     cba:	cf 91       	pop	r28
     cbc:	df 91       	pop	r29
     cbe:	08 95       	ret

00000cc0 <DIO_InitPin>:

#include "DIO_Interface.h"
#include "DIO_Private.h"

static void DIO_InitPin(DIO_Pin_type pin , DIO_PinStatus_type status)
{
     cc0:	df 93       	push	r29
     cc2:	cf 93       	push	r28
     cc4:	cd b7       	in	r28, 0x3d	; 61
     cc6:	de b7       	in	r29, 0x3e	; 62
     cc8:	2c 97       	sbiw	r28, 0x0c	; 12
     cca:	0f b6       	in	r0, 0x3f	; 63
     ccc:	f8 94       	cli
     cce:	de bf       	out	0x3e, r29	; 62
     cd0:	0f be       	out	0x3f, r0	; 63
     cd2:	cd bf       	out	0x3d, r28	; 61
     cd4:	8b 83       	std	Y+3, r24	; 0x03
     cd6:	6c 83       	std	Y+4, r22	; 0x04
	DIO_Port_type port = pin/8;
     cd8:	8b 81       	ldd	r24, Y+3	; 0x03
     cda:	86 95       	lsr	r24
     cdc:	86 95       	lsr	r24
     cde:	86 95       	lsr	r24
     ce0:	8a 83       	std	Y+2, r24	; 0x02
	u8 pin_num  = pin % 8;
     ce2:	8b 81       	ldd	r24, Y+3	; 0x03
     ce4:	87 70       	andi	r24, 0x07	; 7
     ce6:	89 83       	std	Y+1, r24	; 0x01
	switch(status)
     ce8:	8c 81       	ldd	r24, Y+4	; 0x04
     cea:	28 2f       	mov	r18, r24
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	3c 87       	std	Y+12, r19	; 0x0c
     cf0:	2b 87       	std	Y+11, r18	; 0x0b
     cf2:	8b 85       	ldd	r24, Y+11	; 0x0b
     cf4:	9c 85       	ldd	r25, Y+12	; 0x0c
     cf6:	81 30       	cpi	r24, 0x01	; 1
     cf8:	91 05       	cpc	r25, r1
     cfa:	09 f4       	brne	.+2      	; 0xcfe <DIO_InitPin+0x3e>
     cfc:	c9 c0       	rjmp	.+402    	; 0xe90 <DIO_InitPin+0x1d0>
     cfe:	2b 85       	ldd	r18, Y+11	; 0x0b
     d00:	3c 85       	ldd	r19, Y+12	; 0x0c
     d02:	22 30       	cpi	r18, 0x02	; 2
     d04:	31 05       	cpc	r19, r1
     d06:	09 f4       	brne	.+2      	; 0xd0a <DIO_InitPin+0x4a>
     d08:	85 c1       	rjmp	.+778    	; 0x1014 <DIO_InitPin+0x354>
     d0a:	8b 85       	ldd	r24, Y+11	; 0x0b
     d0c:	9c 85       	ldd	r25, Y+12	; 0x0c
     d0e:	00 97       	sbiw	r24, 0x00	; 0
     d10:	09 f0       	breq	.+2      	; 0xd14 <DIO_InitPin+0x54>
     d12:	3d c2       	rjmp	.+1146   	; 0x118e <DIO_InitPin+0x4ce>
	{
		case OUTPUT:
		switch(port)
     d14:	8a 81       	ldd	r24, Y+2	; 0x02
     d16:	28 2f       	mov	r18, r24
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	3a 87       	std	Y+10, r19	; 0x0a
     d1c:	29 87       	std	Y+9, r18	; 0x09
     d1e:	89 85       	ldd	r24, Y+9	; 0x09
     d20:	9a 85       	ldd	r25, Y+10	; 0x0a
     d22:	81 30       	cpi	r24, 0x01	; 1
     d24:	91 05       	cpc	r25, r1
     d26:	09 f4       	brne	.+2      	; 0xd2a <DIO_InitPin+0x6a>
     d28:	3e c0       	rjmp	.+124    	; 0xda6 <DIO_InitPin+0xe6>
     d2a:	29 85       	ldd	r18, Y+9	; 0x09
     d2c:	3a 85       	ldd	r19, Y+10	; 0x0a
     d2e:	22 30       	cpi	r18, 0x02	; 2
     d30:	31 05       	cpc	r19, r1
     d32:	2c f4       	brge	.+10     	; 0xd3e <DIO_InitPin+0x7e>
     d34:	89 85       	ldd	r24, Y+9	; 0x09
     d36:	9a 85       	ldd	r25, Y+10	; 0x0a
     d38:	00 97       	sbiw	r24, 0x00	; 0
     d3a:	71 f0       	breq	.+28     	; 0xd58 <DIO_InitPin+0x98>
     d3c:	28 c2       	rjmp	.+1104   	; 0x118e <DIO_InitPin+0x4ce>
     d3e:	29 85       	ldd	r18, Y+9	; 0x09
     d40:	3a 85       	ldd	r19, Y+10	; 0x0a
     d42:	22 30       	cpi	r18, 0x02	; 2
     d44:	31 05       	cpc	r19, r1
     d46:	09 f4       	brne	.+2      	; 0xd4a <DIO_InitPin+0x8a>
     d48:	55 c0       	rjmp	.+170    	; 0xdf4 <DIO_InitPin+0x134>
     d4a:	89 85       	ldd	r24, Y+9	; 0x09
     d4c:	9a 85       	ldd	r25, Y+10	; 0x0a
     d4e:	83 30       	cpi	r24, 0x03	; 3
     d50:	91 05       	cpc	r25, r1
     d52:	09 f4       	brne	.+2      	; 0xd56 <DIO_InitPin+0x96>
     d54:	76 c0       	rjmp	.+236    	; 0xe42 <DIO_InitPin+0x182>
     d56:	1b c2       	rjmp	.+1078   	; 0x118e <DIO_InitPin+0x4ce>
		{
			case PA:
			SET_BIT(DDRA , pin_num);
     d58:	aa e3       	ldi	r26, 0x3A	; 58
     d5a:	b0 e0       	ldi	r27, 0x00	; 0
     d5c:	ea e3       	ldi	r30, 0x3A	; 58
     d5e:	f0 e0       	ldi	r31, 0x00	; 0
     d60:	80 81       	ld	r24, Z
     d62:	48 2f       	mov	r20, r24
     d64:	89 81       	ldd	r24, Y+1	; 0x01
     d66:	28 2f       	mov	r18, r24
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	02 c0       	rjmp	.+4      	; 0xd74 <DIO_InitPin+0xb4>
     d70:	88 0f       	add	r24, r24
     d72:	99 1f       	adc	r25, r25
     d74:	2a 95       	dec	r18
     d76:	e2 f7       	brpl	.-8      	; 0xd70 <DIO_InitPin+0xb0>
     d78:	84 2b       	or	r24, r20
     d7a:	8c 93       	st	X, r24
			CLR_BIT(PORTA , pin_num);
     d7c:	ab e3       	ldi	r26, 0x3B	; 59
     d7e:	b0 e0       	ldi	r27, 0x00	; 0
     d80:	eb e3       	ldi	r30, 0x3B	; 59
     d82:	f0 e0       	ldi	r31, 0x00	; 0
     d84:	80 81       	ld	r24, Z
     d86:	48 2f       	mov	r20, r24
     d88:	89 81       	ldd	r24, Y+1	; 0x01
     d8a:	28 2f       	mov	r18, r24
     d8c:	30 e0       	ldi	r19, 0x00	; 0
     d8e:	81 e0       	ldi	r24, 0x01	; 1
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	02 2e       	mov	r0, r18
     d94:	02 c0       	rjmp	.+4      	; 0xd9a <DIO_InitPin+0xda>
     d96:	88 0f       	add	r24, r24
     d98:	99 1f       	adc	r25, r25
     d9a:	0a 94       	dec	r0
     d9c:	e2 f7       	brpl	.-8      	; 0xd96 <DIO_InitPin+0xd6>
     d9e:	80 95       	com	r24
     da0:	84 23       	and	r24, r20
     da2:	8c 93       	st	X, r24
     da4:	f4 c1       	rjmp	.+1000   	; 0x118e <DIO_InitPin+0x4ce>
			break;
			case PB:
			SET_BIT(DDRB , pin_num);
     da6:	a7 e3       	ldi	r26, 0x37	; 55
     da8:	b0 e0       	ldi	r27, 0x00	; 0
     daa:	e7 e3       	ldi	r30, 0x37	; 55
     dac:	f0 e0       	ldi	r31, 0x00	; 0
     dae:	80 81       	ld	r24, Z
     db0:	48 2f       	mov	r20, r24
     db2:	89 81       	ldd	r24, Y+1	; 0x01
     db4:	28 2f       	mov	r18, r24
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	81 e0       	ldi	r24, 0x01	; 1
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <DIO_InitPin+0x102>
     dbe:	88 0f       	add	r24, r24
     dc0:	99 1f       	adc	r25, r25
     dc2:	2a 95       	dec	r18
     dc4:	e2 f7       	brpl	.-8      	; 0xdbe <DIO_InitPin+0xfe>
     dc6:	84 2b       	or	r24, r20
     dc8:	8c 93       	st	X, r24
			CLR_BIT(PORTB , pin_num);
     dca:	a8 e3       	ldi	r26, 0x38	; 56
     dcc:	b0 e0       	ldi	r27, 0x00	; 0
     dce:	e8 e3       	ldi	r30, 0x38	; 56
     dd0:	f0 e0       	ldi	r31, 0x00	; 0
     dd2:	80 81       	ld	r24, Z
     dd4:	48 2f       	mov	r20, r24
     dd6:	89 81       	ldd	r24, Y+1	; 0x01
     dd8:	28 2f       	mov	r18, r24
     dda:	30 e0       	ldi	r19, 0x00	; 0
     ddc:	81 e0       	ldi	r24, 0x01	; 1
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	02 2e       	mov	r0, r18
     de2:	02 c0       	rjmp	.+4      	; 0xde8 <DIO_InitPin+0x128>
     de4:	88 0f       	add	r24, r24
     de6:	99 1f       	adc	r25, r25
     de8:	0a 94       	dec	r0
     dea:	e2 f7       	brpl	.-8      	; 0xde4 <DIO_InitPin+0x124>
     dec:	80 95       	com	r24
     dee:	84 23       	and	r24, r20
     df0:	8c 93       	st	X, r24
     df2:	cd c1       	rjmp	.+922    	; 0x118e <DIO_InitPin+0x4ce>
			break;
			case PC:
			SET_BIT(DDRC , pin_num);
     df4:	a4 e3       	ldi	r26, 0x34	; 52
     df6:	b0 e0       	ldi	r27, 0x00	; 0
     df8:	e4 e3       	ldi	r30, 0x34	; 52
     dfa:	f0 e0       	ldi	r31, 0x00	; 0
     dfc:	80 81       	ld	r24, Z
     dfe:	48 2f       	mov	r20, r24
     e00:	89 81       	ldd	r24, Y+1	; 0x01
     e02:	28 2f       	mov	r18, r24
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	81 e0       	ldi	r24, 0x01	; 1
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	02 c0       	rjmp	.+4      	; 0xe10 <DIO_InitPin+0x150>
     e0c:	88 0f       	add	r24, r24
     e0e:	99 1f       	adc	r25, r25
     e10:	2a 95       	dec	r18
     e12:	e2 f7       	brpl	.-8      	; 0xe0c <DIO_InitPin+0x14c>
     e14:	84 2b       	or	r24, r20
     e16:	8c 93       	st	X, r24
			CLR_BIT(PORTC , pin_num);
     e18:	a5 e3       	ldi	r26, 0x35	; 53
     e1a:	b0 e0       	ldi	r27, 0x00	; 0
     e1c:	e5 e3       	ldi	r30, 0x35	; 53
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	80 81       	ld	r24, Z
     e22:	48 2f       	mov	r20, r24
     e24:	89 81       	ldd	r24, Y+1	; 0x01
     e26:	28 2f       	mov	r18, r24
     e28:	30 e0       	ldi	r19, 0x00	; 0
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	02 2e       	mov	r0, r18
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <DIO_InitPin+0x176>
     e32:	88 0f       	add	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	0a 94       	dec	r0
     e38:	e2 f7       	brpl	.-8      	; 0xe32 <DIO_InitPin+0x172>
     e3a:	80 95       	com	r24
     e3c:	84 23       	and	r24, r20
     e3e:	8c 93       	st	X, r24
     e40:	a6 c1       	rjmp	.+844    	; 0x118e <DIO_InitPin+0x4ce>
			break;
			case PD:
			SET_BIT(DDRD , pin_num);
     e42:	a1 e3       	ldi	r26, 0x31	; 49
     e44:	b0 e0       	ldi	r27, 0x00	; 0
     e46:	e1 e3       	ldi	r30, 0x31	; 49
     e48:	f0 e0       	ldi	r31, 0x00	; 0
     e4a:	80 81       	ld	r24, Z
     e4c:	48 2f       	mov	r20, r24
     e4e:	89 81       	ldd	r24, Y+1	; 0x01
     e50:	28 2f       	mov	r18, r24
     e52:	30 e0       	ldi	r19, 0x00	; 0
     e54:	81 e0       	ldi	r24, 0x01	; 1
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <DIO_InitPin+0x19e>
     e5a:	88 0f       	add	r24, r24
     e5c:	99 1f       	adc	r25, r25
     e5e:	2a 95       	dec	r18
     e60:	e2 f7       	brpl	.-8      	; 0xe5a <DIO_InitPin+0x19a>
     e62:	84 2b       	or	r24, r20
     e64:	8c 93       	st	X, r24
			CLR_BIT(PORTD , pin_num);
     e66:	a2 e3       	ldi	r26, 0x32	; 50
     e68:	b0 e0       	ldi	r27, 0x00	; 0
     e6a:	e2 e3       	ldi	r30, 0x32	; 50
     e6c:	f0 e0       	ldi	r31, 0x00	; 0
     e6e:	80 81       	ld	r24, Z
     e70:	48 2f       	mov	r20, r24
     e72:	89 81       	ldd	r24, Y+1	; 0x01
     e74:	28 2f       	mov	r18, r24
     e76:	30 e0       	ldi	r19, 0x00	; 0
     e78:	81 e0       	ldi	r24, 0x01	; 1
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	02 2e       	mov	r0, r18
     e7e:	02 c0       	rjmp	.+4      	; 0xe84 <DIO_InitPin+0x1c4>
     e80:	88 0f       	add	r24, r24
     e82:	99 1f       	adc	r25, r25
     e84:	0a 94       	dec	r0
     e86:	e2 f7       	brpl	.-8      	; 0xe80 <DIO_InitPin+0x1c0>
     e88:	80 95       	com	r24
     e8a:	84 23       	and	r24, r20
     e8c:	8c 93       	st	X, r24
     e8e:	7f c1       	rjmp	.+766    	; 0x118e <DIO_InitPin+0x4ce>
			break;
		}
		break;
		case INFREE:
		switch(port)
     e90:	8a 81       	ldd	r24, Y+2	; 0x02
     e92:	28 2f       	mov	r18, r24
     e94:	30 e0       	ldi	r19, 0x00	; 0
     e96:	38 87       	std	Y+8, r19	; 0x08
     e98:	2f 83       	std	Y+7, r18	; 0x07
     e9a:	8f 81       	ldd	r24, Y+7	; 0x07
     e9c:	98 85       	ldd	r25, Y+8	; 0x08
     e9e:	81 30       	cpi	r24, 0x01	; 1
     ea0:	91 05       	cpc	r25, r1
     ea2:	09 f4       	brne	.+2      	; 0xea6 <DIO_InitPin+0x1e6>
     ea4:	3f c0       	rjmp	.+126    	; 0xf24 <DIO_InitPin+0x264>
     ea6:	2f 81       	ldd	r18, Y+7	; 0x07
     ea8:	38 85       	ldd	r19, Y+8	; 0x08
     eaa:	22 30       	cpi	r18, 0x02	; 2
     eac:	31 05       	cpc	r19, r1
     eae:	2c f4       	brge	.+10     	; 0xeba <DIO_InitPin+0x1fa>
     eb0:	8f 81       	ldd	r24, Y+7	; 0x07
     eb2:	98 85       	ldd	r25, Y+8	; 0x08
     eb4:	00 97       	sbiw	r24, 0x00	; 0
     eb6:	71 f0       	breq	.+28     	; 0xed4 <DIO_InitPin+0x214>
     eb8:	6a c1       	rjmp	.+724    	; 0x118e <DIO_InitPin+0x4ce>
     eba:	2f 81       	ldd	r18, Y+7	; 0x07
     ebc:	38 85       	ldd	r19, Y+8	; 0x08
     ebe:	22 30       	cpi	r18, 0x02	; 2
     ec0:	31 05       	cpc	r19, r1
     ec2:	09 f4       	brne	.+2      	; 0xec6 <DIO_InitPin+0x206>
     ec4:	57 c0       	rjmp	.+174    	; 0xf74 <DIO_InitPin+0x2b4>
     ec6:	8f 81       	ldd	r24, Y+7	; 0x07
     ec8:	98 85       	ldd	r25, Y+8	; 0x08
     eca:	83 30       	cpi	r24, 0x03	; 3
     ecc:	91 05       	cpc	r25, r1
     ece:	09 f4       	brne	.+2      	; 0xed2 <DIO_InitPin+0x212>
     ed0:	79 c0       	rjmp	.+242    	; 0xfc4 <DIO_InitPin+0x304>
     ed2:	5d c1       	rjmp	.+698    	; 0x118e <DIO_InitPin+0x4ce>
		{
			case PA:
			CLR_BIT(DDRA , pin_num);
     ed4:	aa e3       	ldi	r26, 0x3A	; 58
     ed6:	b0 e0       	ldi	r27, 0x00	; 0
     ed8:	ea e3       	ldi	r30, 0x3A	; 58
     eda:	f0 e0       	ldi	r31, 0x00	; 0
     edc:	80 81       	ld	r24, Z
     ede:	48 2f       	mov	r20, r24
     ee0:	89 81       	ldd	r24, Y+1	; 0x01
     ee2:	28 2f       	mov	r18, r24
     ee4:	30 e0       	ldi	r19, 0x00	; 0
     ee6:	81 e0       	ldi	r24, 0x01	; 1
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	02 c0       	rjmp	.+4      	; 0xef0 <DIO_InitPin+0x230>
     eec:	88 0f       	add	r24, r24
     eee:	99 1f       	adc	r25, r25
     ef0:	2a 95       	dec	r18
     ef2:	e2 f7       	brpl	.-8      	; 0xeec <DIO_InitPin+0x22c>
     ef4:	80 95       	com	r24
     ef6:	84 23       	and	r24, r20
     ef8:	8c 93       	st	X, r24
			CLR_BIT(PORTA , pin_num);
     efa:	ab e3       	ldi	r26, 0x3B	; 59
     efc:	b0 e0       	ldi	r27, 0x00	; 0
     efe:	eb e3       	ldi	r30, 0x3B	; 59
     f00:	f0 e0       	ldi	r31, 0x00	; 0
     f02:	80 81       	ld	r24, Z
     f04:	48 2f       	mov	r20, r24
     f06:	89 81       	ldd	r24, Y+1	; 0x01
     f08:	28 2f       	mov	r18, r24
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	81 e0       	ldi	r24, 0x01	; 1
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	02 2e       	mov	r0, r18
     f12:	02 c0       	rjmp	.+4      	; 0xf18 <DIO_InitPin+0x258>
     f14:	88 0f       	add	r24, r24
     f16:	99 1f       	adc	r25, r25
     f18:	0a 94       	dec	r0
     f1a:	e2 f7       	brpl	.-8      	; 0xf14 <DIO_InitPin+0x254>
     f1c:	80 95       	com	r24
     f1e:	84 23       	and	r24, r20
     f20:	8c 93       	st	X, r24
     f22:	35 c1       	rjmp	.+618    	; 0x118e <DIO_InitPin+0x4ce>
			break;
			case PB:
			CLR_BIT(DDRB , pin_num);
     f24:	a7 e3       	ldi	r26, 0x37	; 55
     f26:	b0 e0       	ldi	r27, 0x00	; 0
     f28:	e7 e3       	ldi	r30, 0x37	; 55
     f2a:	f0 e0       	ldi	r31, 0x00	; 0
     f2c:	80 81       	ld	r24, Z
     f2e:	48 2f       	mov	r20, r24
     f30:	89 81       	ldd	r24, Y+1	; 0x01
     f32:	28 2f       	mov	r18, r24
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	81 e0       	ldi	r24, 0x01	; 1
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	02 c0       	rjmp	.+4      	; 0xf40 <DIO_InitPin+0x280>
     f3c:	88 0f       	add	r24, r24
     f3e:	99 1f       	adc	r25, r25
     f40:	2a 95       	dec	r18
     f42:	e2 f7       	brpl	.-8      	; 0xf3c <DIO_InitPin+0x27c>
     f44:	80 95       	com	r24
     f46:	84 23       	and	r24, r20
     f48:	8c 93       	st	X, r24
			CLR_BIT(PORTB , pin_num);
     f4a:	a8 e3       	ldi	r26, 0x38	; 56
     f4c:	b0 e0       	ldi	r27, 0x00	; 0
     f4e:	e8 e3       	ldi	r30, 0x38	; 56
     f50:	f0 e0       	ldi	r31, 0x00	; 0
     f52:	80 81       	ld	r24, Z
     f54:	48 2f       	mov	r20, r24
     f56:	89 81       	ldd	r24, Y+1	; 0x01
     f58:	28 2f       	mov	r18, r24
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	81 e0       	ldi	r24, 0x01	; 1
     f5e:	90 e0       	ldi	r25, 0x00	; 0
     f60:	02 2e       	mov	r0, r18
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <DIO_InitPin+0x2a8>
     f64:	88 0f       	add	r24, r24
     f66:	99 1f       	adc	r25, r25
     f68:	0a 94       	dec	r0
     f6a:	e2 f7       	brpl	.-8      	; 0xf64 <DIO_InitPin+0x2a4>
     f6c:	80 95       	com	r24
     f6e:	84 23       	and	r24, r20
     f70:	8c 93       	st	X, r24
     f72:	0d c1       	rjmp	.+538    	; 0x118e <DIO_InitPin+0x4ce>
			break;
			case PC:
		    CLR_BIT(DDRC , pin_num);
     f74:	a4 e3       	ldi	r26, 0x34	; 52
     f76:	b0 e0       	ldi	r27, 0x00	; 0
     f78:	e4 e3       	ldi	r30, 0x34	; 52
     f7a:	f0 e0       	ldi	r31, 0x00	; 0
     f7c:	80 81       	ld	r24, Z
     f7e:	48 2f       	mov	r20, r24
     f80:	89 81       	ldd	r24, Y+1	; 0x01
     f82:	28 2f       	mov	r18, r24
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	81 e0       	ldi	r24, 0x01	; 1
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	02 c0       	rjmp	.+4      	; 0xf90 <DIO_InitPin+0x2d0>
     f8c:	88 0f       	add	r24, r24
     f8e:	99 1f       	adc	r25, r25
     f90:	2a 95       	dec	r18
     f92:	e2 f7       	brpl	.-8      	; 0xf8c <DIO_InitPin+0x2cc>
     f94:	80 95       	com	r24
     f96:	84 23       	and	r24, r20
     f98:	8c 93       	st	X, r24
			CLR_BIT(PORTC , pin_num);
     f9a:	a5 e3       	ldi	r26, 0x35	; 53
     f9c:	b0 e0       	ldi	r27, 0x00	; 0
     f9e:	e5 e3       	ldi	r30, 0x35	; 53
     fa0:	f0 e0       	ldi	r31, 0x00	; 0
     fa2:	80 81       	ld	r24, Z
     fa4:	48 2f       	mov	r20, r24
     fa6:	89 81       	ldd	r24, Y+1	; 0x01
     fa8:	28 2f       	mov	r18, r24
     faa:	30 e0       	ldi	r19, 0x00	; 0
     fac:	81 e0       	ldi	r24, 0x01	; 1
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	02 2e       	mov	r0, r18
     fb2:	02 c0       	rjmp	.+4      	; 0xfb8 <DIO_InitPin+0x2f8>
     fb4:	88 0f       	add	r24, r24
     fb6:	99 1f       	adc	r25, r25
     fb8:	0a 94       	dec	r0
     fba:	e2 f7       	brpl	.-8      	; 0xfb4 <DIO_InitPin+0x2f4>
     fbc:	80 95       	com	r24
     fbe:	84 23       	and	r24, r20
     fc0:	8c 93       	st	X, r24
     fc2:	e5 c0       	rjmp	.+458    	; 0x118e <DIO_InitPin+0x4ce>
			break;
			case PD:
			CLR_BIT(DDRD , pin_num);
     fc4:	a1 e3       	ldi	r26, 0x31	; 49
     fc6:	b0 e0       	ldi	r27, 0x00	; 0
     fc8:	e1 e3       	ldi	r30, 0x31	; 49
     fca:	f0 e0       	ldi	r31, 0x00	; 0
     fcc:	80 81       	ld	r24, Z
     fce:	48 2f       	mov	r20, r24
     fd0:	89 81       	ldd	r24, Y+1	; 0x01
     fd2:	28 2f       	mov	r18, r24
     fd4:	30 e0       	ldi	r19, 0x00	; 0
     fd6:	81 e0       	ldi	r24, 0x01	; 1
     fd8:	90 e0       	ldi	r25, 0x00	; 0
     fda:	02 c0       	rjmp	.+4      	; 0xfe0 <DIO_InitPin+0x320>
     fdc:	88 0f       	add	r24, r24
     fde:	99 1f       	adc	r25, r25
     fe0:	2a 95       	dec	r18
     fe2:	e2 f7       	brpl	.-8      	; 0xfdc <DIO_InitPin+0x31c>
     fe4:	80 95       	com	r24
     fe6:	84 23       	and	r24, r20
     fe8:	8c 93       	st	X, r24
			CLR_BIT(PORTD , pin_num);
     fea:	a2 e3       	ldi	r26, 0x32	; 50
     fec:	b0 e0       	ldi	r27, 0x00	; 0
     fee:	e2 e3       	ldi	r30, 0x32	; 50
     ff0:	f0 e0       	ldi	r31, 0x00	; 0
     ff2:	80 81       	ld	r24, Z
     ff4:	48 2f       	mov	r20, r24
     ff6:	89 81       	ldd	r24, Y+1	; 0x01
     ff8:	28 2f       	mov	r18, r24
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	81 e0       	ldi	r24, 0x01	; 1
     ffe:	90 e0       	ldi	r25, 0x00	; 0
    1000:	02 2e       	mov	r0, r18
    1002:	02 c0       	rjmp	.+4      	; 0x1008 <DIO_InitPin+0x348>
    1004:	88 0f       	add	r24, r24
    1006:	99 1f       	adc	r25, r25
    1008:	0a 94       	dec	r0
    100a:	e2 f7       	brpl	.-8      	; 0x1004 <DIO_InitPin+0x344>
    100c:	80 95       	com	r24
    100e:	84 23       	and	r24, r20
    1010:	8c 93       	st	X, r24
    1012:	bd c0       	rjmp	.+378    	; 0x118e <DIO_InitPin+0x4ce>
			break;
		}
		break;
		case INPULLUP:
		switch(port)
    1014:	8a 81       	ldd	r24, Y+2	; 0x02
    1016:	28 2f       	mov	r18, r24
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	3e 83       	std	Y+6, r19	; 0x06
    101c:	2d 83       	std	Y+5, r18	; 0x05
    101e:	8d 81       	ldd	r24, Y+5	; 0x05
    1020:	9e 81       	ldd	r25, Y+6	; 0x06
    1022:	81 30       	cpi	r24, 0x01	; 1
    1024:	91 05       	cpc	r25, r1
    1026:	09 f4       	brne	.+2      	; 0x102a <DIO_InitPin+0x36a>
    1028:	3e c0       	rjmp	.+124    	; 0x10a6 <DIO_InitPin+0x3e6>
    102a:	2d 81       	ldd	r18, Y+5	; 0x05
    102c:	3e 81       	ldd	r19, Y+6	; 0x06
    102e:	22 30       	cpi	r18, 0x02	; 2
    1030:	31 05       	cpc	r19, r1
    1032:	2c f4       	brge	.+10     	; 0x103e <DIO_InitPin+0x37e>
    1034:	8d 81       	ldd	r24, Y+5	; 0x05
    1036:	9e 81       	ldd	r25, Y+6	; 0x06
    1038:	00 97       	sbiw	r24, 0x00	; 0
    103a:	71 f0       	breq	.+28     	; 0x1058 <DIO_InitPin+0x398>
    103c:	a8 c0       	rjmp	.+336    	; 0x118e <DIO_InitPin+0x4ce>
    103e:	2d 81       	ldd	r18, Y+5	; 0x05
    1040:	3e 81       	ldd	r19, Y+6	; 0x06
    1042:	22 30       	cpi	r18, 0x02	; 2
    1044:	31 05       	cpc	r19, r1
    1046:	09 f4       	brne	.+2      	; 0x104a <DIO_InitPin+0x38a>
    1048:	55 c0       	rjmp	.+170    	; 0x10f4 <DIO_InitPin+0x434>
    104a:	8d 81       	ldd	r24, Y+5	; 0x05
    104c:	9e 81       	ldd	r25, Y+6	; 0x06
    104e:	83 30       	cpi	r24, 0x03	; 3
    1050:	91 05       	cpc	r25, r1
    1052:	09 f4       	brne	.+2      	; 0x1056 <DIO_InitPin+0x396>
    1054:	76 c0       	rjmp	.+236    	; 0x1142 <DIO_InitPin+0x482>
    1056:	9b c0       	rjmp	.+310    	; 0x118e <DIO_InitPin+0x4ce>
		{
			case PA:
			CLR_BIT(DDRA , pin_num);
    1058:	aa e3       	ldi	r26, 0x3A	; 58
    105a:	b0 e0       	ldi	r27, 0x00	; 0
    105c:	ea e3       	ldi	r30, 0x3A	; 58
    105e:	f0 e0       	ldi	r31, 0x00	; 0
    1060:	80 81       	ld	r24, Z
    1062:	48 2f       	mov	r20, r24
    1064:	89 81       	ldd	r24, Y+1	; 0x01
    1066:	28 2f       	mov	r18, r24
    1068:	30 e0       	ldi	r19, 0x00	; 0
    106a:	81 e0       	ldi	r24, 0x01	; 1
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	02 c0       	rjmp	.+4      	; 0x1074 <DIO_InitPin+0x3b4>
    1070:	88 0f       	add	r24, r24
    1072:	99 1f       	adc	r25, r25
    1074:	2a 95       	dec	r18
    1076:	e2 f7       	brpl	.-8      	; 0x1070 <DIO_InitPin+0x3b0>
    1078:	80 95       	com	r24
    107a:	84 23       	and	r24, r20
    107c:	8c 93       	st	X, r24
			SET_BIT(PORTA , pin_num);
    107e:	ab e3       	ldi	r26, 0x3B	; 59
    1080:	b0 e0       	ldi	r27, 0x00	; 0
    1082:	eb e3       	ldi	r30, 0x3B	; 59
    1084:	f0 e0       	ldi	r31, 0x00	; 0
    1086:	80 81       	ld	r24, Z
    1088:	48 2f       	mov	r20, r24
    108a:	89 81       	ldd	r24, Y+1	; 0x01
    108c:	28 2f       	mov	r18, r24
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	81 e0       	ldi	r24, 0x01	; 1
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	02 2e       	mov	r0, r18
    1096:	02 c0       	rjmp	.+4      	; 0x109c <DIO_InitPin+0x3dc>
    1098:	88 0f       	add	r24, r24
    109a:	99 1f       	adc	r25, r25
    109c:	0a 94       	dec	r0
    109e:	e2 f7       	brpl	.-8      	; 0x1098 <DIO_InitPin+0x3d8>
    10a0:	84 2b       	or	r24, r20
    10a2:	8c 93       	st	X, r24
    10a4:	74 c0       	rjmp	.+232    	; 0x118e <DIO_InitPin+0x4ce>
			break;
			case PB:
			CLR_BIT(DDRB , pin_num);
    10a6:	a7 e3       	ldi	r26, 0x37	; 55
    10a8:	b0 e0       	ldi	r27, 0x00	; 0
    10aa:	e7 e3       	ldi	r30, 0x37	; 55
    10ac:	f0 e0       	ldi	r31, 0x00	; 0
    10ae:	80 81       	ld	r24, Z
    10b0:	48 2f       	mov	r20, r24
    10b2:	89 81       	ldd	r24, Y+1	; 0x01
    10b4:	28 2f       	mov	r18, r24
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	02 c0       	rjmp	.+4      	; 0x10c2 <DIO_InitPin+0x402>
    10be:	88 0f       	add	r24, r24
    10c0:	99 1f       	adc	r25, r25
    10c2:	2a 95       	dec	r18
    10c4:	e2 f7       	brpl	.-8      	; 0x10be <DIO_InitPin+0x3fe>
    10c6:	80 95       	com	r24
    10c8:	84 23       	and	r24, r20
    10ca:	8c 93       	st	X, r24
			SET_BIT(PORTB , pin_num);
    10cc:	a8 e3       	ldi	r26, 0x38	; 56
    10ce:	b0 e0       	ldi	r27, 0x00	; 0
    10d0:	e8 e3       	ldi	r30, 0x38	; 56
    10d2:	f0 e0       	ldi	r31, 0x00	; 0
    10d4:	80 81       	ld	r24, Z
    10d6:	48 2f       	mov	r20, r24
    10d8:	89 81       	ldd	r24, Y+1	; 0x01
    10da:	28 2f       	mov	r18, r24
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	81 e0       	ldi	r24, 0x01	; 1
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	02 2e       	mov	r0, r18
    10e4:	02 c0       	rjmp	.+4      	; 0x10ea <DIO_InitPin+0x42a>
    10e6:	88 0f       	add	r24, r24
    10e8:	99 1f       	adc	r25, r25
    10ea:	0a 94       	dec	r0
    10ec:	e2 f7       	brpl	.-8      	; 0x10e6 <DIO_InitPin+0x426>
    10ee:	84 2b       	or	r24, r20
    10f0:	8c 93       	st	X, r24
    10f2:	4d c0       	rjmp	.+154    	; 0x118e <DIO_InitPin+0x4ce>
			break;
			case PC:
			CLR_BIT(DDRC , pin_num);
    10f4:	a4 e3       	ldi	r26, 0x34	; 52
    10f6:	b0 e0       	ldi	r27, 0x00	; 0
    10f8:	e4 e3       	ldi	r30, 0x34	; 52
    10fa:	f0 e0       	ldi	r31, 0x00	; 0
    10fc:	80 81       	ld	r24, Z
    10fe:	48 2f       	mov	r20, r24
    1100:	89 81       	ldd	r24, Y+1	; 0x01
    1102:	28 2f       	mov	r18, r24
    1104:	30 e0       	ldi	r19, 0x00	; 0
    1106:	81 e0       	ldi	r24, 0x01	; 1
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	02 c0       	rjmp	.+4      	; 0x1110 <DIO_InitPin+0x450>
    110c:	88 0f       	add	r24, r24
    110e:	99 1f       	adc	r25, r25
    1110:	2a 95       	dec	r18
    1112:	e2 f7       	brpl	.-8      	; 0x110c <DIO_InitPin+0x44c>
    1114:	80 95       	com	r24
    1116:	84 23       	and	r24, r20
    1118:	8c 93       	st	X, r24
			SET_BIT(PORTC , pin_num);
    111a:	a5 e3       	ldi	r26, 0x35	; 53
    111c:	b0 e0       	ldi	r27, 0x00	; 0
    111e:	e5 e3       	ldi	r30, 0x35	; 53
    1120:	f0 e0       	ldi	r31, 0x00	; 0
    1122:	80 81       	ld	r24, Z
    1124:	48 2f       	mov	r20, r24
    1126:	89 81       	ldd	r24, Y+1	; 0x01
    1128:	28 2f       	mov	r18, r24
    112a:	30 e0       	ldi	r19, 0x00	; 0
    112c:	81 e0       	ldi	r24, 0x01	; 1
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	02 2e       	mov	r0, r18
    1132:	02 c0       	rjmp	.+4      	; 0x1138 <DIO_InitPin+0x478>
    1134:	88 0f       	add	r24, r24
    1136:	99 1f       	adc	r25, r25
    1138:	0a 94       	dec	r0
    113a:	e2 f7       	brpl	.-8      	; 0x1134 <DIO_InitPin+0x474>
    113c:	84 2b       	or	r24, r20
    113e:	8c 93       	st	X, r24
    1140:	26 c0       	rjmp	.+76     	; 0x118e <DIO_InitPin+0x4ce>
			break;
			case PD:
			CLR_BIT(DDRD , pin_num);
    1142:	a1 e3       	ldi	r26, 0x31	; 49
    1144:	b0 e0       	ldi	r27, 0x00	; 0
    1146:	e1 e3       	ldi	r30, 0x31	; 49
    1148:	f0 e0       	ldi	r31, 0x00	; 0
    114a:	80 81       	ld	r24, Z
    114c:	48 2f       	mov	r20, r24
    114e:	89 81       	ldd	r24, Y+1	; 0x01
    1150:	28 2f       	mov	r18, r24
    1152:	30 e0       	ldi	r19, 0x00	; 0
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	02 c0       	rjmp	.+4      	; 0x115e <DIO_InitPin+0x49e>
    115a:	88 0f       	add	r24, r24
    115c:	99 1f       	adc	r25, r25
    115e:	2a 95       	dec	r18
    1160:	e2 f7       	brpl	.-8      	; 0x115a <DIO_InitPin+0x49a>
    1162:	80 95       	com	r24
    1164:	84 23       	and	r24, r20
    1166:	8c 93       	st	X, r24
			SET_BIT(PORTD , pin_num);
    1168:	a2 e3       	ldi	r26, 0x32	; 50
    116a:	b0 e0       	ldi	r27, 0x00	; 0
    116c:	e2 e3       	ldi	r30, 0x32	; 50
    116e:	f0 e0       	ldi	r31, 0x00	; 0
    1170:	80 81       	ld	r24, Z
    1172:	48 2f       	mov	r20, r24
    1174:	89 81       	ldd	r24, Y+1	; 0x01
    1176:	28 2f       	mov	r18, r24
    1178:	30 e0       	ldi	r19, 0x00	; 0
    117a:	81 e0       	ldi	r24, 0x01	; 1
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	02 2e       	mov	r0, r18
    1180:	02 c0       	rjmp	.+4      	; 0x1186 <DIO_InitPin+0x4c6>
    1182:	88 0f       	add	r24, r24
    1184:	99 1f       	adc	r25, r25
    1186:	0a 94       	dec	r0
    1188:	e2 f7       	brpl	.-8      	; 0x1182 <DIO_InitPin+0x4c2>
    118a:	84 2b       	or	r24, r20
    118c:	8c 93       	st	X, r24
			break;
		}
		break;
	}
}
    118e:	2c 96       	adiw	r28, 0x0c	; 12
    1190:	0f b6       	in	r0, 0x3f	; 63
    1192:	f8 94       	cli
    1194:	de bf       	out	0x3e, r29	; 62
    1196:	0f be       	out	0x3f, r0	; 63
    1198:	cd bf       	out	0x3d, r28	; 61
    119a:	cf 91       	pop	r28
    119c:	df 91       	pop	r29
    119e:	08 95       	ret

000011a0 <DIO_Init>:


void DIO_Init(void)
{
    11a0:	df 93       	push	r29
    11a2:	cf 93       	push	r28
    11a4:	0f 92       	push	r0
    11a6:	cd b7       	in	r28, 0x3d	; 61
    11a8:	de b7       	in	r29, 0x3e	; 62
	DIO_Pin_type counter;
	for (counter=PINA0; counter<TOTAL_PINS; ++counter)
    11aa:	19 82       	std	Y+1, r1	; 0x01
    11ac:	0e c0       	rjmp	.+28     	; 0x11ca <DIO_Init+0x2a>
	{
		DIO_InitPin(counter , PinsStatusArray[counter]);
    11ae:	89 81       	ldd	r24, Y+1	; 0x01
    11b0:	88 2f       	mov	r24, r24
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	fc 01       	movw	r30, r24
    11b6:	e8 59       	subi	r30, 0x98	; 152
    11b8:	ff 4f       	sbci	r31, 0xFF	; 255
    11ba:	90 81       	ld	r25, Z
    11bc:	89 81       	ldd	r24, Y+1	; 0x01
    11be:	69 2f       	mov	r22, r25
    11c0:	0e 94 60 06 	call	0xcc0	; 0xcc0 <DIO_InitPin>


void DIO_Init(void)
{
	DIO_Pin_type counter;
	for (counter=PINA0; counter<TOTAL_PINS; ++counter)
    11c4:	89 81       	ldd	r24, Y+1	; 0x01
    11c6:	8f 5f       	subi	r24, 0xFF	; 255
    11c8:	89 83       	std	Y+1, r24	; 0x01
    11ca:	89 81       	ldd	r24, Y+1	; 0x01
    11cc:	80 32       	cpi	r24, 0x20	; 32
    11ce:	78 f3       	brcs	.-34     	; 0x11ae <DIO_Init+0xe>
	{
		DIO_InitPin(counter , PinsStatusArray[counter]);
	}
}
    11d0:	0f 90       	pop	r0
    11d2:	cf 91       	pop	r28
    11d4:	df 91       	pop	r29
    11d6:	08 95       	ret

000011d8 <DIO_WritePin>:

void DIO_WritePin(DIO_Pin_type pin, DIO_PinVoltage_type volt)
{
    11d8:	df 93       	push	r29
    11da:	cf 93       	push	r28
    11dc:	cd b7       	in	r28, 0x3d	; 61
    11de:	de b7       	in	r29, 0x3e	; 62
    11e0:	28 97       	sbiw	r28, 0x08	; 8
    11e2:	0f b6       	in	r0, 0x3f	; 63
    11e4:	f8 94       	cli
    11e6:	de bf       	out	0x3e, r29	; 62
    11e8:	0f be       	out	0x3f, r0	; 63
    11ea:	cd bf       	out	0x3d, r28	; 61
    11ec:	8b 83       	std	Y+3, r24	; 0x03
    11ee:	6c 83       	std	Y+4, r22	; 0x04
	DIO_Port_type port = pin/8;
    11f0:	8b 81       	ldd	r24, Y+3	; 0x03
    11f2:	86 95       	lsr	r24
    11f4:	86 95       	lsr	r24
    11f6:	86 95       	lsr	r24
    11f8:	8a 83       	std	Y+2, r24	; 0x02
	u8 pin_num  = pin % 8;
    11fa:	8b 81       	ldd	r24, Y+3	; 0x03
    11fc:	87 70       	andi	r24, 0x07	; 7
    11fe:	89 83       	std	Y+1, r24	; 0x01
	
	if (volt == LOW)
    1200:	8c 81       	ldd	r24, Y+4	; 0x04
    1202:	88 23       	and	r24, r24
    1204:	09 f0       	breq	.+2      	; 0x1208 <DIO_WritePin+0x30>
    1206:	74 c0       	rjmp	.+232    	; 0x12f0 <DIO_WritePin+0x118>
	{
		switch(port)
    1208:	8a 81       	ldd	r24, Y+2	; 0x02
    120a:	28 2f       	mov	r18, r24
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	38 87       	std	Y+8, r19	; 0x08
    1210:	2f 83       	std	Y+7, r18	; 0x07
    1212:	8f 81       	ldd	r24, Y+7	; 0x07
    1214:	98 85       	ldd	r25, Y+8	; 0x08
    1216:	81 30       	cpi	r24, 0x01	; 1
    1218:	91 05       	cpc	r25, r1
    121a:	59 f1       	breq	.+86     	; 0x1272 <DIO_WritePin+0x9a>
    121c:	2f 81       	ldd	r18, Y+7	; 0x07
    121e:	38 85       	ldd	r19, Y+8	; 0x08
    1220:	22 30       	cpi	r18, 0x02	; 2
    1222:	31 05       	cpc	r19, r1
    1224:	2c f4       	brge	.+10     	; 0x1230 <DIO_WritePin+0x58>
    1226:	8f 81       	ldd	r24, Y+7	; 0x07
    1228:	98 85       	ldd	r25, Y+8	; 0x08
    122a:	00 97       	sbiw	r24, 0x00	; 0
    122c:	69 f0       	breq	.+26     	; 0x1248 <DIO_WritePin+0x70>
    122e:	d2 c0       	rjmp	.+420    	; 0x13d4 <DIO_WritePin+0x1fc>
    1230:	2f 81       	ldd	r18, Y+7	; 0x07
    1232:	38 85       	ldd	r19, Y+8	; 0x08
    1234:	22 30       	cpi	r18, 0x02	; 2
    1236:	31 05       	cpc	r19, r1
    1238:	89 f1       	breq	.+98     	; 0x129c <DIO_WritePin+0xc4>
    123a:	8f 81       	ldd	r24, Y+7	; 0x07
    123c:	98 85       	ldd	r25, Y+8	; 0x08
    123e:	83 30       	cpi	r24, 0x03	; 3
    1240:	91 05       	cpc	r25, r1
    1242:	09 f4       	brne	.+2      	; 0x1246 <DIO_WritePin+0x6e>
    1244:	40 c0       	rjmp	.+128    	; 0x12c6 <DIO_WritePin+0xee>
    1246:	c6 c0       	rjmp	.+396    	; 0x13d4 <DIO_WritePin+0x1fc>
		{
			case PA:
			CLR_BIT(PORTA,pin_num);
    1248:	ab e3       	ldi	r26, 0x3B	; 59
    124a:	b0 e0       	ldi	r27, 0x00	; 0
    124c:	eb e3       	ldi	r30, 0x3B	; 59
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	80 81       	ld	r24, Z
    1252:	48 2f       	mov	r20, r24
    1254:	89 81       	ldd	r24, Y+1	; 0x01
    1256:	28 2f       	mov	r18, r24
    1258:	30 e0       	ldi	r19, 0x00	; 0
    125a:	81 e0       	ldi	r24, 0x01	; 1
    125c:	90 e0       	ldi	r25, 0x00	; 0
    125e:	02 2e       	mov	r0, r18
    1260:	02 c0       	rjmp	.+4      	; 0x1266 <DIO_WritePin+0x8e>
    1262:	88 0f       	add	r24, r24
    1264:	99 1f       	adc	r25, r25
    1266:	0a 94       	dec	r0
    1268:	e2 f7       	brpl	.-8      	; 0x1262 <DIO_WritePin+0x8a>
    126a:	80 95       	com	r24
    126c:	84 23       	and	r24, r20
    126e:	8c 93       	st	X, r24
    1270:	b1 c0       	rjmp	.+354    	; 0x13d4 <DIO_WritePin+0x1fc>
			break;
			case PB:
			CLR_BIT(PORTB,pin_num);
    1272:	a8 e3       	ldi	r26, 0x38	; 56
    1274:	b0 e0       	ldi	r27, 0x00	; 0
    1276:	e8 e3       	ldi	r30, 0x38	; 56
    1278:	f0 e0       	ldi	r31, 0x00	; 0
    127a:	80 81       	ld	r24, Z
    127c:	48 2f       	mov	r20, r24
    127e:	89 81       	ldd	r24, Y+1	; 0x01
    1280:	28 2f       	mov	r18, r24
    1282:	30 e0       	ldi	r19, 0x00	; 0
    1284:	81 e0       	ldi	r24, 0x01	; 1
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	02 2e       	mov	r0, r18
    128a:	02 c0       	rjmp	.+4      	; 0x1290 <DIO_WritePin+0xb8>
    128c:	88 0f       	add	r24, r24
    128e:	99 1f       	adc	r25, r25
    1290:	0a 94       	dec	r0
    1292:	e2 f7       	brpl	.-8      	; 0x128c <DIO_WritePin+0xb4>
    1294:	80 95       	com	r24
    1296:	84 23       	and	r24, r20
    1298:	8c 93       	st	X, r24
    129a:	9c c0       	rjmp	.+312    	; 0x13d4 <DIO_WritePin+0x1fc>
			break;
			case PC:
			CLR_BIT(PORTC,pin_num);
    129c:	a5 e3       	ldi	r26, 0x35	; 53
    129e:	b0 e0       	ldi	r27, 0x00	; 0
    12a0:	e5 e3       	ldi	r30, 0x35	; 53
    12a2:	f0 e0       	ldi	r31, 0x00	; 0
    12a4:	80 81       	ld	r24, Z
    12a6:	48 2f       	mov	r20, r24
    12a8:	89 81       	ldd	r24, Y+1	; 0x01
    12aa:	28 2f       	mov	r18, r24
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	81 e0       	ldi	r24, 0x01	; 1
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	02 2e       	mov	r0, r18
    12b4:	02 c0       	rjmp	.+4      	; 0x12ba <DIO_WritePin+0xe2>
    12b6:	88 0f       	add	r24, r24
    12b8:	99 1f       	adc	r25, r25
    12ba:	0a 94       	dec	r0
    12bc:	e2 f7       	brpl	.-8      	; 0x12b6 <DIO_WritePin+0xde>
    12be:	80 95       	com	r24
    12c0:	84 23       	and	r24, r20
    12c2:	8c 93       	st	X, r24
    12c4:	87 c0       	rjmp	.+270    	; 0x13d4 <DIO_WritePin+0x1fc>
			break;
			case PD:
			CLR_BIT(PORTD,pin_num);
    12c6:	a2 e3       	ldi	r26, 0x32	; 50
    12c8:	b0 e0       	ldi	r27, 0x00	; 0
    12ca:	e2 e3       	ldi	r30, 0x32	; 50
    12cc:	f0 e0       	ldi	r31, 0x00	; 0
    12ce:	80 81       	ld	r24, Z
    12d0:	48 2f       	mov	r20, r24
    12d2:	89 81       	ldd	r24, Y+1	; 0x01
    12d4:	28 2f       	mov	r18, r24
    12d6:	30 e0       	ldi	r19, 0x00	; 0
    12d8:	81 e0       	ldi	r24, 0x01	; 1
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	02 2e       	mov	r0, r18
    12de:	02 c0       	rjmp	.+4      	; 0x12e4 <DIO_WritePin+0x10c>
    12e0:	88 0f       	add	r24, r24
    12e2:	99 1f       	adc	r25, r25
    12e4:	0a 94       	dec	r0
    12e6:	e2 f7       	brpl	.-8      	; 0x12e0 <DIO_WritePin+0x108>
    12e8:	80 95       	com	r24
    12ea:	84 23       	and	r24, r20
    12ec:	8c 93       	st	X, r24
    12ee:	72 c0       	rjmp	.+228    	; 0x13d4 <DIO_WritePin+0x1fc>
			break;
		}
	}
	else if (volt == HIGH)
    12f0:	8c 81       	ldd	r24, Y+4	; 0x04
    12f2:	81 30       	cpi	r24, 0x01	; 1
    12f4:	09 f0       	breq	.+2      	; 0x12f8 <DIO_WritePin+0x120>
    12f6:	6e c0       	rjmp	.+220    	; 0x13d4 <DIO_WritePin+0x1fc>
	{
		switch(port)
    12f8:	8a 81       	ldd	r24, Y+2	; 0x02
    12fa:	28 2f       	mov	r18, r24
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	3e 83       	std	Y+6, r19	; 0x06
    1300:	2d 83       	std	Y+5, r18	; 0x05
    1302:	8d 81       	ldd	r24, Y+5	; 0x05
    1304:	9e 81       	ldd	r25, Y+6	; 0x06
    1306:	81 30       	cpi	r24, 0x01	; 1
    1308:	91 05       	cpc	r25, r1
    130a:	49 f1       	breq	.+82     	; 0x135e <DIO_WritePin+0x186>
    130c:	2d 81       	ldd	r18, Y+5	; 0x05
    130e:	3e 81       	ldd	r19, Y+6	; 0x06
    1310:	22 30       	cpi	r18, 0x02	; 2
    1312:	31 05       	cpc	r19, r1
    1314:	2c f4       	brge	.+10     	; 0x1320 <DIO_WritePin+0x148>
    1316:	8d 81       	ldd	r24, Y+5	; 0x05
    1318:	9e 81       	ldd	r25, Y+6	; 0x06
    131a:	00 97       	sbiw	r24, 0x00	; 0
    131c:	61 f0       	breq	.+24     	; 0x1336 <DIO_WritePin+0x15e>
    131e:	5a c0       	rjmp	.+180    	; 0x13d4 <DIO_WritePin+0x1fc>
    1320:	2d 81       	ldd	r18, Y+5	; 0x05
    1322:	3e 81       	ldd	r19, Y+6	; 0x06
    1324:	22 30       	cpi	r18, 0x02	; 2
    1326:	31 05       	cpc	r19, r1
    1328:	71 f1       	breq	.+92     	; 0x1386 <DIO_WritePin+0x1ae>
    132a:	8d 81       	ldd	r24, Y+5	; 0x05
    132c:	9e 81       	ldd	r25, Y+6	; 0x06
    132e:	83 30       	cpi	r24, 0x03	; 3
    1330:	91 05       	cpc	r25, r1
    1332:	e9 f1       	breq	.+122    	; 0x13ae <DIO_WritePin+0x1d6>
    1334:	4f c0       	rjmp	.+158    	; 0x13d4 <DIO_WritePin+0x1fc>
		{
			case PA:
			SET_BIT(PORTA,pin_num);
    1336:	ab e3       	ldi	r26, 0x3B	; 59
    1338:	b0 e0       	ldi	r27, 0x00	; 0
    133a:	eb e3       	ldi	r30, 0x3B	; 59
    133c:	f0 e0       	ldi	r31, 0x00	; 0
    133e:	80 81       	ld	r24, Z
    1340:	48 2f       	mov	r20, r24
    1342:	89 81       	ldd	r24, Y+1	; 0x01
    1344:	28 2f       	mov	r18, r24
    1346:	30 e0       	ldi	r19, 0x00	; 0
    1348:	81 e0       	ldi	r24, 0x01	; 1
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	02 2e       	mov	r0, r18
    134e:	02 c0       	rjmp	.+4      	; 0x1354 <DIO_WritePin+0x17c>
    1350:	88 0f       	add	r24, r24
    1352:	99 1f       	adc	r25, r25
    1354:	0a 94       	dec	r0
    1356:	e2 f7       	brpl	.-8      	; 0x1350 <DIO_WritePin+0x178>
    1358:	84 2b       	or	r24, r20
    135a:	8c 93       	st	X, r24
    135c:	3b c0       	rjmp	.+118    	; 0x13d4 <DIO_WritePin+0x1fc>
			break;
			case PB:
			SET_BIT(PORTB,pin_num);
    135e:	a8 e3       	ldi	r26, 0x38	; 56
    1360:	b0 e0       	ldi	r27, 0x00	; 0
    1362:	e8 e3       	ldi	r30, 0x38	; 56
    1364:	f0 e0       	ldi	r31, 0x00	; 0
    1366:	80 81       	ld	r24, Z
    1368:	48 2f       	mov	r20, r24
    136a:	89 81       	ldd	r24, Y+1	; 0x01
    136c:	28 2f       	mov	r18, r24
    136e:	30 e0       	ldi	r19, 0x00	; 0
    1370:	81 e0       	ldi	r24, 0x01	; 1
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	02 2e       	mov	r0, r18
    1376:	02 c0       	rjmp	.+4      	; 0x137c <DIO_WritePin+0x1a4>
    1378:	88 0f       	add	r24, r24
    137a:	99 1f       	adc	r25, r25
    137c:	0a 94       	dec	r0
    137e:	e2 f7       	brpl	.-8      	; 0x1378 <DIO_WritePin+0x1a0>
    1380:	84 2b       	or	r24, r20
    1382:	8c 93       	st	X, r24
    1384:	27 c0       	rjmp	.+78     	; 0x13d4 <DIO_WritePin+0x1fc>
			break;
			case PC:
			SET_BIT(PORTC,pin_num);
    1386:	a5 e3       	ldi	r26, 0x35	; 53
    1388:	b0 e0       	ldi	r27, 0x00	; 0
    138a:	e5 e3       	ldi	r30, 0x35	; 53
    138c:	f0 e0       	ldi	r31, 0x00	; 0
    138e:	80 81       	ld	r24, Z
    1390:	48 2f       	mov	r20, r24
    1392:	89 81       	ldd	r24, Y+1	; 0x01
    1394:	28 2f       	mov	r18, r24
    1396:	30 e0       	ldi	r19, 0x00	; 0
    1398:	81 e0       	ldi	r24, 0x01	; 1
    139a:	90 e0       	ldi	r25, 0x00	; 0
    139c:	02 2e       	mov	r0, r18
    139e:	02 c0       	rjmp	.+4      	; 0x13a4 <DIO_WritePin+0x1cc>
    13a0:	88 0f       	add	r24, r24
    13a2:	99 1f       	adc	r25, r25
    13a4:	0a 94       	dec	r0
    13a6:	e2 f7       	brpl	.-8      	; 0x13a0 <DIO_WritePin+0x1c8>
    13a8:	84 2b       	or	r24, r20
    13aa:	8c 93       	st	X, r24
    13ac:	13 c0       	rjmp	.+38     	; 0x13d4 <DIO_WritePin+0x1fc>
			break;
			case PD:
			SET_BIT(PORTD,pin_num);
    13ae:	a2 e3       	ldi	r26, 0x32	; 50
    13b0:	b0 e0       	ldi	r27, 0x00	; 0
    13b2:	e2 e3       	ldi	r30, 0x32	; 50
    13b4:	f0 e0       	ldi	r31, 0x00	; 0
    13b6:	80 81       	ld	r24, Z
    13b8:	48 2f       	mov	r20, r24
    13ba:	89 81       	ldd	r24, Y+1	; 0x01
    13bc:	28 2f       	mov	r18, r24
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	81 e0       	ldi	r24, 0x01	; 1
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	02 2e       	mov	r0, r18
    13c6:	02 c0       	rjmp	.+4      	; 0x13cc <DIO_WritePin+0x1f4>
    13c8:	88 0f       	add	r24, r24
    13ca:	99 1f       	adc	r25, r25
    13cc:	0a 94       	dec	r0
    13ce:	e2 f7       	brpl	.-8      	; 0x13c8 <DIO_WritePin+0x1f0>
    13d0:	84 2b       	or	r24, r20
    13d2:	8c 93       	st	X, r24
			break;
		}
	}
}
    13d4:	28 96       	adiw	r28, 0x08	; 8
    13d6:	0f b6       	in	r0, 0x3f	; 63
    13d8:	f8 94       	cli
    13da:	de bf       	out	0x3e, r29	; 62
    13dc:	0f be       	out	0x3f, r0	; 63
    13de:	cd bf       	out	0x3d, r28	; 61
    13e0:	cf 91       	pop	r28
    13e2:	df 91       	pop	r29
    13e4:	08 95       	ret

000013e6 <DIO_ReadPin>:

DIO_PinVoltage_type DIO_ReadPin(DIO_Pin_type pin)
{
    13e6:	df 93       	push	r29
    13e8:	cf 93       	push	r28
    13ea:	00 d0       	rcall	.+0      	; 0x13ec <DIO_ReadPin+0x6>
    13ec:	00 d0       	rcall	.+0      	; 0x13ee <DIO_ReadPin+0x8>
    13ee:	00 d0       	rcall	.+0      	; 0x13f0 <DIO_ReadPin+0xa>
    13f0:	cd b7       	in	r28, 0x3d	; 61
    13f2:	de b7       	in	r29, 0x3e	; 62
    13f4:	8c 83       	std	Y+4, r24	; 0x04
	DIO_PinVoltage_type volt = LOW;
    13f6:	1b 82       	std	Y+3, r1	; 0x03
	DIO_Port_type port = pin/8;
    13f8:	8c 81       	ldd	r24, Y+4	; 0x04
    13fa:	86 95       	lsr	r24
    13fc:	86 95       	lsr	r24
    13fe:	86 95       	lsr	r24
    1400:	8a 83       	std	Y+2, r24	; 0x02
	u8 pin_num  = pin % 8;
    1402:	8c 81       	ldd	r24, Y+4	; 0x04
    1404:	87 70       	andi	r24, 0x07	; 7
    1406:	89 83       	std	Y+1, r24	; 0x01
	
	switch (port)
    1408:	8a 81       	ldd	r24, Y+2	; 0x02
    140a:	28 2f       	mov	r18, r24
    140c:	30 e0       	ldi	r19, 0x00	; 0
    140e:	3e 83       	std	Y+6, r19	; 0x06
    1410:	2d 83       	std	Y+5, r18	; 0x05
    1412:	4d 81       	ldd	r20, Y+5	; 0x05
    1414:	5e 81       	ldd	r21, Y+6	; 0x06
    1416:	41 30       	cpi	r20, 0x01	; 1
    1418:	51 05       	cpc	r21, r1
    141a:	41 f1       	breq	.+80     	; 0x146c <DIO_ReadPin+0x86>
    141c:	8d 81       	ldd	r24, Y+5	; 0x05
    141e:	9e 81       	ldd	r25, Y+6	; 0x06
    1420:	82 30       	cpi	r24, 0x02	; 2
    1422:	91 05       	cpc	r25, r1
    1424:	34 f4       	brge	.+12     	; 0x1432 <DIO_ReadPin+0x4c>
    1426:	2d 81       	ldd	r18, Y+5	; 0x05
    1428:	3e 81       	ldd	r19, Y+6	; 0x06
    142a:	21 15       	cp	r18, r1
    142c:	31 05       	cpc	r19, r1
    142e:	61 f0       	breq	.+24     	; 0x1448 <DIO_ReadPin+0x62>
    1430:	52 c0       	rjmp	.+164    	; 0x14d6 <DIO_ReadPin+0xf0>
    1432:	4d 81       	ldd	r20, Y+5	; 0x05
    1434:	5e 81       	ldd	r21, Y+6	; 0x06
    1436:	42 30       	cpi	r20, 0x02	; 2
    1438:	51 05       	cpc	r21, r1
    143a:	51 f1       	breq	.+84     	; 0x1490 <DIO_ReadPin+0xaa>
    143c:	8d 81       	ldd	r24, Y+5	; 0x05
    143e:	9e 81       	ldd	r25, Y+6	; 0x06
    1440:	83 30       	cpi	r24, 0x03	; 3
    1442:	91 05       	cpc	r25, r1
    1444:	b9 f1       	breq	.+110    	; 0x14b4 <DIO_ReadPin+0xce>
    1446:	47 c0       	rjmp	.+142    	; 0x14d6 <DIO_ReadPin+0xf0>
	{
		case PA:
		volt = READ_BIT(PINA,pin_num);
    1448:	e9 e3       	ldi	r30, 0x39	; 57
    144a:	f0 e0       	ldi	r31, 0x00	; 0
    144c:	80 81       	ld	r24, Z
    144e:	28 2f       	mov	r18, r24
    1450:	30 e0       	ldi	r19, 0x00	; 0
    1452:	89 81       	ldd	r24, Y+1	; 0x01
    1454:	88 2f       	mov	r24, r24
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	a9 01       	movw	r20, r18
    145a:	02 c0       	rjmp	.+4      	; 0x1460 <DIO_ReadPin+0x7a>
    145c:	55 95       	asr	r21
    145e:	47 95       	ror	r20
    1460:	8a 95       	dec	r24
    1462:	e2 f7       	brpl	.-8      	; 0x145c <DIO_ReadPin+0x76>
    1464:	ca 01       	movw	r24, r20
    1466:	81 70       	andi	r24, 0x01	; 1
    1468:	8b 83       	std	Y+3, r24	; 0x03
    146a:	35 c0       	rjmp	.+106    	; 0x14d6 <DIO_ReadPin+0xf0>
		break;
		case PB:
		volt = READ_BIT(PINB,pin_num);
    146c:	e6 e3       	ldi	r30, 0x36	; 54
    146e:	f0 e0       	ldi	r31, 0x00	; 0
    1470:	80 81       	ld	r24, Z
    1472:	28 2f       	mov	r18, r24
    1474:	30 e0       	ldi	r19, 0x00	; 0
    1476:	89 81       	ldd	r24, Y+1	; 0x01
    1478:	88 2f       	mov	r24, r24
    147a:	90 e0       	ldi	r25, 0x00	; 0
    147c:	a9 01       	movw	r20, r18
    147e:	02 c0       	rjmp	.+4      	; 0x1484 <DIO_ReadPin+0x9e>
    1480:	55 95       	asr	r21
    1482:	47 95       	ror	r20
    1484:	8a 95       	dec	r24
    1486:	e2 f7       	brpl	.-8      	; 0x1480 <DIO_ReadPin+0x9a>
    1488:	ca 01       	movw	r24, r20
    148a:	81 70       	andi	r24, 0x01	; 1
    148c:	8b 83       	std	Y+3, r24	; 0x03
    148e:	23 c0       	rjmp	.+70     	; 0x14d6 <DIO_ReadPin+0xf0>
		break;
		case PC:
		volt = READ_BIT(PINC,pin_num);
    1490:	e3 e3       	ldi	r30, 0x33	; 51
    1492:	f0 e0       	ldi	r31, 0x00	; 0
    1494:	80 81       	ld	r24, Z
    1496:	28 2f       	mov	r18, r24
    1498:	30 e0       	ldi	r19, 0x00	; 0
    149a:	89 81       	ldd	r24, Y+1	; 0x01
    149c:	88 2f       	mov	r24, r24
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	a9 01       	movw	r20, r18
    14a2:	02 c0       	rjmp	.+4      	; 0x14a8 <DIO_ReadPin+0xc2>
    14a4:	55 95       	asr	r21
    14a6:	47 95       	ror	r20
    14a8:	8a 95       	dec	r24
    14aa:	e2 f7       	brpl	.-8      	; 0x14a4 <DIO_ReadPin+0xbe>
    14ac:	ca 01       	movw	r24, r20
    14ae:	81 70       	andi	r24, 0x01	; 1
    14b0:	8b 83       	std	Y+3, r24	; 0x03
    14b2:	11 c0       	rjmp	.+34     	; 0x14d6 <DIO_ReadPin+0xf0>
		break;
		case PD:
		volt = READ_BIT(PIND,pin_num);
    14b4:	e0 e3       	ldi	r30, 0x30	; 48
    14b6:	f0 e0       	ldi	r31, 0x00	; 0
    14b8:	80 81       	ld	r24, Z
    14ba:	28 2f       	mov	r18, r24
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	89 81       	ldd	r24, Y+1	; 0x01
    14c0:	88 2f       	mov	r24, r24
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	a9 01       	movw	r20, r18
    14c6:	02 c0       	rjmp	.+4      	; 0x14cc <DIO_ReadPin+0xe6>
    14c8:	55 95       	asr	r21
    14ca:	47 95       	ror	r20
    14cc:	8a 95       	dec	r24
    14ce:	e2 f7       	brpl	.-8      	; 0x14c8 <DIO_ReadPin+0xe2>
    14d0:	ca 01       	movw	r24, r20
    14d2:	81 70       	andi	r24, 0x01	; 1
    14d4:	8b 83       	std	Y+3, r24	; 0x03
		break;
	}
	return volt;
    14d6:	8b 81       	ldd	r24, Y+3	; 0x03
}
    14d8:	26 96       	adiw	r28, 0x06	; 6
    14da:	0f b6       	in	r0, 0x3f	; 63
    14dc:	f8 94       	cli
    14de:	de bf       	out	0x3e, r29	; 62
    14e0:	0f be       	out	0x3f, r0	; 63
    14e2:	cd bf       	out	0x3d, r28	; 61
    14e4:	cf 91       	pop	r28
    14e6:	df 91       	pop	r29
    14e8:	08 95       	ret

000014ea <DIO_TogglePin>:

void DIO_TogglePin(DIO_Pin_type pin)
{
    14ea:	df 93       	push	r29
    14ec:	cf 93       	push	r28
    14ee:	00 d0       	rcall	.+0      	; 0x14f0 <DIO_TogglePin+0x6>
    14f0:	00 d0       	rcall	.+0      	; 0x14f2 <DIO_TogglePin+0x8>
    14f2:	0f 92       	push	r0
    14f4:	cd b7       	in	r28, 0x3d	; 61
    14f6:	de b7       	in	r29, 0x3e	; 62
    14f8:	8b 83       	std	Y+3, r24	; 0x03
	DIO_Port_type port = pin/8;
    14fa:	8b 81       	ldd	r24, Y+3	; 0x03
    14fc:	86 95       	lsr	r24
    14fe:	86 95       	lsr	r24
    1500:	86 95       	lsr	r24
    1502:	8a 83       	std	Y+2, r24	; 0x02
	u8 pin_num  = pin % 8;
    1504:	8b 81       	ldd	r24, Y+3	; 0x03
    1506:	87 70       	andi	r24, 0x07	; 7
    1508:	89 83       	std	Y+1, r24	; 0x01
	switch (port)
    150a:	8a 81       	ldd	r24, Y+2	; 0x02
    150c:	28 2f       	mov	r18, r24
    150e:	30 e0       	ldi	r19, 0x00	; 0
    1510:	3d 83       	std	Y+5, r19	; 0x05
    1512:	2c 83       	std	Y+4, r18	; 0x04
    1514:	8c 81       	ldd	r24, Y+4	; 0x04
    1516:	9d 81       	ldd	r25, Y+5	; 0x05
    1518:	81 30       	cpi	r24, 0x01	; 1
    151a:	91 05       	cpc	r25, r1
    151c:	49 f1       	breq	.+82     	; 0x1570 <DIO_TogglePin+0x86>
    151e:	2c 81       	ldd	r18, Y+4	; 0x04
    1520:	3d 81       	ldd	r19, Y+5	; 0x05
    1522:	22 30       	cpi	r18, 0x02	; 2
    1524:	31 05       	cpc	r19, r1
    1526:	2c f4       	brge	.+10     	; 0x1532 <DIO_TogglePin+0x48>
    1528:	8c 81       	ldd	r24, Y+4	; 0x04
    152a:	9d 81       	ldd	r25, Y+5	; 0x05
    152c:	00 97       	sbiw	r24, 0x00	; 0
    152e:	61 f0       	breq	.+24     	; 0x1548 <DIO_TogglePin+0x5e>
    1530:	5a c0       	rjmp	.+180    	; 0x15e6 <DIO_TogglePin+0xfc>
    1532:	2c 81       	ldd	r18, Y+4	; 0x04
    1534:	3d 81       	ldd	r19, Y+5	; 0x05
    1536:	22 30       	cpi	r18, 0x02	; 2
    1538:	31 05       	cpc	r19, r1
    153a:	71 f1       	breq	.+92     	; 0x1598 <DIO_TogglePin+0xae>
    153c:	8c 81       	ldd	r24, Y+4	; 0x04
    153e:	9d 81       	ldd	r25, Y+5	; 0x05
    1540:	83 30       	cpi	r24, 0x03	; 3
    1542:	91 05       	cpc	r25, r1
    1544:	e9 f1       	breq	.+122    	; 0x15c0 <DIO_TogglePin+0xd6>
    1546:	4f c0       	rjmp	.+158    	; 0x15e6 <DIO_TogglePin+0xfc>
	{
		case PA:
		TOG_BIT(PORTA,pin_num);
    1548:	ab e3       	ldi	r26, 0x3B	; 59
    154a:	b0 e0       	ldi	r27, 0x00	; 0
    154c:	eb e3       	ldi	r30, 0x3B	; 59
    154e:	f0 e0       	ldi	r31, 0x00	; 0
    1550:	80 81       	ld	r24, Z
    1552:	48 2f       	mov	r20, r24
    1554:	89 81       	ldd	r24, Y+1	; 0x01
    1556:	28 2f       	mov	r18, r24
    1558:	30 e0       	ldi	r19, 0x00	; 0
    155a:	81 e0       	ldi	r24, 0x01	; 1
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	02 2e       	mov	r0, r18
    1560:	02 c0       	rjmp	.+4      	; 0x1566 <DIO_TogglePin+0x7c>
    1562:	88 0f       	add	r24, r24
    1564:	99 1f       	adc	r25, r25
    1566:	0a 94       	dec	r0
    1568:	e2 f7       	brpl	.-8      	; 0x1562 <DIO_TogglePin+0x78>
    156a:	84 27       	eor	r24, r20
    156c:	8c 93       	st	X, r24
    156e:	3b c0       	rjmp	.+118    	; 0x15e6 <DIO_TogglePin+0xfc>
		break;
		case PB:
		TOG_BIT(PORTB,pin_num);
    1570:	a8 e3       	ldi	r26, 0x38	; 56
    1572:	b0 e0       	ldi	r27, 0x00	; 0
    1574:	e8 e3       	ldi	r30, 0x38	; 56
    1576:	f0 e0       	ldi	r31, 0x00	; 0
    1578:	80 81       	ld	r24, Z
    157a:	48 2f       	mov	r20, r24
    157c:	89 81       	ldd	r24, Y+1	; 0x01
    157e:	28 2f       	mov	r18, r24
    1580:	30 e0       	ldi	r19, 0x00	; 0
    1582:	81 e0       	ldi	r24, 0x01	; 1
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	02 2e       	mov	r0, r18
    1588:	02 c0       	rjmp	.+4      	; 0x158e <DIO_TogglePin+0xa4>
    158a:	88 0f       	add	r24, r24
    158c:	99 1f       	adc	r25, r25
    158e:	0a 94       	dec	r0
    1590:	e2 f7       	brpl	.-8      	; 0x158a <DIO_TogglePin+0xa0>
    1592:	84 27       	eor	r24, r20
    1594:	8c 93       	st	X, r24
    1596:	27 c0       	rjmp	.+78     	; 0x15e6 <DIO_TogglePin+0xfc>
		break;
		case PC:
		TOG_BIT(PORTC,pin_num);
    1598:	a5 e3       	ldi	r26, 0x35	; 53
    159a:	b0 e0       	ldi	r27, 0x00	; 0
    159c:	e5 e3       	ldi	r30, 0x35	; 53
    159e:	f0 e0       	ldi	r31, 0x00	; 0
    15a0:	80 81       	ld	r24, Z
    15a2:	48 2f       	mov	r20, r24
    15a4:	89 81       	ldd	r24, Y+1	; 0x01
    15a6:	28 2f       	mov	r18, r24
    15a8:	30 e0       	ldi	r19, 0x00	; 0
    15aa:	81 e0       	ldi	r24, 0x01	; 1
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	02 2e       	mov	r0, r18
    15b0:	02 c0       	rjmp	.+4      	; 0x15b6 <DIO_TogglePin+0xcc>
    15b2:	88 0f       	add	r24, r24
    15b4:	99 1f       	adc	r25, r25
    15b6:	0a 94       	dec	r0
    15b8:	e2 f7       	brpl	.-8      	; 0x15b2 <DIO_TogglePin+0xc8>
    15ba:	84 27       	eor	r24, r20
    15bc:	8c 93       	st	X, r24
    15be:	13 c0       	rjmp	.+38     	; 0x15e6 <DIO_TogglePin+0xfc>
		break;
		case PD:
		TOG_BIT(PORTD,pin_num);
    15c0:	a2 e3       	ldi	r26, 0x32	; 50
    15c2:	b0 e0       	ldi	r27, 0x00	; 0
    15c4:	e2 e3       	ldi	r30, 0x32	; 50
    15c6:	f0 e0       	ldi	r31, 0x00	; 0
    15c8:	80 81       	ld	r24, Z
    15ca:	48 2f       	mov	r20, r24
    15cc:	89 81       	ldd	r24, Y+1	; 0x01
    15ce:	28 2f       	mov	r18, r24
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	81 e0       	ldi	r24, 0x01	; 1
    15d4:	90 e0       	ldi	r25, 0x00	; 0
    15d6:	02 2e       	mov	r0, r18
    15d8:	02 c0       	rjmp	.+4      	; 0x15de <DIO_TogglePin+0xf4>
    15da:	88 0f       	add	r24, r24
    15dc:	99 1f       	adc	r25, r25
    15de:	0a 94       	dec	r0
    15e0:	e2 f7       	brpl	.-8      	; 0x15da <DIO_TogglePin+0xf0>
    15e2:	84 27       	eor	r24, r20
    15e4:	8c 93       	st	X, r24
		break;
	}
}
    15e6:	0f 90       	pop	r0
    15e8:	0f 90       	pop	r0
    15ea:	0f 90       	pop	r0
    15ec:	0f 90       	pop	r0
    15ee:	0f 90       	pop	r0
    15f0:	cf 91       	pop	r28
    15f2:	df 91       	pop	r29
    15f4:	08 95       	ret

000015f6 <DIO_WritePort>:

void DIO_WritePort(DIO_Port_type port , u8 Value)
{
    15f6:	df 93       	push	r29
    15f8:	cf 93       	push	r28
    15fa:	00 d0       	rcall	.+0      	; 0x15fc <DIO_WritePort+0x6>
    15fc:	00 d0       	rcall	.+0      	; 0x15fe <DIO_WritePort+0x8>
    15fe:	cd b7       	in	r28, 0x3d	; 61
    1600:	de b7       	in	r29, 0x3e	; 62
    1602:	89 83       	std	Y+1, r24	; 0x01
    1604:	6a 83       	std	Y+2, r22	; 0x02
	switch(port)
    1606:	89 81       	ldd	r24, Y+1	; 0x01
    1608:	28 2f       	mov	r18, r24
    160a:	30 e0       	ldi	r19, 0x00	; 0
    160c:	3c 83       	std	Y+4, r19	; 0x04
    160e:	2b 83       	std	Y+3, r18	; 0x03
    1610:	8b 81       	ldd	r24, Y+3	; 0x03
    1612:	9c 81       	ldd	r25, Y+4	; 0x04
    1614:	81 30       	cpi	r24, 0x01	; 1
    1616:	91 05       	cpc	r25, r1
    1618:	d1 f0       	breq	.+52     	; 0x164e <DIO_WritePort+0x58>
    161a:	2b 81       	ldd	r18, Y+3	; 0x03
    161c:	3c 81       	ldd	r19, Y+4	; 0x04
    161e:	22 30       	cpi	r18, 0x02	; 2
    1620:	31 05       	cpc	r19, r1
    1622:	2c f4       	brge	.+10     	; 0x162e <DIO_WritePort+0x38>
    1624:	8b 81       	ldd	r24, Y+3	; 0x03
    1626:	9c 81       	ldd	r25, Y+4	; 0x04
    1628:	00 97       	sbiw	r24, 0x00	; 0
    162a:	61 f0       	breq	.+24     	; 0x1644 <DIO_WritePort+0x4e>
    162c:	1e c0       	rjmp	.+60     	; 0x166a <DIO_WritePort+0x74>
    162e:	2b 81       	ldd	r18, Y+3	; 0x03
    1630:	3c 81       	ldd	r19, Y+4	; 0x04
    1632:	22 30       	cpi	r18, 0x02	; 2
    1634:	31 05       	cpc	r19, r1
    1636:	81 f0       	breq	.+32     	; 0x1658 <DIO_WritePort+0x62>
    1638:	8b 81       	ldd	r24, Y+3	; 0x03
    163a:	9c 81       	ldd	r25, Y+4	; 0x04
    163c:	83 30       	cpi	r24, 0x03	; 3
    163e:	91 05       	cpc	r25, r1
    1640:	81 f0       	breq	.+32     	; 0x1662 <DIO_WritePort+0x6c>
    1642:	13 c0       	rjmp	.+38     	; 0x166a <DIO_WritePort+0x74>
	{
		case PA:
		PORTA = Value;
    1644:	eb e3       	ldi	r30, 0x3B	; 59
    1646:	f0 e0       	ldi	r31, 0x00	; 0
    1648:	8a 81       	ldd	r24, Y+2	; 0x02
    164a:	80 83       	st	Z, r24
    164c:	0e c0       	rjmp	.+28     	; 0x166a <DIO_WritePort+0x74>
		break;
		case PB:
		PORTB = Value;
    164e:	e8 e3       	ldi	r30, 0x38	; 56
    1650:	f0 e0       	ldi	r31, 0x00	; 0
    1652:	8a 81       	ldd	r24, Y+2	; 0x02
    1654:	80 83       	st	Z, r24
    1656:	09 c0       	rjmp	.+18     	; 0x166a <DIO_WritePort+0x74>
		break;
		case PC:
		PORTC = Value;
    1658:	e5 e3       	ldi	r30, 0x35	; 53
    165a:	f0 e0       	ldi	r31, 0x00	; 0
    165c:	8a 81       	ldd	r24, Y+2	; 0x02
    165e:	80 83       	st	Z, r24
    1660:	04 c0       	rjmp	.+8      	; 0x166a <DIO_WritePort+0x74>
		break;
		case PD:
		PORTD = Value;
    1662:	e2 e3       	ldi	r30, 0x32	; 50
    1664:	f0 e0       	ldi	r31, 0x00	; 0
    1666:	8a 81       	ldd	r24, Y+2	; 0x02
    1668:	80 83       	st	Z, r24
		break;
	}
}
    166a:	0f 90       	pop	r0
    166c:	0f 90       	pop	r0
    166e:	0f 90       	pop	r0
    1670:	0f 90       	pop	r0
    1672:	cf 91       	pop	r28
    1674:	df 91       	pop	r29
    1676:	08 95       	ret

00001678 <DIO_WriteBitsInPort>:
void DIO_WriteBitsInPort(DIO_Port_type Port,u8 Value,u8 Mask)
{
    1678:	df 93       	push	r29
    167a:	cf 93       	push	r28
    167c:	00 d0       	rcall	.+0      	; 0x167e <DIO_WriteBitsInPort+0x6>
    167e:	00 d0       	rcall	.+0      	; 0x1680 <DIO_WriteBitsInPort+0x8>
    1680:	0f 92       	push	r0
    1682:	cd b7       	in	r28, 0x3d	; 61
    1684:	de b7       	in	r29, 0x3e	; 62
    1686:	89 83       	std	Y+1, r24	; 0x01
    1688:	6a 83       	std	Y+2, r22	; 0x02
    168a:	4b 83       	std	Y+3, r20	; 0x03
	switch (Port)
    168c:	89 81       	ldd	r24, Y+1	; 0x01
    168e:	28 2f       	mov	r18, r24
    1690:	30 e0       	ldi	r19, 0x00	; 0
    1692:	3d 83       	std	Y+5, r19	; 0x05
    1694:	2c 83       	std	Y+4, r18	; 0x04
    1696:	8c 81       	ldd	r24, Y+4	; 0x04
    1698:	9d 81       	ldd	r25, Y+5	; 0x05
    169a:	81 30       	cpi	r24, 0x01	; 1
    169c:	91 05       	cpc	r25, r1
    169e:	59 f1       	breq	.+86     	; 0x16f6 <DIO_WriteBitsInPort+0x7e>
    16a0:	2c 81       	ldd	r18, Y+4	; 0x04
    16a2:	3d 81       	ldd	r19, Y+5	; 0x05
    16a4:	22 30       	cpi	r18, 0x02	; 2
    16a6:	31 05       	cpc	r19, r1
    16a8:	2c f4       	brge	.+10     	; 0x16b4 <DIO_WriteBitsInPort+0x3c>
    16aa:	8c 81       	ldd	r24, Y+4	; 0x04
    16ac:	9d 81       	ldd	r25, Y+5	; 0x05
    16ae:	00 97       	sbiw	r24, 0x00	; 0
    16b0:	69 f0       	breq	.+26     	; 0x16cc <DIO_WriteBitsInPort+0x54>
    16b2:	5f c0       	rjmp	.+190    	; 0x1772 <DIO_WriteBitsInPort+0xfa>
    16b4:	2c 81       	ldd	r18, Y+4	; 0x04
    16b6:	3d 81       	ldd	r19, Y+5	; 0x05
    16b8:	22 30       	cpi	r18, 0x02	; 2
    16ba:	31 05       	cpc	r19, r1
    16bc:	89 f1       	breq	.+98     	; 0x1720 <DIO_WriteBitsInPort+0xa8>
    16be:	8c 81       	ldd	r24, Y+4	; 0x04
    16c0:	9d 81       	ldd	r25, Y+5	; 0x05
    16c2:	83 30       	cpi	r24, 0x03	; 3
    16c4:	91 05       	cpc	r25, r1
    16c6:	09 f4       	brne	.+2      	; 0x16ca <DIO_WriteBitsInPort+0x52>
    16c8:	40 c0       	rjmp	.+128    	; 0x174a <DIO_WriteBitsInPort+0xd2>
    16ca:	53 c0       	rjmp	.+166    	; 0x1772 <DIO_WriteBitsInPort+0xfa>
	{
		case PA:
		CLR_BITS_REG(PORTA,Mask);
    16cc:	ab e3       	ldi	r26, 0x3B	; 59
    16ce:	b0 e0       	ldi	r27, 0x00	; 0
    16d0:	eb e3       	ldi	r30, 0x3B	; 59
    16d2:	f0 e0       	ldi	r31, 0x00	; 0
    16d4:	80 81       	ld	r24, Z
    16d6:	98 2f       	mov	r25, r24
    16d8:	8b 81       	ldd	r24, Y+3	; 0x03
    16da:	80 95       	com	r24
    16dc:	89 23       	and	r24, r25
    16de:	8c 93       	st	X, r24
		SET_BITS_REG(PORTA,Value&Mask);
    16e0:	ab e3       	ldi	r26, 0x3B	; 59
    16e2:	b0 e0       	ldi	r27, 0x00	; 0
    16e4:	eb e3       	ldi	r30, 0x3B	; 59
    16e6:	f0 e0       	ldi	r31, 0x00	; 0
    16e8:	20 81       	ld	r18, Z
    16ea:	9a 81       	ldd	r25, Y+2	; 0x02
    16ec:	8b 81       	ldd	r24, Y+3	; 0x03
    16ee:	89 23       	and	r24, r25
    16f0:	82 2b       	or	r24, r18
    16f2:	8c 93       	st	X, r24
    16f4:	3e c0       	rjmp	.+124    	; 0x1772 <DIO_WriteBitsInPort+0xfa>
		break;
		case PB:
		CLR_BITS_REG(PORTB,Mask);
    16f6:	a8 e3       	ldi	r26, 0x38	; 56
    16f8:	b0 e0       	ldi	r27, 0x00	; 0
    16fa:	e8 e3       	ldi	r30, 0x38	; 56
    16fc:	f0 e0       	ldi	r31, 0x00	; 0
    16fe:	80 81       	ld	r24, Z
    1700:	98 2f       	mov	r25, r24
    1702:	8b 81       	ldd	r24, Y+3	; 0x03
    1704:	80 95       	com	r24
    1706:	89 23       	and	r24, r25
    1708:	8c 93       	st	X, r24
		SET_BITS_REG(PORTB,Value&Mask);
    170a:	a8 e3       	ldi	r26, 0x38	; 56
    170c:	b0 e0       	ldi	r27, 0x00	; 0
    170e:	e8 e3       	ldi	r30, 0x38	; 56
    1710:	f0 e0       	ldi	r31, 0x00	; 0
    1712:	20 81       	ld	r18, Z
    1714:	9a 81       	ldd	r25, Y+2	; 0x02
    1716:	8b 81       	ldd	r24, Y+3	; 0x03
    1718:	89 23       	and	r24, r25
    171a:	82 2b       	or	r24, r18
    171c:	8c 93       	st	X, r24
    171e:	29 c0       	rjmp	.+82     	; 0x1772 <DIO_WriteBitsInPort+0xfa>
		break;
		case PC:
		CLR_BITS_REG(PORTC,Mask);
    1720:	a5 e3       	ldi	r26, 0x35	; 53
    1722:	b0 e0       	ldi	r27, 0x00	; 0
    1724:	e5 e3       	ldi	r30, 0x35	; 53
    1726:	f0 e0       	ldi	r31, 0x00	; 0
    1728:	80 81       	ld	r24, Z
    172a:	98 2f       	mov	r25, r24
    172c:	8b 81       	ldd	r24, Y+3	; 0x03
    172e:	80 95       	com	r24
    1730:	89 23       	and	r24, r25
    1732:	8c 93       	st	X, r24
		SET_BITS_REG(PORTC,Value&Mask);
    1734:	a5 e3       	ldi	r26, 0x35	; 53
    1736:	b0 e0       	ldi	r27, 0x00	; 0
    1738:	e5 e3       	ldi	r30, 0x35	; 53
    173a:	f0 e0       	ldi	r31, 0x00	; 0
    173c:	20 81       	ld	r18, Z
    173e:	9a 81       	ldd	r25, Y+2	; 0x02
    1740:	8b 81       	ldd	r24, Y+3	; 0x03
    1742:	89 23       	and	r24, r25
    1744:	82 2b       	or	r24, r18
    1746:	8c 93       	st	X, r24
    1748:	14 c0       	rjmp	.+40     	; 0x1772 <DIO_WriteBitsInPort+0xfa>
		break;
		case PD:
		CLR_BITS_REG(PORTD,Mask);
    174a:	a2 e3       	ldi	r26, 0x32	; 50
    174c:	b0 e0       	ldi	r27, 0x00	; 0
    174e:	e2 e3       	ldi	r30, 0x32	; 50
    1750:	f0 e0       	ldi	r31, 0x00	; 0
    1752:	80 81       	ld	r24, Z
    1754:	98 2f       	mov	r25, r24
    1756:	8b 81       	ldd	r24, Y+3	; 0x03
    1758:	80 95       	com	r24
    175a:	89 23       	and	r24, r25
    175c:	8c 93       	st	X, r24
		SET_BITS_REG(PORTD,Value&Mask);
    175e:	a2 e3       	ldi	r26, 0x32	; 50
    1760:	b0 e0       	ldi	r27, 0x00	; 0
    1762:	e2 e3       	ldi	r30, 0x32	; 50
    1764:	f0 e0       	ldi	r31, 0x00	; 0
    1766:	20 81       	ld	r18, Z
    1768:	9a 81       	ldd	r25, Y+2	; 0x02
    176a:	8b 81       	ldd	r24, Y+3	; 0x03
    176c:	89 23       	and	r24, r25
    176e:	82 2b       	or	r24, r18
    1770:	8c 93       	st	X, r24
		break;
	}
}
    1772:	0f 90       	pop	r0
    1774:	0f 90       	pop	r0
    1776:	0f 90       	pop	r0
    1778:	0f 90       	pop	r0
    177a:	0f 90       	pop	r0
    177c:	cf 91       	pop	r28
    177e:	df 91       	pop	r29
    1780:	08 95       	ret

00001782 <DIO_higher_nibble_Value>:
void DIO_higher_nibble_Value(DIO_Port_type portNumber,u8 value)
{
    1782:	df 93       	push	r29
    1784:	cf 93       	push	r28
    1786:	00 d0       	rcall	.+0      	; 0x1788 <DIO_higher_nibble_Value+0x6>
    1788:	00 d0       	rcall	.+0      	; 0x178a <DIO_higher_nibble_Value+0x8>
    178a:	cd b7       	in	r28, 0x3d	; 61
    178c:	de b7       	in	r29, 0x3e	; 62
    178e:	89 83       	std	Y+1, r24	; 0x01
    1790:	6a 83       	std	Y+2, r22	; 0x02
	value<<=4;
    1792:	8a 81       	ldd	r24, Y+2	; 0x02
    1794:	82 95       	swap	r24
    1796:	80 7f       	andi	r24, 0xF0	; 240
    1798:	8a 83       	std	Y+2, r24	; 0x02
	switch(portNumber)
    179a:	89 81       	ldd	r24, Y+1	; 0x01
    179c:	28 2f       	mov	r18, r24
    179e:	30 e0       	ldi	r19, 0x00	; 0
    17a0:	3c 83       	std	Y+4, r19	; 0x04
    17a2:	2b 83       	std	Y+3, r18	; 0x03
    17a4:	8b 81       	ldd	r24, Y+3	; 0x03
    17a6:	9c 81       	ldd	r25, Y+4	; 0x04
    17a8:	81 30       	cpi	r24, 0x01	; 1
    17aa:	91 05       	cpc	r25, r1
    17ac:	29 f1       	breq	.+74     	; 0x17f8 <DIO_higher_nibble_Value+0x76>
    17ae:	2b 81       	ldd	r18, Y+3	; 0x03
    17b0:	3c 81       	ldd	r19, Y+4	; 0x04
    17b2:	22 30       	cpi	r18, 0x02	; 2
    17b4:	31 05       	cpc	r19, r1
    17b6:	2c f4       	brge	.+10     	; 0x17c2 <DIO_higher_nibble_Value+0x40>
    17b8:	8b 81       	ldd	r24, Y+3	; 0x03
    17ba:	9c 81       	ldd	r25, Y+4	; 0x04
    17bc:	00 97       	sbiw	r24, 0x00	; 0
    17be:	61 f0       	breq	.+24     	; 0x17d8 <DIO_higher_nibble_Value+0x56>
    17c0:	4a c0       	rjmp	.+148    	; 0x1856 <DIO_higher_nibble_Value+0xd4>
    17c2:	2b 81       	ldd	r18, Y+3	; 0x03
    17c4:	3c 81       	ldd	r19, Y+4	; 0x04
    17c6:	22 30       	cpi	r18, 0x02	; 2
    17c8:	31 05       	cpc	r19, r1
    17ca:	31 f1       	breq	.+76     	; 0x1818 <DIO_higher_nibble_Value+0x96>
    17cc:	8b 81       	ldd	r24, Y+3	; 0x03
    17ce:	9c 81       	ldd	r25, Y+4	; 0x04
    17d0:	83 30       	cpi	r24, 0x03	; 3
    17d2:	91 05       	cpc	r25, r1
    17d4:	89 f1       	breq	.+98     	; 0x1838 <DIO_higher_nibble_Value+0xb6>
    17d6:	3f c0       	rjmp	.+126    	; 0x1856 <DIO_higher_nibble_Value+0xd4>
	{
		case PA:
		PORTA&=0x0f;
    17d8:	ab e3       	ldi	r26, 0x3B	; 59
    17da:	b0 e0       	ldi	r27, 0x00	; 0
    17dc:	eb e3       	ldi	r30, 0x3B	; 59
    17de:	f0 e0       	ldi	r31, 0x00	; 0
    17e0:	80 81       	ld	r24, Z
    17e2:	8f 70       	andi	r24, 0x0F	; 15
    17e4:	8c 93       	st	X, r24
		PORTA|=value;
    17e6:	ab e3       	ldi	r26, 0x3B	; 59
    17e8:	b0 e0       	ldi	r27, 0x00	; 0
    17ea:	eb e3       	ldi	r30, 0x3B	; 59
    17ec:	f0 e0       	ldi	r31, 0x00	; 0
    17ee:	90 81       	ld	r25, Z
    17f0:	8a 81       	ldd	r24, Y+2	; 0x02
    17f2:	89 2b       	or	r24, r25
    17f4:	8c 93       	st	X, r24
    17f6:	2f c0       	rjmp	.+94     	; 0x1856 <DIO_higher_nibble_Value+0xd4>
		//higher_nibble_value(PORTA,value);
		break;
		case PB:
		PORTB&=0x0f;
    17f8:	a8 e3       	ldi	r26, 0x38	; 56
    17fa:	b0 e0       	ldi	r27, 0x00	; 0
    17fc:	e8 e3       	ldi	r30, 0x38	; 56
    17fe:	f0 e0       	ldi	r31, 0x00	; 0
    1800:	80 81       	ld	r24, Z
    1802:	8f 70       	andi	r24, 0x0F	; 15
    1804:	8c 93       	st	X, r24
		PORTB|=value;
    1806:	a8 e3       	ldi	r26, 0x38	; 56
    1808:	b0 e0       	ldi	r27, 0x00	; 0
    180a:	e8 e3       	ldi	r30, 0x38	; 56
    180c:	f0 e0       	ldi	r31, 0x00	; 0
    180e:	90 81       	ld	r25, Z
    1810:	8a 81       	ldd	r24, Y+2	; 0x02
    1812:	89 2b       	or	r24, r25
    1814:	8c 93       	st	X, r24
    1816:	1f c0       	rjmp	.+62     	; 0x1856 <DIO_higher_nibble_Value+0xd4>
		//higher_nibble_value(PORTB,value);
		break;
		case PC:
		PORTC&=0x0f;
    1818:	a5 e3       	ldi	r26, 0x35	; 53
    181a:	b0 e0       	ldi	r27, 0x00	; 0
    181c:	e5 e3       	ldi	r30, 0x35	; 53
    181e:	f0 e0       	ldi	r31, 0x00	; 0
    1820:	80 81       	ld	r24, Z
    1822:	8f 70       	andi	r24, 0x0F	; 15
    1824:	8c 93       	st	X, r24
		PORTC|=value;
    1826:	a5 e3       	ldi	r26, 0x35	; 53
    1828:	b0 e0       	ldi	r27, 0x00	; 0
    182a:	e5 e3       	ldi	r30, 0x35	; 53
    182c:	f0 e0       	ldi	r31, 0x00	; 0
    182e:	90 81       	ld	r25, Z
    1830:	8a 81       	ldd	r24, Y+2	; 0x02
    1832:	89 2b       	or	r24, r25
    1834:	8c 93       	st	X, r24
    1836:	0f c0       	rjmp	.+30     	; 0x1856 <DIO_higher_nibble_Value+0xd4>
		//higher_nibble_value(PORTC,value);
		break;
		case PD:
		PORTD&=0x0f;
    1838:	a2 e3       	ldi	r26, 0x32	; 50
    183a:	b0 e0       	ldi	r27, 0x00	; 0
    183c:	e2 e3       	ldi	r30, 0x32	; 50
    183e:	f0 e0       	ldi	r31, 0x00	; 0
    1840:	80 81       	ld	r24, Z
    1842:	8f 70       	andi	r24, 0x0F	; 15
    1844:	8c 93       	st	X, r24
		PORTD|=value;
    1846:	a2 e3       	ldi	r26, 0x32	; 50
    1848:	b0 e0       	ldi	r27, 0x00	; 0
    184a:	e2 e3       	ldi	r30, 0x32	; 50
    184c:	f0 e0       	ldi	r31, 0x00	; 0
    184e:	90 81       	ld	r25, Z
    1850:	8a 81       	ldd	r24, Y+2	; 0x02
    1852:	89 2b       	or	r24, r25
    1854:	8c 93       	st	X, r24
		//higher_nibble_value(PORTD,value);
		break;
	}
	
}
    1856:	0f 90       	pop	r0
    1858:	0f 90       	pop	r0
    185a:	0f 90       	pop	r0
    185c:	0f 90       	pop	r0
    185e:	cf 91       	pop	r28
    1860:	df 91       	pop	r29
    1862:	08 95       	ret

00001864 <DIO_lower_nibble_value>:

void DIO_lower_nibble_value(DIO_Port_type portNumber,u8 value)
{
    1864:	df 93       	push	r29
    1866:	cf 93       	push	r28
    1868:	00 d0       	rcall	.+0      	; 0x186a <DIO_lower_nibble_value+0x6>
    186a:	00 d0       	rcall	.+0      	; 0x186c <DIO_lower_nibble_value+0x8>
    186c:	cd b7       	in	r28, 0x3d	; 61
    186e:	de b7       	in	r29, 0x3e	; 62
    1870:	89 83       	std	Y+1, r24	; 0x01
    1872:	6a 83       	std	Y+2, r22	; 0x02
	value&=0x0f;
    1874:	8a 81       	ldd	r24, Y+2	; 0x02
    1876:	8f 70       	andi	r24, 0x0F	; 15
    1878:	8a 83       	std	Y+2, r24	; 0x02
	switch(portNumber)
    187a:	89 81       	ldd	r24, Y+1	; 0x01
    187c:	28 2f       	mov	r18, r24
    187e:	30 e0       	ldi	r19, 0x00	; 0
    1880:	3c 83       	std	Y+4, r19	; 0x04
    1882:	2b 83       	std	Y+3, r18	; 0x03
    1884:	8b 81       	ldd	r24, Y+3	; 0x03
    1886:	9c 81       	ldd	r25, Y+4	; 0x04
    1888:	81 30       	cpi	r24, 0x01	; 1
    188a:	91 05       	cpc	r25, r1
    188c:	29 f1       	breq	.+74     	; 0x18d8 <DIO_lower_nibble_value+0x74>
    188e:	2b 81       	ldd	r18, Y+3	; 0x03
    1890:	3c 81       	ldd	r19, Y+4	; 0x04
    1892:	22 30       	cpi	r18, 0x02	; 2
    1894:	31 05       	cpc	r19, r1
    1896:	2c f4       	brge	.+10     	; 0x18a2 <DIO_lower_nibble_value+0x3e>
    1898:	8b 81       	ldd	r24, Y+3	; 0x03
    189a:	9c 81       	ldd	r25, Y+4	; 0x04
    189c:	00 97       	sbiw	r24, 0x00	; 0
    189e:	61 f0       	breq	.+24     	; 0x18b8 <DIO_lower_nibble_value+0x54>
    18a0:	4a c0       	rjmp	.+148    	; 0x1936 <DIO_lower_nibble_value+0xd2>
    18a2:	2b 81       	ldd	r18, Y+3	; 0x03
    18a4:	3c 81       	ldd	r19, Y+4	; 0x04
    18a6:	22 30       	cpi	r18, 0x02	; 2
    18a8:	31 05       	cpc	r19, r1
    18aa:	31 f1       	breq	.+76     	; 0x18f8 <DIO_lower_nibble_value+0x94>
    18ac:	8b 81       	ldd	r24, Y+3	; 0x03
    18ae:	9c 81       	ldd	r25, Y+4	; 0x04
    18b0:	83 30       	cpi	r24, 0x03	; 3
    18b2:	91 05       	cpc	r25, r1
    18b4:	89 f1       	breq	.+98     	; 0x1918 <DIO_lower_nibble_value+0xb4>
    18b6:	3f c0       	rjmp	.+126    	; 0x1936 <DIO_lower_nibble_value+0xd2>
	{
		case PA:
		PORTA&=0xf0;
    18b8:	ab e3       	ldi	r26, 0x3B	; 59
    18ba:	b0 e0       	ldi	r27, 0x00	; 0
    18bc:	eb e3       	ldi	r30, 0x3B	; 59
    18be:	f0 e0       	ldi	r31, 0x00	; 0
    18c0:	80 81       	ld	r24, Z
    18c2:	80 7f       	andi	r24, 0xF0	; 240
    18c4:	8c 93       	st	X, r24
		PORTA|=value;
    18c6:	ab e3       	ldi	r26, 0x3B	; 59
    18c8:	b0 e0       	ldi	r27, 0x00	; 0
    18ca:	eb e3       	ldi	r30, 0x3B	; 59
    18cc:	f0 e0       	ldi	r31, 0x00	; 0
    18ce:	90 81       	ld	r25, Z
    18d0:	8a 81       	ldd	r24, Y+2	; 0x02
    18d2:	89 2b       	or	r24, r25
    18d4:	8c 93       	st	X, r24
    18d6:	2f c0       	rjmp	.+94     	; 0x1936 <DIO_lower_nibble_value+0xd2>
		//lower_nibble_value(PORTA,value);
		break;
		case PB:
		PORTB&=0xf0;
    18d8:	a8 e3       	ldi	r26, 0x38	; 56
    18da:	b0 e0       	ldi	r27, 0x00	; 0
    18dc:	e8 e3       	ldi	r30, 0x38	; 56
    18de:	f0 e0       	ldi	r31, 0x00	; 0
    18e0:	80 81       	ld	r24, Z
    18e2:	80 7f       	andi	r24, 0xF0	; 240
    18e4:	8c 93       	st	X, r24
		PORTB|=value;
    18e6:	a8 e3       	ldi	r26, 0x38	; 56
    18e8:	b0 e0       	ldi	r27, 0x00	; 0
    18ea:	e8 e3       	ldi	r30, 0x38	; 56
    18ec:	f0 e0       	ldi	r31, 0x00	; 0
    18ee:	90 81       	ld	r25, Z
    18f0:	8a 81       	ldd	r24, Y+2	; 0x02
    18f2:	89 2b       	or	r24, r25
    18f4:	8c 93       	st	X, r24
    18f6:	1f c0       	rjmp	.+62     	; 0x1936 <DIO_lower_nibble_value+0xd2>
		//lower_nibble_value(PORTB,value);
		break;
		case PC:
		PORTC&=0xf0;
    18f8:	a5 e3       	ldi	r26, 0x35	; 53
    18fa:	b0 e0       	ldi	r27, 0x00	; 0
    18fc:	e5 e3       	ldi	r30, 0x35	; 53
    18fe:	f0 e0       	ldi	r31, 0x00	; 0
    1900:	80 81       	ld	r24, Z
    1902:	80 7f       	andi	r24, 0xF0	; 240
    1904:	8c 93       	st	X, r24
		PORTC|=value;
    1906:	a5 e3       	ldi	r26, 0x35	; 53
    1908:	b0 e0       	ldi	r27, 0x00	; 0
    190a:	e5 e3       	ldi	r30, 0x35	; 53
    190c:	f0 e0       	ldi	r31, 0x00	; 0
    190e:	90 81       	ld	r25, Z
    1910:	8a 81       	ldd	r24, Y+2	; 0x02
    1912:	89 2b       	or	r24, r25
    1914:	8c 93       	st	X, r24
    1916:	0f c0       	rjmp	.+30     	; 0x1936 <DIO_lower_nibble_value+0xd2>
		//lower_nibble_value(PORTC,value);
		break;
		case PD:
		PORTD&=0xf0;
    1918:	a2 e3       	ldi	r26, 0x32	; 50
    191a:	b0 e0       	ldi	r27, 0x00	; 0
    191c:	e2 e3       	ldi	r30, 0x32	; 50
    191e:	f0 e0       	ldi	r31, 0x00	; 0
    1920:	80 81       	ld	r24, Z
    1922:	80 7f       	andi	r24, 0xF0	; 240
    1924:	8c 93       	st	X, r24
		PORTD|=value;
    1926:	a2 e3       	ldi	r26, 0x32	; 50
    1928:	b0 e0       	ldi	r27, 0x00	; 0
    192a:	e2 e3       	ldi	r30, 0x32	; 50
    192c:	f0 e0       	ldi	r31, 0x00	; 0
    192e:	90 81       	ld	r25, Z
    1930:	8a 81       	ldd	r24, Y+2	; 0x02
    1932:	89 2b       	or	r24, r25
    1934:	8c 93       	st	X, r24
		//lower_nibble_value(PORTD,value);
		break;
		
	}
    1936:	0f 90       	pop	r0
    1938:	0f 90       	pop	r0
    193a:	0f 90       	pop	r0
    193c:	0f 90       	pop	r0
    193e:	cf 91       	pop	r28
    1940:	df 91       	pop	r29
    1942:	08 95       	ret

00001944 <Timer0_Init>:
static void (*Timer0_OVF_Fptr) (void)=NULLPTR;
static void (*Timer0_OC_Fptr)  (void)=NULLPTR;
/**********************************Timer 0 ****************************************************/

void Timer0_Init( Timer0Mode_type mode,Timer0Scaler_type scaler,OC0Mode_type oc_mode)
{
    1944:	df 93       	push	r29
    1946:	cf 93       	push	r28
    1948:	cd b7       	in	r28, 0x3d	; 61
    194a:	de b7       	in	r29, 0x3e	; 62
    194c:	27 97       	sbiw	r28, 0x07	; 7
    194e:	0f b6       	in	r0, 0x3f	; 63
    1950:	f8 94       	cli
    1952:	de bf       	out	0x3e, r29	; 62
    1954:	0f be       	out	0x3f, r0	; 63
    1956:	cd bf       	out	0x3d, r28	; 61
    1958:	89 83       	std	Y+1, r24	; 0x01
    195a:	6a 83       	std	Y+2, r22	; 0x02
    195c:	4b 83       	std	Y+3, r20	; 0x03
	switch (mode)
    195e:	89 81       	ldd	r24, Y+1	; 0x01
    1960:	28 2f       	mov	r18, r24
    1962:	30 e0       	ldi	r19, 0x00	; 0
    1964:	3f 83       	std	Y+7, r19	; 0x07
    1966:	2e 83       	std	Y+6, r18	; 0x06
    1968:	8e 81       	ldd	r24, Y+6	; 0x06
    196a:	9f 81       	ldd	r25, Y+7	; 0x07
    196c:	81 30       	cpi	r24, 0x01	; 1
    196e:	91 05       	cpc	r25, r1
    1970:	21 f1       	breq	.+72     	; 0x19ba <Timer0_Init+0x76>
    1972:	2e 81       	ldd	r18, Y+6	; 0x06
    1974:	3f 81       	ldd	r19, Y+7	; 0x07
    1976:	22 30       	cpi	r18, 0x02	; 2
    1978:	31 05       	cpc	r19, r1
    197a:	2c f4       	brge	.+10     	; 0x1986 <Timer0_Init+0x42>
    197c:	8e 81       	ldd	r24, Y+6	; 0x06
    197e:	9f 81       	ldd	r25, Y+7	; 0x07
    1980:	00 97       	sbiw	r24, 0x00	; 0
    1982:	61 f0       	breq	.+24     	; 0x199c <Timer0_Init+0x58>
    1984:	46 c0       	rjmp	.+140    	; 0x1a12 <Timer0_Init+0xce>
    1986:	2e 81       	ldd	r18, Y+6	; 0x06
    1988:	3f 81       	ldd	r19, Y+7	; 0x07
    198a:	22 30       	cpi	r18, 0x02	; 2
    198c:	31 05       	cpc	r19, r1
    198e:	21 f1       	breq	.+72     	; 0x19d8 <Timer0_Init+0x94>
    1990:	8e 81       	ldd	r24, Y+6	; 0x06
    1992:	9f 81       	ldd	r25, Y+7	; 0x07
    1994:	83 30       	cpi	r24, 0x03	; 3
    1996:	91 05       	cpc	r25, r1
    1998:	71 f1       	breq	.+92     	; 0x19f6 <Timer0_Init+0xb2>
    199a:	3b c0       	rjmp	.+118    	; 0x1a12 <Timer0_Init+0xce>
	{
		case TIMER0_NORMAL_MODE:
		CLR_BIT(TCCR0,WGM00);
    199c:	a3 e5       	ldi	r26, 0x53	; 83
    199e:	b0 e0       	ldi	r27, 0x00	; 0
    19a0:	e3 e5       	ldi	r30, 0x53	; 83
    19a2:	f0 e0       	ldi	r31, 0x00	; 0
    19a4:	80 81       	ld	r24, Z
    19a6:	8f 7b       	andi	r24, 0xBF	; 191
    19a8:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,WGM01);
    19aa:	a3 e5       	ldi	r26, 0x53	; 83
    19ac:	b0 e0       	ldi	r27, 0x00	; 0
    19ae:	e3 e5       	ldi	r30, 0x53	; 83
    19b0:	f0 e0       	ldi	r31, 0x00	; 0
    19b2:	80 81       	ld	r24, Z
    19b4:	87 7f       	andi	r24, 0xF7	; 247
    19b6:	8c 93       	st	X, r24
    19b8:	2c c0       	rjmp	.+88     	; 0x1a12 <Timer0_Init+0xce>
		break;
		case TIMER0_PHASECORRECT_MODE:
		SET_BIT(TCCR0,WGM00);
    19ba:	a3 e5       	ldi	r26, 0x53	; 83
    19bc:	b0 e0       	ldi	r27, 0x00	; 0
    19be:	e3 e5       	ldi	r30, 0x53	; 83
    19c0:	f0 e0       	ldi	r31, 0x00	; 0
    19c2:	80 81       	ld	r24, Z
    19c4:	80 64       	ori	r24, 0x40	; 64
    19c6:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,WGM01);
    19c8:	a3 e5       	ldi	r26, 0x53	; 83
    19ca:	b0 e0       	ldi	r27, 0x00	; 0
    19cc:	e3 e5       	ldi	r30, 0x53	; 83
    19ce:	f0 e0       	ldi	r31, 0x00	; 0
    19d0:	80 81       	ld	r24, Z
    19d2:	87 7f       	andi	r24, 0xF7	; 247
    19d4:	8c 93       	st	X, r24
    19d6:	1d c0       	rjmp	.+58     	; 0x1a12 <Timer0_Init+0xce>
		break;
		case TIMER0_CTC_MODE:
		CLR_BIT(TCCR0,WGM00);
    19d8:	a3 e5       	ldi	r26, 0x53	; 83
    19da:	b0 e0       	ldi	r27, 0x00	; 0
    19dc:	e3 e5       	ldi	r30, 0x53	; 83
    19de:	f0 e0       	ldi	r31, 0x00	; 0
    19e0:	80 81       	ld	r24, Z
    19e2:	8f 7b       	andi	r24, 0xBF	; 191
    19e4:	8c 93       	st	X, r24
		SET_BIT(TCCR0,WGM01);
    19e6:	a3 e5       	ldi	r26, 0x53	; 83
    19e8:	b0 e0       	ldi	r27, 0x00	; 0
    19ea:	e3 e5       	ldi	r30, 0x53	; 83
    19ec:	f0 e0       	ldi	r31, 0x00	; 0
    19ee:	80 81       	ld	r24, Z
    19f0:	88 60       	ori	r24, 0x08	; 8
    19f2:	8c 93       	st	X, r24
    19f4:	0e c0       	rjmp	.+28     	; 0x1a12 <Timer0_Init+0xce>
		break;
		case TIMER0_FASTPWM_MODE:
		SET_BIT(TCCR0,WGM00);
    19f6:	a3 e5       	ldi	r26, 0x53	; 83
    19f8:	b0 e0       	ldi	r27, 0x00	; 0
    19fa:	e3 e5       	ldi	r30, 0x53	; 83
    19fc:	f0 e0       	ldi	r31, 0x00	; 0
    19fe:	80 81       	ld	r24, Z
    1a00:	80 64       	ori	r24, 0x40	; 64
    1a02:	8c 93       	st	X, r24
		SET_BIT(TCCR0,WGM01);
    1a04:	a3 e5       	ldi	r26, 0x53	; 83
    1a06:	b0 e0       	ldi	r27, 0x00	; 0
    1a08:	e3 e5       	ldi	r30, 0x53	; 83
    1a0a:	f0 e0       	ldi	r31, 0x00	; 0
    1a0c:	80 81       	ld	r24, Z
    1a0e:	88 60       	ori	r24, 0x08	; 8
    1a10:	8c 93       	st	X, r24
		break;
	}

	TCCR0&=0XF8;
    1a12:	a3 e5       	ldi	r26, 0x53	; 83
    1a14:	b0 e0       	ldi	r27, 0x00	; 0
    1a16:	e3 e5       	ldi	r30, 0x53	; 83
    1a18:	f0 e0       	ldi	r31, 0x00	; 0
    1a1a:	80 81       	ld	r24, Z
    1a1c:	88 7f       	andi	r24, 0xF8	; 248
    1a1e:	8c 93       	st	X, r24
	TCCR0|=scaler;
    1a20:	a3 e5       	ldi	r26, 0x53	; 83
    1a22:	b0 e0       	ldi	r27, 0x00	; 0
    1a24:	e3 e5       	ldi	r30, 0x53	; 83
    1a26:	f0 e0       	ldi	r31, 0x00	; 0
    1a28:	90 81       	ld	r25, Z
    1a2a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a2c:	89 2b       	or	r24, r25
    1a2e:	8c 93       	st	X, r24

	switch (oc_mode)
    1a30:	8b 81       	ldd	r24, Y+3	; 0x03
    1a32:	28 2f       	mov	r18, r24
    1a34:	30 e0       	ldi	r19, 0x00	; 0
    1a36:	3d 83       	std	Y+5, r19	; 0x05
    1a38:	2c 83       	std	Y+4, r18	; 0x04
    1a3a:	8c 81       	ldd	r24, Y+4	; 0x04
    1a3c:	9d 81       	ldd	r25, Y+5	; 0x05
    1a3e:	81 30       	cpi	r24, 0x01	; 1
    1a40:	91 05       	cpc	r25, r1
    1a42:	21 f1       	breq	.+72     	; 0x1a8c <Timer0_Init+0x148>
    1a44:	2c 81       	ldd	r18, Y+4	; 0x04
    1a46:	3d 81       	ldd	r19, Y+5	; 0x05
    1a48:	22 30       	cpi	r18, 0x02	; 2
    1a4a:	31 05       	cpc	r19, r1
    1a4c:	2c f4       	brge	.+10     	; 0x1a58 <Timer0_Init+0x114>
    1a4e:	8c 81       	ldd	r24, Y+4	; 0x04
    1a50:	9d 81       	ldd	r25, Y+5	; 0x05
    1a52:	00 97       	sbiw	r24, 0x00	; 0
    1a54:	61 f0       	breq	.+24     	; 0x1a6e <Timer0_Init+0x12a>
    1a56:	46 c0       	rjmp	.+140    	; 0x1ae4 <Timer0_Init+0x1a0>
    1a58:	2c 81       	ldd	r18, Y+4	; 0x04
    1a5a:	3d 81       	ldd	r19, Y+5	; 0x05
    1a5c:	22 30       	cpi	r18, 0x02	; 2
    1a5e:	31 05       	cpc	r19, r1
    1a60:	21 f1       	breq	.+72     	; 0x1aaa <Timer0_Init+0x166>
    1a62:	8c 81       	ldd	r24, Y+4	; 0x04
    1a64:	9d 81       	ldd	r25, Y+5	; 0x05
    1a66:	83 30       	cpi	r24, 0x03	; 3
    1a68:	91 05       	cpc	r25, r1
    1a6a:	71 f1       	breq	.+92     	; 0x1ac8 <Timer0_Init+0x184>
    1a6c:	3b c0       	rjmp	.+118    	; 0x1ae4 <Timer0_Init+0x1a0>
	{
		case OCO_DISCONNECTED:
		CLR_BIT(TCCR0,COM00);
    1a6e:	a3 e5       	ldi	r26, 0x53	; 83
    1a70:	b0 e0       	ldi	r27, 0x00	; 0
    1a72:	e3 e5       	ldi	r30, 0x53	; 83
    1a74:	f0 e0       	ldi	r31, 0x00	; 0
    1a76:	80 81       	ld	r24, Z
    1a78:	8f 7e       	andi	r24, 0xEF	; 239
    1a7a:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,COM01);
    1a7c:	a3 e5       	ldi	r26, 0x53	; 83
    1a7e:	b0 e0       	ldi	r27, 0x00	; 0
    1a80:	e3 e5       	ldi	r30, 0x53	; 83
    1a82:	f0 e0       	ldi	r31, 0x00	; 0
    1a84:	80 81       	ld	r24, Z
    1a86:	8f 7d       	andi	r24, 0xDF	; 223
    1a88:	8c 93       	st	X, r24
    1a8a:	2c c0       	rjmp	.+88     	; 0x1ae4 <Timer0_Init+0x1a0>
		break;
		case OCO_TOGGLE:
		SET_BIT(TCCR0,COM00);
    1a8c:	a3 e5       	ldi	r26, 0x53	; 83
    1a8e:	b0 e0       	ldi	r27, 0x00	; 0
    1a90:	e3 e5       	ldi	r30, 0x53	; 83
    1a92:	f0 e0       	ldi	r31, 0x00	; 0
    1a94:	80 81       	ld	r24, Z
    1a96:	80 61       	ori	r24, 0x10	; 16
    1a98:	8c 93       	st	X, r24
		CLR_BIT(TCCR0,COM01);
    1a9a:	a3 e5       	ldi	r26, 0x53	; 83
    1a9c:	b0 e0       	ldi	r27, 0x00	; 0
    1a9e:	e3 e5       	ldi	r30, 0x53	; 83
    1aa0:	f0 e0       	ldi	r31, 0x00	; 0
    1aa2:	80 81       	ld	r24, Z
    1aa4:	8f 7d       	andi	r24, 0xDF	; 223
    1aa6:	8c 93       	st	X, r24
    1aa8:	1d c0       	rjmp	.+58     	; 0x1ae4 <Timer0_Init+0x1a0>
		break;
		case OCO_NON_INVERTING:
		CLR_BIT(TCCR0,COM00);
    1aaa:	a3 e5       	ldi	r26, 0x53	; 83
    1aac:	b0 e0       	ldi	r27, 0x00	; 0
    1aae:	e3 e5       	ldi	r30, 0x53	; 83
    1ab0:	f0 e0       	ldi	r31, 0x00	; 0
    1ab2:	80 81       	ld	r24, Z
    1ab4:	8f 7e       	andi	r24, 0xEF	; 239
    1ab6:	8c 93       	st	X, r24
		SET_BIT(TCCR0,COM01);
    1ab8:	a3 e5       	ldi	r26, 0x53	; 83
    1aba:	b0 e0       	ldi	r27, 0x00	; 0
    1abc:	e3 e5       	ldi	r30, 0x53	; 83
    1abe:	f0 e0       	ldi	r31, 0x00	; 0
    1ac0:	80 81       	ld	r24, Z
    1ac2:	80 62       	ori	r24, 0x20	; 32
    1ac4:	8c 93       	st	X, r24
    1ac6:	0e c0       	rjmp	.+28     	; 0x1ae4 <Timer0_Init+0x1a0>
		break;
		case OCO_INVERTING:
		SET_BIT(TCCR0,COM00);
    1ac8:	a3 e5       	ldi	r26, 0x53	; 83
    1aca:	b0 e0       	ldi	r27, 0x00	; 0
    1acc:	e3 e5       	ldi	r30, 0x53	; 83
    1ace:	f0 e0       	ldi	r31, 0x00	; 0
    1ad0:	80 81       	ld	r24, Z
    1ad2:	80 61       	ori	r24, 0x10	; 16
    1ad4:	8c 93       	st	X, r24
		SET_BIT(TCCR0,COM01);
    1ad6:	a3 e5       	ldi	r26, 0x53	; 83
    1ad8:	b0 e0       	ldi	r27, 0x00	; 0
    1ada:	e3 e5       	ldi	r30, 0x53	; 83
    1adc:	f0 e0       	ldi	r31, 0x00	; 0
    1ade:	80 81       	ld	r24, Z
    1ae0:	80 62       	ori	r24, 0x20	; 32
    1ae2:	8c 93       	st	X, r24
		break;
	}
	

}
    1ae4:	27 96       	adiw	r28, 0x07	; 7
    1ae6:	0f b6       	in	r0, 0x3f	; 63
    1ae8:	f8 94       	cli
    1aea:	de bf       	out	0x3e, r29	; 62
    1aec:	0f be       	out	0x3f, r0	; 63
    1aee:	cd bf       	out	0x3d, r28	; 61
    1af0:	cf 91       	pop	r28
    1af2:	df 91       	pop	r29
    1af4:	08 95       	ret

00001af6 <Timer0_OV_InterruptEnable>:
void Timer0_OV_InterruptEnable(void)
{
    1af6:	df 93       	push	r29
    1af8:	cf 93       	push	r28
    1afa:	cd b7       	in	r28, 0x3d	; 61
    1afc:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,TOIE0);
    1afe:	a9 e5       	ldi	r26, 0x59	; 89
    1b00:	b0 e0       	ldi	r27, 0x00	; 0
    1b02:	e9 e5       	ldi	r30, 0x59	; 89
    1b04:	f0 e0       	ldi	r31, 0x00	; 0
    1b06:	80 81       	ld	r24, Z
    1b08:	81 60       	ori	r24, 0x01	; 1
    1b0a:	8c 93       	st	X, r24
}
    1b0c:	cf 91       	pop	r28
    1b0e:	df 91       	pop	r29
    1b10:	08 95       	ret

00001b12 <Timer0_OV_InterruptDisable>:
void Timer0_OV_InterruptDisable(void)
{
    1b12:	df 93       	push	r29
    1b14:	cf 93       	push	r28
    1b16:	cd b7       	in	r28, 0x3d	; 61
    1b18:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,TOIE0);
    1b1a:	a9 e5       	ldi	r26, 0x59	; 89
    1b1c:	b0 e0       	ldi	r27, 0x00	; 0
    1b1e:	e9 e5       	ldi	r30, 0x59	; 89
    1b20:	f0 e0       	ldi	r31, 0x00	; 0
    1b22:	80 81       	ld	r24, Z
    1b24:	8e 7f       	andi	r24, 0xFE	; 254
    1b26:	8c 93       	st	X, r24
}
    1b28:	cf 91       	pop	r28
    1b2a:	df 91       	pop	r29
    1b2c:	08 95       	ret

00001b2e <Timer0_OC_InterruptEnable>:
void Timer0_OC_InterruptEnable(void)
{
    1b2e:	df 93       	push	r29
    1b30:	cf 93       	push	r28
    1b32:	cd b7       	in	r28, 0x3d	; 61
    1b34:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,OCIE0);
    1b36:	a9 e5       	ldi	r26, 0x59	; 89
    1b38:	b0 e0       	ldi	r27, 0x00	; 0
    1b3a:	e9 e5       	ldi	r30, 0x59	; 89
    1b3c:	f0 e0       	ldi	r31, 0x00	; 0
    1b3e:	80 81       	ld	r24, Z
    1b40:	82 60       	ori	r24, 0x02	; 2
    1b42:	8c 93       	st	X, r24
}
    1b44:	cf 91       	pop	r28
    1b46:	df 91       	pop	r29
    1b48:	08 95       	ret

00001b4a <Timer0_OC_InterruptDisable>:

void Timer0_OC_InterruptDisable(void)
{
    1b4a:	df 93       	push	r29
    1b4c:	cf 93       	push	r28
    1b4e:	cd b7       	in	r28, 0x3d	; 61
    1b50:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,OCIE0);
    1b52:	a9 e5       	ldi	r26, 0x59	; 89
    1b54:	b0 e0       	ldi	r27, 0x00	; 0
    1b56:	e9 e5       	ldi	r30, 0x59	; 89
    1b58:	f0 e0       	ldi	r31, 0x00	; 0
    1b5a:	80 81       	ld	r24, Z
    1b5c:	8d 7f       	andi	r24, 0xFD	; 253
    1b5e:	8c 93       	st	X, r24
}
    1b60:	cf 91       	pop	r28
    1b62:	df 91       	pop	r29
    1b64:	08 95       	ret

00001b66 <Timer0_OVF_SetCallBack>:

/*******************************************TIMER 0 call Back function***************************************/

void Timer0_OVF_SetCallBack(void(*LocalFptr)(void))
{
    1b66:	df 93       	push	r29
    1b68:	cf 93       	push	r28
    1b6a:	00 d0       	rcall	.+0      	; 0x1b6c <Timer0_OVF_SetCallBack+0x6>
    1b6c:	cd b7       	in	r28, 0x3d	; 61
    1b6e:	de b7       	in	r29, 0x3e	; 62
    1b70:	9a 83       	std	Y+2, r25	; 0x02
    1b72:	89 83       	std	Y+1, r24	; 0x01
	Timer0_OVF_Fptr=LocalFptr;
    1b74:	89 81       	ldd	r24, Y+1	; 0x01
    1b76:	9a 81       	ldd	r25, Y+2	; 0x02
    1b78:	90 93 91 00 	sts	0x0091, r25
    1b7c:	80 93 90 00 	sts	0x0090, r24
}
    1b80:	0f 90       	pop	r0
    1b82:	0f 90       	pop	r0
    1b84:	cf 91       	pop	r28
    1b86:	df 91       	pop	r29
    1b88:	08 95       	ret

00001b8a <Timer0_Oc_SetCallBack>:

void Timer0_Oc_SetCallBack(void(*LocalFptr)(void))
{
    1b8a:	df 93       	push	r29
    1b8c:	cf 93       	push	r28
    1b8e:	00 d0       	rcall	.+0      	; 0x1b90 <Timer0_Oc_SetCallBack+0x6>
    1b90:	cd b7       	in	r28, 0x3d	; 61
    1b92:	de b7       	in	r29, 0x3e	; 62
    1b94:	9a 83       	std	Y+2, r25	; 0x02
    1b96:	89 83       	std	Y+1, r24	; 0x01
	Timer0_OC_Fptr=LocalFptr;
    1b98:	89 81       	ldd	r24, Y+1	; 0x01
    1b9a:	9a 81       	ldd	r25, Y+2	; 0x02
    1b9c:	90 93 93 00 	sts	0x0093, r25
    1ba0:	80 93 92 00 	sts	0x0092, r24
}
    1ba4:	0f 90       	pop	r0
    1ba6:	0f 90       	pop	r0
    1ba8:	cf 91       	pop	r28
    1baa:	df 91       	pop	r29
    1bac:	08 95       	ret

00001bae <__vector_11>:

/*********************************Timer 0 ISR functions*********************************************/

ISR(TIMER0_OVF_vect)
{
    1bae:	1f 92       	push	r1
    1bb0:	0f 92       	push	r0
    1bb2:	0f b6       	in	r0, 0x3f	; 63
    1bb4:	0f 92       	push	r0
    1bb6:	11 24       	eor	r1, r1
    1bb8:	2f 93       	push	r18
    1bba:	3f 93       	push	r19
    1bbc:	4f 93       	push	r20
    1bbe:	5f 93       	push	r21
    1bc0:	6f 93       	push	r22
    1bc2:	7f 93       	push	r23
    1bc4:	8f 93       	push	r24
    1bc6:	9f 93       	push	r25
    1bc8:	af 93       	push	r26
    1bca:	bf 93       	push	r27
    1bcc:	ef 93       	push	r30
    1bce:	ff 93       	push	r31
    1bd0:	df 93       	push	r29
    1bd2:	cf 93       	push	r28
    1bd4:	cd b7       	in	r28, 0x3d	; 61
    1bd6:	de b7       	in	r29, 0x3e	; 62
	if (Timer0_OVF_Fptr!=NULLPTR)
    1bd8:	80 91 90 00 	lds	r24, 0x0090
    1bdc:	90 91 91 00 	lds	r25, 0x0091
    1be0:	00 97       	sbiw	r24, 0x00	; 0
    1be2:	29 f0       	breq	.+10     	; 0x1bee <__vector_11+0x40>
	{
		Timer0_OVF_Fptr();
    1be4:	e0 91 90 00 	lds	r30, 0x0090
    1be8:	f0 91 91 00 	lds	r31, 0x0091
    1bec:	09 95       	icall
	}
}
    1bee:	cf 91       	pop	r28
    1bf0:	df 91       	pop	r29
    1bf2:	ff 91       	pop	r31
    1bf4:	ef 91       	pop	r30
    1bf6:	bf 91       	pop	r27
    1bf8:	af 91       	pop	r26
    1bfa:	9f 91       	pop	r25
    1bfc:	8f 91       	pop	r24
    1bfe:	7f 91       	pop	r23
    1c00:	6f 91       	pop	r22
    1c02:	5f 91       	pop	r21
    1c04:	4f 91       	pop	r20
    1c06:	3f 91       	pop	r19
    1c08:	2f 91       	pop	r18
    1c0a:	0f 90       	pop	r0
    1c0c:	0f be       	out	0x3f, r0	; 63
    1c0e:	0f 90       	pop	r0
    1c10:	1f 90       	pop	r1
    1c12:	18 95       	reti

00001c14 <__vector_10>:
ISR(TIMER0_COMP_vect)
{
    1c14:	1f 92       	push	r1
    1c16:	0f 92       	push	r0
    1c18:	0f b6       	in	r0, 0x3f	; 63
    1c1a:	0f 92       	push	r0
    1c1c:	11 24       	eor	r1, r1
    1c1e:	2f 93       	push	r18
    1c20:	3f 93       	push	r19
    1c22:	4f 93       	push	r20
    1c24:	5f 93       	push	r21
    1c26:	6f 93       	push	r22
    1c28:	7f 93       	push	r23
    1c2a:	8f 93       	push	r24
    1c2c:	9f 93       	push	r25
    1c2e:	af 93       	push	r26
    1c30:	bf 93       	push	r27
    1c32:	ef 93       	push	r30
    1c34:	ff 93       	push	r31
    1c36:	df 93       	push	r29
    1c38:	cf 93       	push	r28
    1c3a:	cd b7       	in	r28, 0x3d	; 61
    1c3c:	de b7       	in	r29, 0x3e	; 62
	if (Timer0_OC_Fptr!=NULLPTR)
    1c3e:	80 91 92 00 	lds	r24, 0x0092
    1c42:	90 91 93 00 	lds	r25, 0x0093
    1c46:	00 97       	sbiw	r24, 0x00	; 0
    1c48:	29 f0       	breq	.+10     	; 0x1c54 <__vector_10+0x40>
	{
		Timer0_OC_Fptr();
    1c4a:	e0 91 92 00 	lds	r30, 0x0092
    1c4e:	f0 91 93 00 	lds	r31, 0x0093
    1c52:	09 95       	icall
	}
}
    1c54:	cf 91       	pop	r28
    1c56:	df 91       	pop	r29
    1c58:	ff 91       	pop	r31
    1c5a:	ef 91       	pop	r30
    1c5c:	bf 91       	pop	r27
    1c5e:	af 91       	pop	r26
    1c60:	9f 91       	pop	r25
    1c62:	8f 91       	pop	r24
    1c64:	7f 91       	pop	r23
    1c66:	6f 91       	pop	r22
    1c68:	5f 91       	pop	r21
    1c6a:	4f 91       	pop	r20
    1c6c:	3f 91       	pop	r19
    1c6e:	2f 91       	pop	r18
    1c70:	0f 90       	pop	r0
    1c72:	0f be       	out	0x3f, r0	; 63
    1c74:	0f 90       	pop	r0
    1c76:	1f 90       	pop	r1
    1c78:	18 95       	reti

00001c7a <Timer1_Init>:

/*************************************************TIMER 1 **************************************************/


void Timer1_Init( Timer1Mode_type mode,Timer1Scaler_type scaler,OC1A_Mode_type oc1a_mode,OC1B_Mode_type oc1b_mode)
{
    1c7a:	df 93       	push	r29
    1c7c:	cf 93       	push	r28
    1c7e:	cd b7       	in	r28, 0x3d	; 61
    1c80:	de b7       	in	r29, 0x3e	; 62
    1c82:	2a 97       	sbiw	r28, 0x0a	; 10
    1c84:	0f b6       	in	r0, 0x3f	; 63
    1c86:	f8 94       	cli
    1c88:	de bf       	out	0x3e, r29	; 62
    1c8a:	0f be       	out	0x3f, r0	; 63
    1c8c:	cd bf       	out	0x3d, r28	; 61
    1c8e:	89 83       	std	Y+1, r24	; 0x01
    1c90:	6a 83       	std	Y+2, r22	; 0x02
    1c92:	4b 83       	std	Y+3, r20	; 0x03
    1c94:	2c 83       	std	Y+4, r18	; 0x04
	switch (mode)
    1c96:	89 81       	ldd	r24, Y+1	; 0x01
    1c98:	28 2f       	mov	r18, r24
    1c9a:	30 e0       	ldi	r19, 0x00	; 0
    1c9c:	3a 87       	std	Y+10, r19	; 0x0a
    1c9e:	29 87       	std	Y+9, r18	; 0x09
    1ca0:	89 85       	ldd	r24, Y+9	; 0x09
    1ca2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ca4:	83 30       	cpi	r24, 0x03	; 3
    1ca6:	91 05       	cpc	r25, r1
    1ca8:	09 f4       	brne	.+2      	; 0x1cac <Timer1_Init+0x32>
    1caa:	7f c0       	rjmp	.+254    	; 0x1daa <Timer1_Init+0x130>
    1cac:	29 85       	ldd	r18, Y+9	; 0x09
    1cae:	3a 85       	ldd	r19, Y+10	; 0x0a
    1cb0:	24 30       	cpi	r18, 0x04	; 4
    1cb2:	31 05       	cpc	r19, r1
    1cb4:	84 f4       	brge	.+32     	; 0x1cd6 <Timer1_Init+0x5c>
    1cb6:	89 85       	ldd	r24, Y+9	; 0x09
    1cb8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cba:	81 30       	cpi	r24, 0x01	; 1
    1cbc:	91 05       	cpc	r25, r1
    1cbe:	d9 f1       	breq	.+118    	; 0x1d36 <Timer1_Init+0xbc>
    1cc0:	29 85       	ldd	r18, Y+9	; 0x09
    1cc2:	3a 85       	ldd	r19, Y+10	; 0x0a
    1cc4:	22 30       	cpi	r18, 0x02	; 2
    1cc6:	31 05       	cpc	r19, r1
    1cc8:	0c f0       	brlt	.+2      	; 0x1ccc <Timer1_Init+0x52>
    1cca:	52 c0       	rjmp	.+164    	; 0x1d70 <Timer1_Init+0xf6>
    1ccc:	89 85       	ldd	r24, Y+9	; 0x09
    1cce:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cd0:	00 97       	sbiw	r24, 0x00	; 0
    1cd2:	a1 f0       	breq	.+40     	; 0x1cfc <Timer1_Init+0x82>
    1cd4:	dd c0       	rjmp	.+442    	; 0x1e90 <Timer1_Init+0x216>
    1cd6:	29 85       	ldd	r18, Y+9	; 0x09
    1cd8:	3a 85       	ldd	r19, Y+10	; 0x0a
    1cda:	25 30       	cpi	r18, 0x05	; 5
    1cdc:	31 05       	cpc	r19, r1
    1cde:	09 f4       	brne	.+2      	; 0x1ce2 <Timer1_Init+0x68>
    1ce0:	9e c0       	rjmp	.+316    	; 0x1e1e <Timer1_Init+0x1a4>
    1ce2:	89 85       	ldd	r24, Y+9	; 0x09
    1ce4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ce6:	85 30       	cpi	r24, 0x05	; 5
    1ce8:	91 05       	cpc	r25, r1
    1cea:	0c f4       	brge	.+2      	; 0x1cee <Timer1_Init+0x74>
    1cec:	7b c0       	rjmp	.+246    	; 0x1de4 <Timer1_Init+0x16a>
    1cee:	29 85       	ldd	r18, Y+9	; 0x09
    1cf0:	3a 85       	ldd	r19, Y+10	; 0x0a
    1cf2:	26 30       	cpi	r18, 0x06	; 6
    1cf4:	31 05       	cpc	r19, r1
    1cf6:	09 f4       	brne	.+2      	; 0x1cfa <Timer1_Init+0x80>
    1cf8:	af c0       	rjmp	.+350    	; 0x1e58 <Timer1_Init+0x1de>
    1cfa:	ca c0       	rjmp	.+404    	; 0x1e90 <Timer1_Init+0x216>
	{
		case TIMER1_NORMAL_MODE:
		CLR_BIT(TCCR1A,WGM10);
    1cfc:	af e4       	ldi	r26, 0x4F	; 79
    1cfe:	b0 e0       	ldi	r27, 0x00	; 0
    1d00:	ef e4       	ldi	r30, 0x4F	; 79
    1d02:	f0 e0       	ldi	r31, 0x00	; 0
    1d04:	80 81       	ld	r24, Z
    1d06:	8e 7f       	andi	r24, 0xFE	; 254
    1d08:	8c 93       	st	X, r24
		CLR_BIT(TCCR1A,WGM11);
    1d0a:	af e4       	ldi	r26, 0x4F	; 79
    1d0c:	b0 e0       	ldi	r27, 0x00	; 0
    1d0e:	ef e4       	ldi	r30, 0x4F	; 79
    1d10:	f0 e0       	ldi	r31, 0x00	; 0
    1d12:	80 81       	ld	r24, Z
    1d14:	8d 7f       	andi	r24, 0xFD	; 253
    1d16:	8c 93       	st	X, r24
		CLR_BIT(TCCR1B,WGM12);
    1d18:	ae e4       	ldi	r26, 0x4E	; 78
    1d1a:	b0 e0       	ldi	r27, 0x00	; 0
    1d1c:	ee e4       	ldi	r30, 0x4E	; 78
    1d1e:	f0 e0       	ldi	r31, 0x00	; 0
    1d20:	80 81       	ld	r24, Z
    1d22:	87 7f       	andi	r24, 0xF7	; 247
    1d24:	8c 93       	st	X, r24
		CLR_BIT(TCCR1B,WGM13);
    1d26:	ae e4       	ldi	r26, 0x4E	; 78
    1d28:	b0 e0       	ldi	r27, 0x00	; 0
    1d2a:	ee e4       	ldi	r30, 0x4E	; 78
    1d2c:	f0 e0       	ldi	r31, 0x00	; 0
    1d2e:	80 81       	ld	r24, Z
    1d30:	8f 7e       	andi	r24, 0xEF	; 239
    1d32:	8c 93       	st	X, r24
    1d34:	ad c0       	rjmp	.+346    	; 0x1e90 <Timer1_Init+0x216>
		break;
		case TIMER1_CTC_ICR_TOP_MODE:
		CLR_BIT(TCCR1A,WGM10);
    1d36:	af e4       	ldi	r26, 0x4F	; 79
    1d38:	b0 e0       	ldi	r27, 0x00	; 0
    1d3a:	ef e4       	ldi	r30, 0x4F	; 79
    1d3c:	f0 e0       	ldi	r31, 0x00	; 0
    1d3e:	80 81       	ld	r24, Z
    1d40:	8e 7f       	andi	r24, 0xFE	; 254
    1d42:	8c 93       	st	X, r24
		CLR_BIT(TCCR1A,WGM11);
    1d44:	af e4       	ldi	r26, 0x4F	; 79
    1d46:	b0 e0       	ldi	r27, 0x00	; 0
    1d48:	ef e4       	ldi	r30, 0x4F	; 79
    1d4a:	f0 e0       	ldi	r31, 0x00	; 0
    1d4c:	80 81       	ld	r24, Z
    1d4e:	8d 7f       	andi	r24, 0xFD	; 253
    1d50:	8c 93       	st	X, r24
		SET_BIT(TCCR1B,WGM12);
    1d52:	ae e4       	ldi	r26, 0x4E	; 78
    1d54:	b0 e0       	ldi	r27, 0x00	; 0
    1d56:	ee e4       	ldi	r30, 0x4E	; 78
    1d58:	f0 e0       	ldi	r31, 0x00	; 0
    1d5a:	80 81       	ld	r24, Z
    1d5c:	88 60       	ori	r24, 0x08	; 8
    1d5e:	8c 93       	st	X, r24
		SET_BIT(TCCR1B,WGM13);
    1d60:	ae e4       	ldi	r26, 0x4E	; 78
    1d62:	b0 e0       	ldi	r27, 0x00	; 0
    1d64:	ee e4       	ldi	r30, 0x4E	; 78
    1d66:	f0 e0       	ldi	r31, 0x00	; 0
    1d68:	80 81       	ld	r24, Z
    1d6a:	80 61       	ori	r24, 0x10	; 16
    1d6c:	8c 93       	st	X, r24
    1d6e:	90 c0       	rjmp	.+288    	; 0x1e90 <Timer1_Init+0x216>
		break;
		
		case TIMER1_CTC_OCRA_TOP_MODE:
		CLR_BIT(TCCR1A,WGM10);
    1d70:	af e4       	ldi	r26, 0x4F	; 79
    1d72:	b0 e0       	ldi	r27, 0x00	; 0
    1d74:	ef e4       	ldi	r30, 0x4F	; 79
    1d76:	f0 e0       	ldi	r31, 0x00	; 0
    1d78:	80 81       	ld	r24, Z
    1d7a:	8e 7f       	andi	r24, 0xFE	; 254
    1d7c:	8c 93       	st	X, r24
		CLR_BIT(TCCR1A,WGM11);
    1d7e:	af e4       	ldi	r26, 0x4F	; 79
    1d80:	b0 e0       	ldi	r27, 0x00	; 0
    1d82:	ef e4       	ldi	r30, 0x4F	; 79
    1d84:	f0 e0       	ldi	r31, 0x00	; 0
    1d86:	80 81       	ld	r24, Z
    1d88:	8d 7f       	andi	r24, 0xFD	; 253
    1d8a:	8c 93       	st	X, r24
		SET_BIT(TCCR1B,WGM12);
    1d8c:	ae e4       	ldi	r26, 0x4E	; 78
    1d8e:	b0 e0       	ldi	r27, 0x00	; 0
    1d90:	ee e4       	ldi	r30, 0x4E	; 78
    1d92:	f0 e0       	ldi	r31, 0x00	; 0
    1d94:	80 81       	ld	r24, Z
    1d96:	88 60       	ori	r24, 0x08	; 8
    1d98:	8c 93       	st	X, r24
		CLR_BIT(TCCR1B,WGM13);
    1d9a:	ae e4       	ldi	r26, 0x4E	; 78
    1d9c:	b0 e0       	ldi	r27, 0x00	; 0
    1d9e:	ee e4       	ldi	r30, 0x4E	; 78
    1da0:	f0 e0       	ldi	r31, 0x00	; 0
    1da2:	80 81       	ld	r24, Z
    1da4:	8f 7e       	andi	r24, 0xEF	; 239
    1da6:	8c 93       	st	X, r24
    1da8:	73 c0       	rjmp	.+230    	; 0x1e90 <Timer1_Init+0x216>
		break;
		
		case TIMER1_FASTPWM_ICR_TOP_MODE:
		CLR_BIT(TCCR1A,WGM10);
    1daa:	af e4       	ldi	r26, 0x4F	; 79
    1dac:	b0 e0       	ldi	r27, 0x00	; 0
    1dae:	ef e4       	ldi	r30, 0x4F	; 79
    1db0:	f0 e0       	ldi	r31, 0x00	; 0
    1db2:	80 81       	ld	r24, Z
    1db4:	8e 7f       	andi	r24, 0xFE	; 254
    1db6:	8c 93       	st	X, r24
		SET_BIT(TCCR1A,WGM11);
    1db8:	af e4       	ldi	r26, 0x4F	; 79
    1dba:	b0 e0       	ldi	r27, 0x00	; 0
    1dbc:	ef e4       	ldi	r30, 0x4F	; 79
    1dbe:	f0 e0       	ldi	r31, 0x00	; 0
    1dc0:	80 81       	ld	r24, Z
    1dc2:	82 60       	ori	r24, 0x02	; 2
    1dc4:	8c 93       	st	X, r24
		SET_BIT(TCCR1B,WGM12);
    1dc6:	ae e4       	ldi	r26, 0x4E	; 78
    1dc8:	b0 e0       	ldi	r27, 0x00	; 0
    1dca:	ee e4       	ldi	r30, 0x4E	; 78
    1dcc:	f0 e0       	ldi	r31, 0x00	; 0
    1dce:	80 81       	ld	r24, Z
    1dd0:	88 60       	ori	r24, 0x08	; 8
    1dd2:	8c 93       	st	X, r24
		SET_BIT(TCCR1B,WGM13);
    1dd4:	ae e4       	ldi	r26, 0x4E	; 78
    1dd6:	b0 e0       	ldi	r27, 0x00	; 0
    1dd8:	ee e4       	ldi	r30, 0x4E	; 78
    1dda:	f0 e0       	ldi	r31, 0x00	; 0
    1ddc:	80 81       	ld	r24, Z
    1dde:	80 61       	ori	r24, 0x10	; 16
    1de0:	8c 93       	st	X, r24
    1de2:	56 c0       	rjmp	.+172    	; 0x1e90 <Timer1_Init+0x216>
		break;
		
		case TIMER1_FASTPWM_OCRA_TOP_MODE:
		SET_BIT(TCCR1A,WGM10);
    1de4:	af e4       	ldi	r26, 0x4F	; 79
    1de6:	b0 e0       	ldi	r27, 0x00	; 0
    1de8:	ef e4       	ldi	r30, 0x4F	; 79
    1dea:	f0 e0       	ldi	r31, 0x00	; 0
    1dec:	80 81       	ld	r24, Z
    1dee:	81 60       	ori	r24, 0x01	; 1
    1df0:	8c 93       	st	X, r24
		SET_BIT(TCCR1A,WGM11);
    1df2:	af e4       	ldi	r26, 0x4F	; 79
    1df4:	b0 e0       	ldi	r27, 0x00	; 0
    1df6:	ef e4       	ldi	r30, 0x4F	; 79
    1df8:	f0 e0       	ldi	r31, 0x00	; 0
    1dfa:	80 81       	ld	r24, Z
    1dfc:	82 60       	ori	r24, 0x02	; 2
    1dfe:	8c 93       	st	X, r24
		SET_BIT(TCCR1B,WGM12);
    1e00:	ae e4       	ldi	r26, 0x4E	; 78
    1e02:	b0 e0       	ldi	r27, 0x00	; 0
    1e04:	ee e4       	ldi	r30, 0x4E	; 78
    1e06:	f0 e0       	ldi	r31, 0x00	; 0
    1e08:	80 81       	ld	r24, Z
    1e0a:	88 60       	ori	r24, 0x08	; 8
    1e0c:	8c 93       	st	X, r24
		SET_BIT(TCCR1B,WGM13);
    1e0e:	ae e4       	ldi	r26, 0x4E	; 78
    1e10:	b0 e0       	ldi	r27, 0x00	; 0
    1e12:	ee e4       	ldi	r30, 0x4E	; 78
    1e14:	f0 e0       	ldi	r31, 0x00	; 0
    1e16:	80 81       	ld	r24, Z
    1e18:	80 61       	ori	r24, 0x10	; 16
    1e1a:	8c 93       	st	X, r24
    1e1c:	39 c0       	rjmp	.+114    	; 0x1e90 <Timer1_Init+0x216>
		break;
		
		case TIMER1_PHASECORRECT_ICR_MODE:
		CLR_BIT(TCCR1A,WGM10);
    1e1e:	af e4       	ldi	r26, 0x4F	; 79
    1e20:	b0 e0       	ldi	r27, 0x00	; 0
    1e22:	ef e4       	ldi	r30, 0x4F	; 79
    1e24:	f0 e0       	ldi	r31, 0x00	; 0
    1e26:	80 81       	ld	r24, Z
    1e28:	8e 7f       	andi	r24, 0xFE	; 254
    1e2a:	8c 93       	st	X, r24
		SET_BIT(TCCR1A,WGM11);
    1e2c:	af e4       	ldi	r26, 0x4F	; 79
    1e2e:	b0 e0       	ldi	r27, 0x00	; 0
    1e30:	ef e4       	ldi	r30, 0x4F	; 79
    1e32:	f0 e0       	ldi	r31, 0x00	; 0
    1e34:	80 81       	ld	r24, Z
    1e36:	82 60       	ori	r24, 0x02	; 2
    1e38:	8c 93       	st	X, r24
		CLR_BIT(TCCR1B,WGM12);
    1e3a:	ae e4       	ldi	r26, 0x4E	; 78
    1e3c:	b0 e0       	ldi	r27, 0x00	; 0
    1e3e:	ee e4       	ldi	r30, 0x4E	; 78
    1e40:	f0 e0       	ldi	r31, 0x00	; 0
    1e42:	80 81       	ld	r24, Z
    1e44:	87 7f       	andi	r24, 0xF7	; 247
    1e46:	8c 93       	st	X, r24
		SET_BIT(TCCR1B,WGM13);
    1e48:	ae e4       	ldi	r26, 0x4E	; 78
    1e4a:	b0 e0       	ldi	r27, 0x00	; 0
    1e4c:	ee e4       	ldi	r30, 0x4E	; 78
    1e4e:	f0 e0       	ldi	r31, 0x00	; 0
    1e50:	80 81       	ld	r24, Z
    1e52:	80 61       	ori	r24, 0x10	; 16
    1e54:	8c 93       	st	X, r24
    1e56:	1c c0       	rjmp	.+56     	; 0x1e90 <Timer1_Init+0x216>
		break;
		
		case TIMER1_PHASECORRECT_OCRA_MODE:
		SET_BIT(TCCR1A,WGM10);
    1e58:	af e4       	ldi	r26, 0x4F	; 79
    1e5a:	b0 e0       	ldi	r27, 0x00	; 0
    1e5c:	ef e4       	ldi	r30, 0x4F	; 79
    1e5e:	f0 e0       	ldi	r31, 0x00	; 0
    1e60:	80 81       	ld	r24, Z
    1e62:	81 60       	ori	r24, 0x01	; 1
    1e64:	8c 93       	st	X, r24
		SET_BIT(TCCR1A,WGM11);
    1e66:	af e4       	ldi	r26, 0x4F	; 79
    1e68:	b0 e0       	ldi	r27, 0x00	; 0
    1e6a:	ef e4       	ldi	r30, 0x4F	; 79
    1e6c:	f0 e0       	ldi	r31, 0x00	; 0
    1e6e:	80 81       	ld	r24, Z
    1e70:	82 60       	ori	r24, 0x02	; 2
    1e72:	8c 93       	st	X, r24
		CLR_BIT(TCCR1B,WGM12);
    1e74:	ae e4       	ldi	r26, 0x4E	; 78
    1e76:	b0 e0       	ldi	r27, 0x00	; 0
    1e78:	ee e4       	ldi	r30, 0x4E	; 78
    1e7a:	f0 e0       	ldi	r31, 0x00	; 0
    1e7c:	80 81       	ld	r24, Z
    1e7e:	87 7f       	andi	r24, 0xF7	; 247
    1e80:	8c 93       	st	X, r24
		SET_BIT(TCCR1B,WGM13);
    1e82:	ae e4       	ldi	r26, 0x4E	; 78
    1e84:	b0 e0       	ldi	r27, 0x00	; 0
    1e86:	ee e4       	ldi	r30, 0x4E	; 78
    1e88:	f0 e0       	ldi	r31, 0x00	; 0
    1e8a:	80 81       	ld	r24, Z
    1e8c:	80 61       	ori	r24, 0x10	; 16
    1e8e:	8c 93       	st	X, r24
		break;
	}
	switch (oc1a_mode)
    1e90:	8b 81       	ldd	r24, Y+3	; 0x03
    1e92:	28 2f       	mov	r18, r24
    1e94:	30 e0       	ldi	r19, 0x00	; 0
    1e96:	38 87       	std	Y+8, r19	; 0x08
    1e98:	2f 83       	std	Y+7, r18	; 0x07
    1e9a:	8f 81       	ldd	r24, Y+7	; 0x07
    1e9c:	98 85       	ldd	r25, Y+8	; 0x08
    1e9e:	81 30       	cpi	r24, 0x01	; 1
    1ea0:	91 05       	cpc	r25, r1
    1ea2:	21 f1       	breq	.+72     	; 0x1eec <Timer1_Init+0x272>
    1ea4:	2f 81       	ldd	r18, Y+7	; 0x07
    1ea6:	38 85       	ldd	r19, Y+8	; 0x08
    1ea8:	22 30       	cpi	r18, 0x02	; 2
    1eaa:	31 05       	cpc	r19, r1
    1eac:	2c f4       	brge	.+10     	; 0x1eb8 <Timer1_Init+0x23e>
    1eae:	8f 81       	ldd	r24, Y+7	; 0x07
    1eb0:	98 85       	ldd	r25, Y+8	; 0x08
    1eb2:	00 97       	sbiw	r24, 0x00	; 0
    1eb4:	61 f0       	breq	.+24     	; 0x1ece <Timer1_Init+0x254>
    1eb6:	46 c0       	rjmp	.+140    	; 0x1f44 <Timer1_Init+0x2ca>
    1eb8:	2f 81       	ldd	r18, Y+7	; 0x07
    1eba:	38 85       	ldd	r19, Y+8	; 0x08
    1ebc:	22 30       	cpi	r18, 0x02	; 2
    1ebe:	31 05       	cpc	r19, r1
    1ec0:	21 f1       	breq	.+72     	; 0x1f0a <Timer1_Init+0x290>
    1ec2:	8f 81       	ldd	r24, Y+7	; 0x07
    1ec4:	98 85       	ldd	r25, Y+8	; 0x08
    1ec6:	83 30       	cpi	r24, 0x03	; 3
    1ec8:	91 05       	cpc	r25, r1
    1eca:	71 f1       	breq	.+92     	; 0x1f28 <Timer1_Init+0x2ae>
    1ecc:	3b c0       	rjmp	.+118    	; 0x1f44 <Timer1_Init+0x2ca>
	{
		case OCRA_DISCONNECTED:
		CLR_BIT(TCCR1A,COM1A0);
    1ece:	af e4       	ldi	r26, 0x4F	; 79
    1ed0:	b0 e0       	ldi	r27, 0x00	; 0
    1ed2:	ef e4       	ldi	r30, 0x4F	; 79
    1ed4:	f0 e0       	ldi	r31, 0x00	; 0
    1ed6:	80 81       	ld	r24, Z
    1ed8:	8f 7b       	andi	r24, 0xBF	; 191
    1eda:	8c 93       	st	X, r24
		CLR_BIT(TCCR1A,COM1A1);
    1edc:	af e4       	ldi	r26, 0x4F	; 79
    1ede:	b0 e0       	ldi	r27, 0x00	; 0
    1ee0:	ef e4       	ldi	r30, 0x4F	; 79
    1ee2:	f0 e0       	ldi	r31, 0x00	; 0
    1ee4:	80 81       	ld	r24, Z
    1ee6:	8f 77       	andi	r24, 0x7F	; 127
    1ee8:	8c 93       	st	X, r24
    1eea:	2c c0       	rjmp	.+88     	; 0x1f44 <Timer1_Init+0x2ca>
		break;
		case OCRA_TOGGLE:
		SET_BIT(TCCR1A,COM1A0);
    1eec:	af e4       	ldi	r26, 0x4F	; 79
    1eee:	b0 e0       	ldi	r27, 0x00	; 0
    1ef0:	ef e4       	ldi	r30, 0x4F	; 79
    1ef2:	f0 e0       	ldi	r31, 0x00	; 0
    1ef4:	80 81       	ld	r24, Z
    1ef6:	80 64       	ori	r24, 0x40	; 64
    1ef8:	8c 93       	st	X, r24
		CLR_BIT(TCCR1A,COM1A1);
    1efa:	af e4       	ldi	r26, 0x4F	; 79
    1efc:	b0 e0       	ldi	r27, 0x00	; 0
    1efe:	ef e4       	ldi	r30, 0x4F	; 79
    1f00:	f0 e0       	ldi	r31, 0x00	; 0
    1f02:	80 81       	ld	r24, Z
    1f04:	8f 77       	andi	r24, 0x7F	; 127
    1f06:	8c 93       	st	X, r24
    1f08:	1d c0       	rjmp	.+58     	; 0x1f44 <Timer1_Init+0x2ca>
		break;
		case OCRA_NON_INVERTING:
		CLR_BIT(TCCR1A,COM1A0);
    1f0a:	af e4       	ldi	r26, 0x4F	; 79
    1f0c:	b0 e0       	ldi	r27, 0x00	; 0
    1f0e:	ef e4       	ldi	r30, 0x4F	; 79
    1f10:	f0 e0       	ldi	r31, 0x00	; 0
    1f12:	80 81       	ld	r24, Z
    1f14:	8f 7b       	andi	r24, 0xBF	; 191
    1f16:	8c 93       	st	X, r24
		SET_BIT(TCCR1A,COM1A1);
    1f18:	af e4       	ldi	r26, 0x4F	; 79
    1f1a:	b0 e0       	ldi	r27, 0x00	; 0
    1f1c:	ef e4       	ldi	r30, 0x4F	; 79
    1f1e:	f0 e0       	ldi	r31, 0x00	; 0
    1f20:	80 81       	ld	r24, Z
    1f22:	80 68       	ori	r24, 0x80	; 128
    1f24:	8c 93       	st	X, r24
    1f26:	0e c0       	rjmp	.+28     	; 0x1f44 <Timer1_Init+0x2ca>
		break;
		case OCRA_INVERTING:
		SET_BIT(TCCR1A,COM1A0);
    1f28:	af e4       	ldi	r26, 0x4F	; 79
    1f2a:	b0 e0       	ldi	r27, 0x00	; 0
    1f2c:	ef e4       	ldi	r30, 0x4F	; 79
    1f2e:	f0 e0       	ldi	r31, 0x00	; 0
    1f30:	80 81       	ld	r24, Z
    1f32:	80 64       	ori	r24, 0x40	; 64
    1f34:	8c 93       	st	X, r24
		SET_BIT(TCCR1A,COM1A1);
    1f36:	af e4       	ldi	r26, 0x4F	; 79
    1f38:	b0 e0       	ldi	r27, 0x00	; 0
    1f3a:	ef e4       	ldi	r30, 0x4F	; 79
    1f3c:	f0 e0       	ldi	r31, 0x00	; 0
    1f3e:	80 81       	ld	r24, Z
    1f40:	80 68       	ori	r24, 0x80	; 128
    1f42:	8c 93       	st	X, r24
		break;
	}
	switch (oc1b_mode)
    1f44:	8c 81       	ldd	r24, Y+4	; 0x04
    1f46:	28 2f       	mov	r18, r24
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	3e 83       	std	Y+6, r19	; 0x06
    1f4c:	2d 83       	std	Y+5, r18	; 0x05
    1f4e:	8d 81       	ldd	r24, Y+5	; 0x05
    1f50:	9e 81       	ldd	r25, Y+6	; 0x06
    1f52:	81 30       	cpi	r24, 0x01	; 1
    1f54:	91 05       	cpc	r25, r1
    1f56:	21 f1       	breq	.+72     	; 0x1fa0 <Timer1_Init+0x326>
    1f58:	2d 81       	ldd	r18, Y+5	; 0x05
    1f5a:	3e 81       	ldd	r19, Y+6	; 0x06
    1f5c:	22 30       	cpi	r18, 0x02	; 2
    1f5e:	31 05       	cpc	r19, r1
    1f60:	2c f4       	brge	.+10     	; 0x1f6c <Timer1_Init+0x2f2>
    1f62:	8d 81       	ldd	r24, Y+5	; 0x05
    1f64:	9e 81       	ldd	r25, Y+6	; 0x06
    1f66:	00 97       	sbiw	r24, 0x00	; 0
    1f68:	61 f0       	breq	.+24     	; 0x1f82 <Timer1_Init+0x308>
    1f6a:	46 c0       	rjmp	.+140    	; 0x1ff8 <Timer1_Init+0x37e>
    1f6c:	2d 81       	ldd	r18, Y+5	; 0x05
    1f6e:	3e 81       	ldd	r19, Y+6	; 0x06
    1f70:	22 30       	cpi	r18, 0x02	; 2
    1f72:	31 05       	cpc	r19, r1
    1f74:	21 f1       	breq	.+72     	; 0x1fbe <Timer1_Init+0x344>
    1f76:	8d 81       	ldd	r24, Y+5	; 0x05
    1f78:	9e 81       	ldd	r25, Y+6	; 0x06
    1f7a:	83 30       	cpi	r24, 0x03	; 3
    1f7c:	91 05       	cpc	r25, r1
    1f7e:	71 f1       	breq	.+92     	; 0x1fdc <Timer1_Init+0x362>
    1f80:	3b c0       	rjmp	.+118    	; 0x1ff8 <Timer1_Init+0x37e>
	{
		case OCRB_DISCONNECTED:
		CLR_BIT(TCCR1A,COM1B0);
    1f82:	af e4       	ldi	r26, 0x4F	; 79
    1f84:	b0 e0       	ldi	r27, 0x00	; 0
    1f86:	ef e4       	ldi	r30, 0x4F	; 79
    1f88:	f0 e0       	ldi	r31, 0x00	; 0
    1f8a:	80 81       	ld	r24, Z
    1f8c:	8f 7e       	andi	r24, 0xEF	; 239
    1f8e:	8c 93       	st	X, r24
		CLR_BIT(TCCR1A,COM1B1);
    1f90:	af e4       	ldi	r26, 0x4F	; 79
    1f92:	b0 e0       	ldi	r27, 0x00	; 0
    1f94:	ef e4       	ldi	r30, 0x4F	; 79
    1f96:	f0 e0       	ldi	r31, 0x00	; 0
    1f98:	80 81       	ld	r24, Z
    1f9a:	8f 7d       	andi	r24, 0xDF	; 223
    1f9c:	8c 93       	st	X, r24
    1f9e:	2c c0       	rjmp	.+88     	; 0x1ff8 <Timer1_Init+0x37e>
		break;
		case OCRB_TOGGLE:
		SET_BIT(TCCR1A,COM1B0);
    1fa0:	af e4       	ldi	r26, 0x4F	; 79
    1fa2:	b0 e0       	ldi	r27, 0x00	; 0
    1fa4:	ef e4       	ldi	r30, 0x4F	; 79
    1fa6:	f0 e0       	ldi	r31, 0x00	; 0
    1fa8:	80 81       	ld	r24, Z
    1faa:	80 61       	ori	r24, 0x10	; 16
    1fac:	8c 93       	st	X, r24
		CLR_BIT(TCCR1A,COM1B1);
    1fae:	af e4       	ldi	r26, 0x4F	; 79
    1fb0:	b0 e0       	ldi	r27, 0x00	; 0
    1fb2:	ef e4       	ldi	r30, 0x4F	; 79
    1fb4:	f0 e0       	ldi	r31, 0x00	; 0
    1fb6:	80 81       	ld	r24, Z
    1fb8:	8f 7d       	andi	r24, 0xDF	; 223
    1fba:	8c 93       	st	X, r24
    1fbc:	1d c0       	rjmp	.+58     	; 0x1ff8 <Timer1_Init+0x37e>
		break;
		case OCRB_NON_INVERTING:
		CLR_BIT(TCCR1A,COM1B0);
    1fbe:	af e4       	ldi	r26, 0x4F	; 79
    1fc0:	b0 e0       	ldi	r27, 0x00	; 0
    1fc2:	ef e4       	ldi	r30, 0x4F	; 79
    1fc4:	f0 e0       	ldi	r31, 0x00	; 0
    1fc6:	80 81       	ld	r24, Z
    1fc8:	8f 7e       	andi	r24, 0xEF	; 239
    1fca:	8c 93       	st	X, r24
		SET_BIT(TCCR1A,COM1B1);
    1fcc:	af e4       	ldi	r26, 0x4F	; 79
    1fce:	b0 e0       	ldi	r27, 0x00	; 0
    1fd0:	ef e4       	ldi	r30, 0x4F	; 79
    1fd2:	f0 e0       	ldi	r31, 0x00	; 0
    1fd4:	80 81       	ld	r24, Z
    1fd6:	80 62       	ori	r24, 0x20	; 32
    1fd8:	8c 93       	st	X, r24
    1fda:	0e c0       	rjmp	.+28     	; 0x1ff8 <Timer1_Init+0x37e>
		break;
		case OCRB_INVERTING:
		SET_BIT(TCCR1A,COM1B0);
    1fdc:	af e4       	ldi	r26, 0x4F	; 79
    1fde:	b0 e0       	ldi	r27, 0x00	; 0
    1fe0:	ef e4       	ldi	r30, 0x4F	; 79
    1fe2:	f0 e0       	ldi	r31, 0x00	; 0
    1fe4:	80 81       	ld	r24, Z
    1fe6:	80 61       	ori	r24, 0x10	; 16
    1fe8:	8c 93       	st	X, r24
		SET_BIT(TCCR1A,COM1B1);
    1fea:	af e4       	ldi	r26, 0x4F	; 79
    1fec:	b0 e0       	ldi	r27, 0x00	; 0
    1fee:	ef e4       	ldi	r30, 0x4F	; 79
    1ff0:	f0 e0       	ldi	r31, 0x00	; 0
    1ff2:	80 81       	ld	r24, Z
    1ff4:	80 62       	ori	r24, 0x20	; 32
    1ff6:	8c 93       	st	X, r24
		break;
	}
	
	
	TCCR1B&=0XF8;
    1ff8:	ae e4       	ldi	r26, 0x4E	; 78
    1ffa:	b0 e0       	ldi	r27, 0x00	; 0
    1ffc:	ee e4       	ldi	r30, 0x4E	; 78
    1ffe:	f0 e0       	ldi	r31, 0x00	; 0
    2000:	80 81       	ld	r24, Z
    2002:	88 7f       	andi	r24, 0xF8	; 248
    2004:	8c 93       	st	X, r24
	TCCR1B|=scaler;
    2006:	ae e4       	ldi	r26, 0x4E	; 78
    2008:	b0 e0       	ldi	r27, 0x00	; 0
    200a:	ee e4       	ldi	r30, 0x4E	; 78
    200c:	f0 e0       	ldi	r31, 0x00	; 0
    200e:	90 81       	ld	r25, Z
    2010:	8a 81       	ldd	r24, Y+2	; 0x02
    2012:	89 2b       	or	r24, r25
    2014:	8c 93       	st	X, r24

}
    2016:	2a 96       	adiw	r28, 0x0a	; 10
    2018:	0f b6       	in	r0, 0x3f	; 63
    201a:	f8 94       	cli
    201c:	de bf       	out	0x3e, r29	; 62
    201e:	0f be       	out	0x3f, r0	; 63
    2020:	cd bf       	out	0x3d, r28	; 61
    2022:	cf 91       	pop	r28
    2024:	df 91       	pop	r29
    2026:	08 95       	ret

00002028 <Timer1_InputCaptureEdge>:

void Timer1_InputCaptureEdge(ICU_Edge_type edge)
{
    2028:	df 93       	push	r29
    202a:	cf 93       	push	r28
    202c:	0f 92       	push	r0
    202e:	cd b7       	in	r28, 0x3d	; 61
    2030:	de b7       	in	r29, 0x3e	; 62
    2032:	89 83       	std	Y+1, r24	; 0x01
	if(edge==RISING)
    2034:	89 81       	ldd	r24, Y+1	; 0x01
    2036:	88 23       	and	r24, r24
    2038:	41 f4       	brne	.+16     	; 0x204a <Timer1_InputCaptureEdge+0x22>
	SET_BIT(TCCR1B,ICES1);
    203a:	ae e4       	ldi	r26, 0x4E	; 78
    203c:	b0 e0       	ldi	r27, 0x00	; 0
    203e:	ee e4       	ldi	r30, 0x4E	; 78
    2040:	f0 e0       	ldi	r31, 0x00	; 0
    2042:	80 81       	ld	r24, Z
    2044:	80 64       	ori	r24, 0x40	; 64
    2046:	8c 93       	st	X, r24
    2048:	0a c0       	rjmp	.+20     	; 0x205e <Timer1_InputCaptureEdge+0x36>
	
	else if(edge==FALLING)
    204a:	89 81       	ldd	r24, Y+1	; 0x01
    204c:	81 30       	cpi	r24, 0x01	; 1
    204e:	39 f4       	brne	.+14     	; 0x205e <Timer1_InputCaptureEdge+0x36>
	CLR_BIT(TCCR1B,ICES1);
    2050:	ae e4       	ldi	r26, 0x4E	; 78
    2052:	b0 e0       	ldi	r27, 0x00	; 0
    2054:	ee e4       	ldi	r30, 0x4E	; 78
    2056:	f0 e0       	ldi	r31, 0x00	; 0
    2058:	80 81       	ld	r24, Z
    205a:	8f 7b       	andi	r24, 0xBF	; 191
    205c:	8c 93       	st	X, r24

}
    205e:	0f 90       	pop	r0
    2060:	cf 91       	pop	r28
    2062:	df 91       	pop	r29
    2064:	08 95       	ret

00002066 <Timer1_WriteToTCNT1>:

void Timer1_WriteToTCNT1(u16 Value)
{
    2066:	df 93       	push	r29
    2068:	cf 93       	push	r28
    206a:	00 d0       	rcall	.+0      	; 0x206c <Timer1_WriteToTCNT1+0x6>
    206c:	cd b7       	in	r28, 0x3d	; 61
    206e:	de b7       	in	r29, 0x3e	; 62
    2070:	9a 83       	std	Y+2, r25	; 0x02
    2072:	89 83       	std	Y+1, r24	; 0x01
	ASSIGN_REG(TCNT1 , Value);
    2074:	ec e4       	ldi	r30, 0x4C	; 76
    2076:	f0 e0       	ldi	r31, 0x00	; 0
    2078:	89 81       	ldd	r24, Y+1	; 0x01
    207a:	9a 81       	ldd	r25, Y+2	; 0x02
    207c:	91 83       	std	Z+1, r25	; 0x01
    207e:	80 83       	st	Z, r24
}
    2080:	0f 90       	pop	r0
    2082:	0f 90       	pop	r0
    2084:	cf 91       	pop	r28
    2086:	df 91       	pop	r29
    2088:	08 95       	ret

0000208a <Timer1_ReadTCNT1>:


u16 Timer1_ReadTCNT1(void)
{
    208a:	df 93       	push	r29
    208c:	cf 93       	push	r28
    208e:	cd b7       	in	r28, 0x3d	; 61
    2090:	de b7       	in	r29, 0x3e	; 62
	return TCNT1;	
    2092:	ec e4       	ldi	r30, 0x4C	; 76
    2094:	f0 e0       	ldi	r31, 0x00	; 0
    2096:	80 81       	ld	r24, Z
    2098:	91 81       	ldd	r25, Z+1	; 0x01
}
    209a:	cf 91       	pop	r28
    209c:	df 91       	pop	r29
    209e:	08 95       	ret

000020a0 <Timer1_ICU_InterruptEnable>:

/****************************Timer 1 Interrupt functions**************************************/

void Timer1_ICU_InterruptEnable(void)
{
    20a0:	df 93       	push	r29
    20a2:	cf 93       	push	r28
    20a4:	cd b7       	in	r28, 0x3d	; 61
    20a6:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,TICIE1);
    20a8:	a9 e5       	ldi	r26, 0x59	; 89
    20aa:	b0 e0       	ldi	r27, 0x00	; 0
    20ac:	e9 e5       	ldi	r30, 0x59	; 89
    20ae:	f0 e0       	ldi	r31, 0x00	; 0
    20b0:	80 81       	ld	r24, Z
    20b2:	80 62       	ori	r24, 0x20	; 32
    20b4:	8c 93       	st	X, r24
}
    20b6:	cf 91       	pop	r28
    20b8:	df 91       	pop	r29
    20ba:	08 95       	ret

000020bc <Timer1_ICU_InterruptDisable>:
void Timer1_ICU_InterruptDisable(void)
{
    20bc:	df 93       	push	r29
    20be:	cf 93       	push	r28
    20c0:	cd b7       	in	r28, 0x3d	; 61
    20c2:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,TICIE1);
    20c4:	a9 e5       	ldi	r26, 0x59	; 89
    20c6:	b0 e0       	ldi	r27, 0x00	; 0
    20c8:	e9 e5       	ldi	r30, 0x59	; 89
    20ca:	f0 e0       	ldi	r31, 0x00	; 0
    20cc:	80 81       	ld	r24, Z
    20ce:	8f 7d       	andi	r24, 0xDF	; 223
    20d0:	8c 93       	st	X, r24
}
    20d2:	cf 91       	pop	r28
    20d4:	df 91       	pop	r29
    20d6:	08 95       	ret

000020d8 <Timer1_OVF_InterruptEnable>:
void Timer1_OVF_InterruptEnable(void)
{
    20d8:	df 93       	push	r29
    20da:	cf 93       	push	r28
    20dc:	cd b7       	in	r28, 0x3d	; 61
    20de:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,TOIE1);
    20e0:	a9 e5       	ldi	r26, 0x59	; 89
    20e2:	b0 e0       	ldi	r27, 0x00	; 0
    20e4:	e9 e5       	ldi	r30, 0x59	; 89
    20e6:	f0 e0       	ldi	r31, 0x00	; 0
    20e8:	80 81       	ld	r24, Z
    20ea:	84 60       	ori	r24, 0x04	; 4
    20ec:	8c 93       	st	X, r24
}
    20ee:	cf 91       	pop	r28
    20f0:	df 91       	pop	r29
    20f2:	08 95       	ret

000020f4 <Timer1_OVF_InterruptDisable>:
void Timer1_OVF_InterruptDisable(void)
{
    20f4:	df 93       	push	r29
    20f6:	cf 93       	push	r28
    20f8:	cd b7       	in	r28, 0x3d	; 61
    20fa:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,TOIE1);
    20fc:	a9 e5       	ldi	r26, 0x59	; 89
    20fe:	b0 e0       	ldi	r27, 0x00	; 0
    2100:	e9 e5       	ldi	r30, 0x59	; 89
    2102:	f0 e0       	ldi	r31, 0x00	; 0
    2104:	80 81       	ld	r24, Z
    2106:	8b 7f       	andi	r24, 0xFB	; 251
    2108:	8c 93       	st	X, r24
}
    210a:	cf 91       	pop	r28
    210c:	df 91       	pop	r29
    210e:	08 95       	ret

00002110 <Timer1_OCA_InterruptEnable>:
void Timer1_OCA_InterruptEnable(void)
{
    2110:	df 93       	push	r29
    2112:	cf 93       	push	r28
    2114:	cd b7       	in	r28, 0x3d	; 61
    2116:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,OCIE1A);
    2118:	a9 e5       	ldi	r26, 0x59	; 89
    211a:	b0 e0       	ldi	r27, 0x00	; 0
    211c:	e9 e5       	ldi	r30, 0x59	; 89
    211e:	f0 e0       	ldi	r31, 0x00	; 0
    2120:	80 81       	ld	r24, Z
    2122:	80 61       	ori	r24, 0x10	; 16
    2124:	8c 93       	st	X, r24
}
    2126:	cf 91       	pop	r28
    2128:	df 91       	pop	r29
    212a:	08 95       	ret

0000212c <Timer1_OCA_InterruptDisable>:
void Timer1_OCA_InterruptDisable(void)
{
    212c:	df 93       	push	r29
    212e:	cf 93       	push	r28
    2130:	cd b7       	in	r28, 0x3d	; 61
    2132:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,OCIE1A);
    2134:	a9 e5       	ldi	r26, 0x59	; 89
    2136:	b0 e0       	ldi	r27, 0x00	; 0
    2138:	e9 e5       	ldi	r30, 0x59	; 89
    213a:	f0 e0       	ldi	r31, 0x00	; 0
    213c:	80 81       	ld	r24, Z
    213e:	8f 7e       	andi	r24, 0xEF	; 239
    2140:	8c 93       	st	X, r24
}
    2142:	cf 91       	pop	r28
    2144:	df 91       	pop	r29
    2146:	08 95       	ret

00002148 <Timer1_OCB_InterruptEnable>:
void Timer1_OCB_InterruptEnable(void)
{
    2148:	df 93       	push	r29
    214a:	cf 93       	push	r28
    214c:	cd b7       	in	r28, 0x3d	; 61
    214e:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMSK,OCIE1B);
    2150:	a9 e5       	ldi	r26, 0x59	; 89
    2152:	b0 e0       	ldi	r27, 0x00	; 0
    2154:	e9 e5       	ldi	r30, 0x59	; 89
    2156:	f0 e0       	ldi	r31, 0x00	; 0
    2158:	80 81       	ld	r24, Z
    215a:	88 60       	ori	r24, 0x08	; 8
    215c:	8c 93       	st	X, r24
}
    215e:	cf 91       	pop	r28
    2160:	df 91       	pop	r29
    2162:	08 95       	ret

00002164 <Timer1_OCB_InterruptDisable>:
void Timer1_OCB_InterruptDisable(void)
{
    2164:	df 93       	push	r29
    2166:	cf 93       	push	r28
    2168:	cd b7       	in	r28, 0x3d	; 61
    216a:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(TIMSK,OCIE1B);
    216c:	a9 e5       	ldi	r26, 0x59	; 89
    216e:	b0 e0       	ldi	r27, 0x00	; 0
    2170:	e9 e5       	ldi	r30, 0x59	; 89
    2172:	f0 e0       	ldi	r31, 0x00	; 0
    2174:	80 81       	ld	r24, Z
    2176:	87 7f       	andi	r24, 0xF7	; 247
    2178:	8c 93       	st	X, r24
}
    217a:	cf 91       	pop	r28
    217c:	df 91       	pop	r29
    217e:	08 95       	ret

00002180 <Timer1_OVF_SetCallBack>:

/*********************************Timer 1 Call Back functions*****************************************/

void Timer1_OVF_SetCallBack(void(*LocalFptr)(void))
{
    2180:	df 93       	push	r29
    2182:	cf 93       	push	r28
    2184:	00 d0       	rcall	.+0      	; 0x2186 <Timer1_OVF_SetCallBack+0x6>
    2186:	cd b7       	in	r28, 0x3d	; 61
    2188:	de b7       	in	r29, 0x3e	; 62
    218a:	9a 83       	std	Y+2, r25	; 0x02
    218c:	89 83       	std	Y+1, r24	; 0x01
	Timer1_OVF_Fptr=LocalFptr;
    218e:	89 81       	ldd	r24, Y+1	; 0x01
    2190:	9a 81       	ldd	r25, Y+2	; 0x02
    2192:	90 93 89 00 	sts	0x0089, r25
    2196:	80 93 88 00 	sts	0x0088, r24
}
    219a:	0f 90       	pop	r0
    219c:	0f 90       	pop	r0
    219e:	cf 91       	pop	r28
    21a0:	df 91       	pop	r29
    21a2:	08 95       	ret

000021a4 <Timer1_OCA_SetCallBack>:
void Timer1_OCA_SetCallBack(void(*LocalFptr)(void))
{
    21a4:	df 93       	push	r29
    21a6:	cf 93       	push	r28
    21a8:	00 d0       	rcall	.+0      	; 0x21aa <Timer1_OCA_SetCallBack+0x6>
    21aa:	cd b7       	in	r28, 0x3d	; 61
    21ac:	de b7       	in	r29, 0x3e	; 62
    21ae:	9a 83       	std	Y+2, r25	; 0x02
    21b0:	89 83       	std	Y+1, r24	; 0x01
	Timer1_OCA_Fptr=LocalFptr;
    21b2:	89 81       	ldd	r24, Y+1	; 0x01
    21b4:	9a 81       	ldd	r25, Y+2	; 0x02
    21b6:	90 93 8b 00 	sts	0x008B, r25
    21ba:	80 93 8a 00 	sts	0x008A, r24
}
    21be:	0f 90       	pop	r0
    21c0:	0f 90       	pop	r0
    21c2:	cf 91       	pop	r28
    21c4:	df 91       	pop	r29
    21c6:	08 95       	ret

000021c8 <Timer1_OCB_SetCallBack>:
void Timer1_OCB_SetCallBack(void(*LocalFptr)(void))
{
    21c8:	df 93       	push	r29
    21ca:	cf 93       	push	r28
    21cc:	00 d0       	rcall	.+0      	; 0x21ce <Timer1_OCB_SetCallBack+0x6>
    21ce:	cd b7       	in	r28, 0x3d	; 61
    21d0:	de b7       	in	r29, 0x3e	; 62
    21d2:	9a 83       	std	Y+2, r25	; 0x02
    21d4:	89 83       	std	Y+1, r24	; 0x01
	Timer1_OCB_Fptr=LocalFptr;
    21d6:	89 81       	ldd	r24, Y+1	; 0x01
    21d8:	9a 81       	ldd	r25, Y+2	; 0x02
    21da:	90 93 8d 00 	sts	0x008D, r25
    21de:	80 93 8c 00 	sts	0x008C, r24
}
    21e2:	0f 90       	pop	r0
    21e4:	0f 90       	pop	r0
    21e6:	cf 91       	pop	r28
    21e8:	df 91       	pop	r29
    21ea:	08 95       	ret

000021ec <Timer1_ICU_SetCallBack>:
void Timer1_ICU_SetCallBack(void(*LocalFptr)(void))
{
    21ec:	df 93       	push	r29
    21ee:	cf 93       	push	r28
    21f0:	00 d0       	rcall	.+0      	; 0x21f2 <Timer1_ICU_SetCallBack+0x6>
    21f2:	cd b7       	in	r28, 0x3d	; 61
    21f4:	de b7       	in	r29, 0x3e	; 62
    21f6:	9a 83       	std	Y+2, r25	; 0x02
    21f8:	89 83       	std	Y+1, r24	; 0x01
	Timer1_ICU_Fptr=LocalFptr;
    21fa:	89 81       	ldd	r24, Y+1	; 0x01
    21fc:	9a 81       	ldd	r25, Y+2	; 0x02
    21fe:	90 93 8f 00 	sts	0x008F, r25
    2202:	80 93 8e 00 	sts	0x008E, r24
}
    2206:	0f 90       	pop	r0
    2208:	0f 90       	pop	r0
    220a:	cf 91       	pop	r28
    220c:	df 91       	pop	r29
    220e:	08 95       	ret

00002210 <__vector_9>:

/*********************************Timer 1 ISR functions*********************************************/
ISR(TIMER1_OVF_vect)
{
    2210:	1f 92       	push	r1
    2212:	0f 92       	push	r0
    2214:	0f b6       	in	r0, 0x3f	; 63
    2216:	0f 92       	push	r0
    2218:	11 24       	eor	r1, r1
    221a:	2f 93       	push	r18
    221c:	3f 93       	push	r19
    221e:	4f 93       	push	r20
    2220:	5f 93       	push	r21
    2222:	6f 93       	push	r22
    2224:	7f 93       	push	r23
    2226:	8f 93       	push	r24
    2228:	9f 93       	push	r25
    222a:	af 93       	push	r26
    222c:	bf 93       	push	r27
    222e:	ef 93       	push	r30
    2230:	ff 93       	push	r31
    2232:	df 93       	push	r29
    2234:	cf 93       	push	r28
    2236:	cd b7       	in	r28, 0x3d	; 61
    2238:	de b7       	in	r29, 0x3e	; 62
	if(Timer1_OVF_Fptr!=NULLPTR)
    223a:	80 91 88 00 	lds	r24, 0x0088
    223e:	90 91 89 00 	lds	r25, 0x0089
    2242:	00 97       	sbiw	r24, 0x00	; 0
    2244:	29 f0       	breq	.+10     	; 0x2250 <__vector_9+0x40>
	{
		Timer1_OVF_Fptr();
    2246:	e0 91 88 00 	lds	r30, 0x0088
    224a:	f0 91 89 00 	lds	r31, 0x0089
    224e:	09 95       	icall
	}
}
    2250:	cf 91       	pop	r28
    2252:	df 91       	pop	r29
    2254:	ff 91       	pop	r31
    2256:	ef 91       	pop	r30
    2258:	bf 91       	pop	r27
    225a:	af 91       	pop	r26
    225c:	9f 91       	pop	r25
    225e:	8f 91       	pop	r24
    2260:	7f 91       	pop	r23
    2262:	6f 91       	pop	r22
    2264:	5f 91       	pop	r21
    2266:	4f 91       	pop	r20
    2268:	3f 91       	pop	r19
    226a:	2f 91       	pop	r18
    226c:	0f 90       	pop	r0
    226e:	0f be       	out	0x3f, r0	; 63
    2270:	0f 90       	pop	r0
    2272:	1f 90       	pop	r1
    2274:	18 95       	reti

00002276 <__vector_7>:
ISR(TIMER1_OCA_vect)
{
    2276:	1f 92       	push	r1
    2278:	0f 92       	push	r0
    227a:	0f b6       	in	r0, 0x3f	; 63
    227c:	0f 92       	push	r0
    227e:	11 24       	eor	r1, r1
    2280:	2f 93       	push	r18
    2282:	3f 93       	push	r19
    2284:	4f 93       	push	r20
    2286:	5f 93       	push	r21
    2288:	6f 93       	push	r22
    228a:	7f 93       	push	r23
    228c:	8f 93       	push	r24
    228e:	9f 93       	push	r25
    2290:	af 93       	push	r26
    2292:	bf 93       	push	r27
    2294:	ef 93       	push	r30
    2296:	ff 93       	push	r31
    2298:	df 93       	push	r29
    229a:	cf 93       	push	r28
    229c:	cd b7       	in	r28, 0x3d	; 61
    229e:	de b7       	in	r29, 0x3e	; 62
	if(Timer1_OCA_Fptr!=NULLPTR)
    22a0:	80 91 8a 00 	lds	r24, 0x008A
    22a4:	90 91 8b 00 	lds	r25, 0x008B
    22a8:	00 97       	sbiw	r24, 0x00	; 0
    22aa:	29 f0       	breq	.+10     	; 0x22b6 <__vector_7+0x40>
	{
		Timer1_OCA_Fptr();
    22ac:	e0 91 8a 00 	lds	r30, 0x008A
    22b0:	f0 91 8b 00 	lds	r31, 0x008B
    22b4:	09 95       	icall
	}
}
    22b6:	cf 91       	pop	r28
    22b8:	df 91       	pop	r29
    22ba:	ff 91       	pop	r31
    22bc:	ef 91       	pop	r30
    22be:	bf 91       	pop	r27
    22c0:	af 91       	pop	r26
    22c2:	9f 91       	pop	r25
    22c4:	8f 91       	pop	r24
    22c6:	7f 91       	pop	r23
    22c8:	6f 91       	pop	r22
    22ca:	5f 91       	pop	r21
    22cc:	4f 91       	pop	r20
    22ce:	3f 91       	pop	r19
    22d0:	2f 91       	pop	r18
    22d2:	0f 90       	pop	r0
    22d4:	0f be       	out	0x3f, r0	; 63
    22d6:	0f 90       	pop	r0
    22d8:	1f 90       	pop	r1
    22da:	18 95       	reti

000022dc <__vector_8>:
ISR(TIMER1_OCB_vect)
{
    22dc:	1f 92       	push	r1
    22de:	0f 92       	push	r0
    22e0:	0f b6       	in	r0, 0x3f	; 63
    22e2:	0f 92       	push	r0
    22e4:	11 24       	eor	r1, r1
    22e6:	2f 93       	push	r18
    22e8:	3f 93       	push	r19
    22ea:	4f 93       	push	r20
    22ec:	5f 93       	push	r21
    22ee:	6f 93       	push	r22
    22f0:	7f 93       	push	r23
    22f2:	8f 93       	push	r24
    22f4:	9f 93       	push	r25
    22f6:	af 93       	push	r26
    22f8:	bf 93       	push	r27
    22fa:	ef 93       	push	r30
    22fc:	ff 93       	push	r31
    22fe:	df 93       	push	r29
    2300:	cf 93       	push	r28
    2302:	cd b7       	in	r28, 0x3d	; 61
    2304:	de b7       	in	r29, 0x3e	; 62
	if(Timer1_OCB_Fptr!=NULLPTR)
    2306:	80 91 8c 00 	lds	r24, 0x008C
    230a:	90 91 8d 00 	lds	r25, 0x008D
    230e:	00 97       	sbiw	r24, 0x00	; 0
    2310:	29 f0       	breq	.+10     	; 0x231c <__vector_8+0x40>
	{
		Timer1_OCB_Fptr();
    2312:	e0 91 8c 00 	lds	r30, 0x008C
    2316:	f0 91 8d 00 	lds	r31, 0x008D
    231a:	09 95       	icall
	}
}
    231c:	cf 91       	pop	r28
    231e:	df 91       	pop	r29
    2320:	ff 91       	pop	r31
    2322:	ef 91       	pop	r30
    2324:	bf 91       	pop	r27
    2326:	af 91       	pop	r26
    2328:	9f 91       	pop	r25
    232a:	8f 91       	pop	r24
    232c:	7f 91       	pop	r23
    232e:	6f 91       	pop	r22
    2330:	5f 91       	pop	r21
    2332:	4f 91       	pop	r20
    2334:	3f 91       	pop	r19
    2336:	2f 91       	pop	r18
    2338:	0f 90       	pop	r0
    233a:	0f be       	out	0x3f, r0	; 63
    233c:	0f 90       	pop	r0
    233e:	1f 90       	pop	r1
    2340:	18 95       	reti

00002342 <__vector_6>:
ISR(TIMER1_CAPT_vect)
{
    2342:	1f 92       	push	r1
    2344:	0f 92       	push	r0
    2346:	0f b6       	in	r0, 0x3f	; 63
    2348:	0f 92       	push	r0
    234a:	11 24       	eor	r1, r1
    234c:	2f 93       	push	r18
    234e:	3f 93       	push	r19
    2350:	4f 93       	push	r20
    2352:	5f 93       	push	r21
    2354:	6f 93       	push	r22
    2356:	7f 93       	push	r23
    2358:	8f 93       	push	r24
    235a:	9f 93       	push	r25
    235c:	af 93       	push	r26
    235e:	bf 93       	push	r27
    2360:	ef 93       	push	r30
    2362:	ff 93       	push	r31
    2364:	df 93       	push	r29
    2366:	cf 93       	push	r28
    2368:	cd b7       	in	r28, 0x3d	; 61
    236a:	de b7       	in	r29, 0x3e	; 62
	if(Timer1_ICU_Fptr!=NULLPTR)
    236c:	80 91 8e 00 	lds	r24, 0x008E
    2370:	90 91 8f 00 	lds	r25, 0x008F
    2374:	00 97       	sbiw	r24, 0x00	; 0
    2376:	29 f0       	breq	.+10     	; 0x2382 <__vector_6+0x40>
	{
		Timer1_ICU_Fptr();
    2378:	e0 91 8e 00 	lds	r30, 0x008E
    237c:	f0 91 8f 00 	lds	r31, 0x008F
    2380:	09 95       	icall
	}
}
    2382:	cf 91       	pop	r28
    2384:	df 91       	pop	r29
    2386:	ff 91       	pop	r31
    2388:	ef 91       	pop	r30
    238a:	bf 91       	pop	r27
    238c:	af 91       	pop	r26
    238e:	9f 91       	pop	r25
    2390:	8f 91       	pop	r24
    2392:	7f 91       	pop	r23
    2394:	6f 91       	pop	r22
    2396:	5f 91       	pop	r21
    2398:	4f 91       	pop	r20
    239a:	3f 91       	pop	r19
    239c:	2f 91       	pop	r18
    239e:	0f 90       	pop	r0
    23a0:	0f be       	out	0x3f, r0	; 63
    23a2:	0f 90       	pop	r0
    23a4:	1f 90       	pop	r1
    23a6:	18 95       	reti

000023a8 <__prologue_saves__>:
    23a8:	2f 92       	push	r2
    23aa:	3f 92       	push	r3
    23ac:	4f 92       	push	r4
    23ae:	5f 92       	push	r5
    23b0:	6f 92       	push	r6
    23b2:	7f 92       	push	r7
    23b4:	8f 92       	push	r8
    23b6:	9f 92       	push	r9
    23b8:	af 92       	push	r10
    23ba:	bf 92       	push	r11
    23bc:	cf 92       	push	r12
    23be:	df 92       	push	r13
    23c0:	ef 92       	push	r14
    23c2:	ff 92       	push	r15
    23c4:	0f 93       	push	r16
    23c6:	1f 93       	push	r17
    23c8:	cf 93       	push	r28
    23ca:	df 93       	push	r29
    23cc:	cd b7       	in	r28, 0x3d	; 61
    23ce:	de b7       	in	r29, 0x3e	; 62
    23d0:	ca 1b       	sub	r28, r26
    23d2:	db 0b       	sbc	r29, r27
    23d4:	0f b6       	in	r0, 0x3f	; 63
    23d6:	f8 94       	cli
    23d8:	de bf       	out	0x3e, r29	; 62
    23da:	0f be       	out	0x3f, r0	; 63
    23dc:	cd bf       	out	0x3d, r28	; 61
    23de:	09 94       	ijmp

000023e0 <__epilogue_restores__>:
    23e0:	2a 88       	ldd	r2, Y+18	; 0x12
    23e2:	39 88       	ldd	r3, Y+17	; 0x11
    23e4:	48 88       	ldd	r4, Y+16	; 0x10
    23e6:	5f 84       	ldd	r5, Y+15	; 0x0f
    23e8:	6e 84       	ldd	r6, Y+14	; 0x0e
    23ea:	7d 84       	ldd	r7, Y+13	; 0x0d
    23ec:	8c 84       	ldd	r8, Y+12	; 0x0c
    23ee:	9b 84       	ldd	r9, Y+11	; 0x0b
    23f0:	aa 84       	ldd	r10, Y+10	; 0x0a
    23f2:	b9 84       	ldd	r11, Y+9	; 0x09
    23f4:	c8 84       	ldd	r12, Y+8	; 0x08
    23f6:	df 80       	ldd	r13, Y+7	; 0x07
    23f8:	ee 80       	ldd	r14, Y+6	; 0x06
    23fa:	fd 80       	ldd	r15, Y+5	; 0x05
    23fc:	0c 81       	ldd	r16, Y+4	; 0x04
    23fe:	1b 81       	ldd	r17, Y+3	; 0x03
    2400:	aa 81       	ldd	r26, Y+2	; 0x02
    2402:	b9 81       	ldd	r27, Y+1	; 0x01
    2404:	ce 0f       	add	r28, r30
    2406:	d1 1d       	adc	r29, r1
    2408:	0f b6       	in	r0, 0x3f	; 63
    240a:	f8 94       	cli
    240c:	de bf       	out	0x3e, r29	; 62
    240e:	0f be       	out	0x3f, r0	; 63
    2410:	cd bf       	out	0x3d, r28	; 61
    2412:	ed 01       	movw	r28, r26
    2414:	08 95       	ret

00002416 <_exit>:
    2416:	f8 94       	cli

00002418 <__stop_program>:
    2418:	ff cf       	rjmp	.-2      	; 0x2418 <__stop_program>
